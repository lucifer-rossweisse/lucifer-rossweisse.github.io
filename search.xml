<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python列表的运用</title>
    <url>/2021/02/01/python%E5%88%97%E8%A1%A8%E7%9A%84%E8%BF%90%E7%94%A8/</url>
    <content><![CDATA[<h2 id="python列表的运用"><a href="#python列表的运用" class="headerlink" title="python列表的运用"></a>python列表的运用</h2><p>列表是python中内置的序列类型，与C语言中的数组有些类似，但实际上python中的列表更像是一种类，其中封装了许多种方法。</p>
<h3 id="1、如何定义一个列表list"><a href="#1、如何定义一个列表list" class="headerlink" title="1、如何定义一个列表list"></a>1、如何定义一个列表list</h3><p>这是最简单的列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201113758182.png"></p>
<p>还可以数字与字符串混搭</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list2 = [<span class="number">1</span>, <span class="string">&#x27;red&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="number">3</span>, <span class="string">&#x27;yellow&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201113806526.png"></p>
<p>甚至可以在列表里加入列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/e6a1a8840f884dd719dc49cd2ac0aa2f.png"></p>
<h3 id="2、列表的使用方法"><a href="#2、列表的使用方法" class="headerlink" title="2、列表的使用方法"></a>2、列表的使用方法</h3><h4 id="1、删除列表元素"><a href="#1、删除列表元素" class="headerlink" title="1、删除列表元素"></a>1、删除列表元素</h4><p>我们可以通过del语句来删除列表中的元素</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> list1[<span class="number">4</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/cffcf388ca09f9c1152bed3187aca396.png"></p>
<p>tips:学过c语言的数组，我们都知道<strong>数组</strong>的下标是从0开始的，同样python中的<strong>列表</strong>也不例外，所以</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> list1[<span class="number">4</span>]</span><br></pre></td></tr></table></figure>
<p>删除的是下标为4的元素</p>
<h4 id="2、列表脚本操作符"><a href="#2、列表脚本操作符" class="headerlink" title="2、列表脚本操作符"></a>2、列表脚本操作符</h4><h5 id="1、长度操作"><a href="#1、长度操作" class="headerlink" title="1、长度操作"></a>1、长度操作</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">len</span>(list1)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/b873434af888df2abe5f73ff6be3d7ca.png"></p>
<h5 id="2、组合操作符"><a href="#2、组合操作符" class="headerlink" title="2、组合操作符"></a>2、组合操作符</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 + [<span class="number">5</span>] 或 [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>] + [<span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021020111382871.png"></p>
<h5 id="3、重复操作符"><a href="#3、重复操作符" class="headerlink" title="3、重复操作符"></a>3、重复操作符</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 * <span class="number">4</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/9129a2667adb0aa5630a45ee35d15996.png"></p>
<h5 id="4、内置迭代器"><a href="#4、内置迭代器" class="headerlink" title="4、内置迭代器"></a>4、内置迭代器</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> list1: print(x, end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/0592770187d406e3d1a9a72037366032.png"></p>
<h5 id="5、判断元素是否存在于表中"><a href="#5、判断元素是否存在于表中" class="headerlink" title="5、判断元素是否存在于表中"></a>5、判断元素是否存在于表中</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="keyword">in</span> list1</span><br><span class="line"><span class="number">5</span> <span class="keyword">not</span> <span class="keyword">in</span> list1</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201113843302.png"></p>
<p>tips：从这看，python这也太人性化了w(ﾟДﾟ)w</p>
<h4 id="3、列表的截取取与拼接"><a href="#3、列表的截取取与拼接" class="headerlink" title="3、列表的截取取与拼接"></a>3、列表的截取取与拼接</h4><h5 id="1、列表的截取"><a href="#1、列表的截取" class="headerlink" title="1、列表的截取"></a>1、列表的截取</h5><p>tips: python中的列表可以正向索引也可以反向索引。</p>
<p><strong>正向索引</strong><br><img src="https://img-blog.csdnimg.cn/20210201113855754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>
<p><strong>反向索引</strong><br><img src="https://img-blog.csdnimg.cn/20210201113931263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>
<p>所以，截取可以正向截取</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201113951193.png"></p>
<p>可以反向截取</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/4887372c3996635cf4fd627a88de57eb.png"></p>
<p>还可以有范围的截取</p>
<p>tips：该范围为左闭右开区间</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1[<span class="number">1</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/7982975c1bcdcdc415a99e2248bec225.png"></p>
<p>甚至可以不加前后范围</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1[<span class="number">1</span>:]</span><br><span class="line">list1[:<span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201114021435.png"></p>
<h5 id="2、列表的拼接"><a href="#2、列表的拼接" class="headerlink" title="2、列表的拼接"></a>2、列表的拼接</h5><p>列表里还支持拼接操作</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 += [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201114052460.png"></p>
<h4 id="4、列表函数"><a href="#4、列表函数" class="headerlink" title="4、列表函数"></a>4、列表函数</h4><h5 id="1、max"><a href="#1、max" class="headerlink" title="1、max()"></a>1、max()</h5><p>返回列表元素最大值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">max</span>(list1)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/4b557e1d41910ac90d7efc4d1a6ea605.png"></p>
<h5 id="2、min"><a href="#2、min" class="headerlink" title="2、min()"></a>2、min()</h5><p>返回列表元素最小值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">min</span>(list1)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/2b6e28cd5ccfaae5831f03044016f828.png"></p>
<h4 id="5、列表方法"><a href="#5、列表方法" class="headerlink" title="5、列表方法"></a>5、列表方法</h4><h5 id="1、list-append-obj"><a href="#1、list-append-obj" class="headerlink" title="1、list.append(obj)"></a>1、list.append(obj)</h5><p>在列表末尾添加新的对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.append(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/197986f29839747d215d40de04b8e512.png"></p>
<h5 id="2、list-count-obj"><a href="#2、list-count-obj" class="headerlink" title="2、list.count(obj)"></a>2、list.count(obj)</h5><p>统计某个元素在列表中出现的次数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.count(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/2be88d94904197ecd299d9df20189625.png"></p>
<h5 id="3、list-extend-seq"><a href="#3、list-extend-seq" class="headerlink" title="3、list.extend(seq)"></a>3、list.extend(seq)</h5><p> 在列表末尾一次性追加另一个序列中的多个值（即用新列表扩展原来的列表）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.extend([<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/eae8df9e0c929655831788391c0340f8.png"></p>
<h5 id="4、list-insert-index-obj"><a href="#4、list-insert-index-obj" class="headerlink" title="4、list.insert(index, obj)"></a>4、list.insert(index, obj)</h5><p>将对象插入列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.insert(<span class="number">1</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/b6b5ec0f8e1185a25d4cbacea2a1e049.png"></p>
<h5 id="5、list-index-obj"><a href="#5、list-index-obj" class="headerlink" title="5、list.index(obj)"></a>5、list.index(obj)</h5><p>从列表中找出某个值第一个匹配项的索引位置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.index(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/a60c93533ddf9915804d32e89c1e0ffe.png"></p>
<p>也可以自定义范围</p>
<p>tips：该范围为左闭右开区间</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.index(<span class="number">3</span>, <span class="number">1</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/b137c26fac142e9456dc28abcf5d4539.png"></p>
<h5 id="6、list-pop-index-1"><a href="#6、list-pop-index-1" class="headerlink" title="6、list.pop([index=-1])"></a>6、list.pop([index=-1])</h5><p>移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = list1.pop()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/b462e494f7b31f2c087f2f28cba64051.png"></p>
<h5 id="7、list-remove-obj"><a href="#7、list-remove-obj" class="headerlink" title="7、list.remove(obj)"></a>7、list.remove(obj)</h5><p>移除列表中某个值的<strong>第一个匹配项</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.remove(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/img_convert/75a91400ec4d101794495e08b1689516.png"></p>
<h5 id="8、list-reverse"><a href="#8、list-reverse" class="headerlink" title="8、list.reverse()"></a>8、list.reverse()</h5><p>反向列表中的元素，但不会排序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.reverse()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201112643577.png"></p>
<h5 id="9、list-sort-key-None-reverse-False"><a href="#9、list-sort-key-None-reverse-False" class="headerlink" title="9、list.sort(key=None, reverse=False)"></a>9、list.sort(key=None, reverse=False)</h5><p>对原列表进行排序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.sort()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/202102011129474.png"><br>也可以反向排序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.sort(reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201113107565.png"></p>
<h5 id="10、list-clear"><a href="#10、list-clear" class="headerlink" title="10、list.clear()"></a>10、list.clear()</h5><p>清空列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.clear()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201113429421.png"></p>
<h5 id="11、list-copy"><a href="#11、list-copy" class="headerlink" title="11、list.copy()"></a>11、list.copy()</h5><p>复制列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1.copy()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210201113614734.png"></p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>github+hexo搭建个人博客教程</title>
    <url>/2021/01/12/github+hexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><ul>
<li>环境搭建<ul>
<li>安装node.js</li>
<li>安装git</li>
<li>安装Hexo</li>
</ul>
</li>
<li>github仓库的创建</li>
<li>githubSSH的配置</li>
<li>sublime的安装使用</li>
<li>Hexo与github连接</li>
<li>Hexo的主题切换</li>
</ul>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><ul>
<li>安装node.js之前请先安装npm并了解相关知识</li>
</ul>
<p>Hexo基于node.js,所以我们需要现在计算机中安装<a href="https://nodejs.org/zh-cn/download/">node.js</a>.<br><img src="https://img-blog.csdnimg.cn/20210111144246737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70">选择windows64位安装包下载，下载完后一路next就好啦。</p>
<p>检查node.js是否安装成功，win+r打开命令窗口，输入node -v<br><img src="https://img-blog.csdnimg.cn/20210112111604710.png" alt="node.js 检测"><br>出现版本号即安装成功</p>
<p>检查npm是否安装成功，在命令窗口下，输入npm -v<br><img src="https://img-blog.csdnimg.cn/20210112111804857.png" alt="npm 检测"><br>出现版本号即安装成功</p>
<p>好啦，到这里Hexo的环境已经搭建完毕了</p>
<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><h3 id="1、git下载"><a href="#1、git下载" class="headerlink" title="1、git下载"></a>1、git下载</h3><p>git的下载可以去官网下载<a href="https://www.git-scm.com/download%EF%BC%8C%E4%BD%86%E6%98%AF%E4%BC%9A%E6%9C%89%E7%82%B9%E6%85%A2%E3%80%82">https://www.git-scm.com/download，但是会有点慢。</a><br>觉得慢的可以去这个网址下载链接：<a href="https://pan.baidu.com/s/1_nBfUmuRlilFQnVeoYALiw">https://pan.baidu.com/s/1_nBfUmuRlilFQnVeoYALiw</a> 提取码：qivu </p>
<h3 id="2、git安装"><a href="#2、git安装" class="headerlink" title="2、git安装"></a>2、git安装</h3><p>1、下载完后双击安装程序Git-2.30.0-64-bit，进入安装界面，点击next：<br><img src="https://img-blog.csdnimg.cn/2021011216423378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>2、选择安装目录：<br><img src="https://img-blog.csdnimg.cn/20210112164344294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、安装配置窗口，包括git命令行、git图形界面等：<br><img src="https://img-blog.csdnimg.cn/20210112164432241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>4、选择开始菜单文件：<br><img src="https://img-blog.csdnimg.cn/20210112164543529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>5、选择git的默认编译器，推荐vim：<br><img src="https://img-blog.csdnimg.cn/20210112164710774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>6、选择仓库的初始名称，选默认就好了：<br><img src="https://img-blog.csdnimg.cn/20210112164917618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>7、选择可以用windows命令行操作，也可用git bash操作：<br><img src="https://img-blog.csdnimg.cn/20210112165043808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>8、HTTPS传输后台，用默认的就行了：<br><img src="https://img-blog.csdnimg.cn/20210112165228493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>9、选择换行符，默认unix格式，如果检测到windows格式则自动转换为unix格式：<br><img src="https://img-blog.csdnimg.cn/20210112165331786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>10、选择配置默认终端：<br><img src="https://img-blog.csdnimg.cn/20210112165500295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>11、选择git pull风格，推荐默认：<br><img src="https://img-blog.csdnimg.cn/20210112165533960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>12、选择凭据管理，推荐默认选项：<br><img src="https://img-blog.csdnimg.cn/20210112165642464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>13、配置额外的选项，选择文件缓存：<br><img src="https://img-blog.csdnimg.cn/20210112165731109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>14、这是新功能，不推荐选择：<br><img src="https://img-blog.csdnimg.cn/20210112165808234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>15、安装中：<br><img src="https://img-blog.csdnimg.cn/20210112165840223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>16、安装成功辣：<br><img src="https://img-blog.csdnimg.cn/20210112165902939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>17、在任意文件夹中，右键即可选择<br>Git GUI为git图形界面工具<br>Git Bash为命令行工具<br><img src="https://img-blog.csdnimg.cn/20210112170126809.png"></p>
<h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><h3 id="Hexo安装-1"><a href="#Hexo安装-1" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>hexo是我们以后用于搭建个人博客的框架，所以最好先新建一个blog文件夹用于博客的管理，且hexo框架与以后写作发布的网页都会保存在这个文件夹当中。<br>创建好之后，打开命令行，切换至创建的文件夹中：<br><img src="https://img-blog.csdnimg.cn/20210112171614641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>使用npm命令安装hexo，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>耐心等待安装完成，安装完成之后，先初始化我们的博客，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init bolg</span><br></pre></td></tr></table></figure>
<p>tips：这些命令必须在我们创建的文件夹中使用。</p>
<p>此时我们检查一下我们网站的雏形，按顺序输入以下三条命令：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> hello Hexo		<span class="comment">//新建一篇名为“hello Hexo”的博客</span></span><br><span class="line">hexo g					<span class="comment">//生成静态文件</span></span><br><span class="line">hexo s					<span class="comment">//本地部署预览</span></span><br></pre></td></tr></table></figure>
<p>到这里我们的网站已经初步成型了，可以输入localhost:4000进行访问。</p>
<h3 id="Hexo的常用命令"><a href="#Hexo的常用命令" class="headerlink" title="Hexo的常用命令"></a>Hexo的常用命令</h3><h4 id="初始化命令"><a href="#初始化命令" class="headerlink" title="初始化命令"></a>初始化命令</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">npm install hexo -g	<span class="comment">//安装hexo</span></span><br><span class="line">npm update hexo -g	<span class="comment">//更新hexo</span></span><br><span class="line">hexo init	<span class="comment">//初始化博客</span></span><br></pre></td></tr></table></figure>
<h4 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;博客名称&quot;</span> = hexo <span class="keyword">new</span> <span class="string">&quot;博客名称&quot;</span>	<span class="comment">//新建一篇博客</span></span><br><span class="line">hexo g = hexo generate	<span class="comment">//生成</span></span><br><span class="line">hexo s = hexo server	<span class="comment">//启动服务器</span></span><br><span class="line">hexo d = hexo deploy	<span class="comment">//部署</span></span><br></pre></td></tr></table></figure>
<h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">hexo server	<span class="comment">//hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s	<span class="comment">//静态模式</span></span><br><span class="line">hexo server -p <span class="number">5000</span>	<span class="comment">//更改端口</span></span><br><span class="line">hexo server -i <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>	<span class="comment">//自定义 IP地址</span></span><br><span class="line">hexo clean	<span class="comment">//清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure>
<h1 id="github仓库的创建"><a href="#github仓库的创建" class="headerlink" title="github仓库的创建"></a>github仓库的创建</h1><p>好了，到这里确保上方操作无误即可进行github仓库的创建(但首先你得先有个github账号哦)。<br>进入github主页，选择左上角的new：<br><img src="https://img-blog.csdnimg.cn/20210112173349599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>进入后输入仓库名称，必须要与owner下的名称一致，输入完后点击创建即可<br>我已经创建过仓库了，所以会提示<br><img src="https://img-blog.csdnimg.cn/20210112173512148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>
<h1 id="githubSSH配置"><a href="#githubSSH配置" class="headerlink" title="githubSSH配置"></a>githubSSH配置</h1><p>搭建完仓库后就开始配置githubSSH。</p>
<p>进入git bash中，按顺序输入如下代码：</p>
<blockquote>
<p>git config –global user.email “<a href="mailto:&#120;&#x78;&#x78;&#64;&#113;&#x71;&#46;&#x63;&#x6f;&#x6d;">&#120;&#x78;&#x78;&#64;&#113;&#x71;&#46;&#x63;&#x6f;&#x6d;</a>“    //填写注册github的邮箱</p>
</blockquote>
<blockquote>
<p>git config –global user.name “xxxx”    //github 用户名</p>
</blockquote>
<blockquote>
<p>ssh-keygen    //输入完这个就一致enter就行了</p>
</blockquote>
<p>然后进入用户目录下的.ssh，打开id_rsa.pub，复制里面的内容。</p>
<p>进入github，新建一个SSH就可以了：</p>
<p><img src="https://img-blog.csdnimg.cn/20210112180408871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>
<h1 id="sublime的安装使用"><a href="#sublime的安装使用" class="headerlink" title="sublime的安装使用"></a>sublime的安装使用</h1><p>sublime是一个好用的文本编辑器。</p>
<p>1、sublime下载<br>可以去官网下载：<a href="http://www.sublimetext.com/3">http://www.sublimetext.com/3</a><br>也可以云盘下载：<a href="https://pan.baidu.com/s/1hRvN9kMWXF56C_5YCVk_iw">https://pan.baidu.com/s/1hRvN9kMWXF56C_5YCVk_iw</a> 提取码：42pf </p>
<p>2、选择一个除C盘外的安装目录：<br><img src="https://img-blog.csdnimg.cn/20210112203141300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、然后点击next，安装完成：<br><img src="https://img-blog.csdnimg.cn/20210112203231376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>4、将博客目录拖入sublime：<br><img src="https://img-blog.csdnimg.cn/20210112210759495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>
<h1 id="Hexo与github连接"><a href="#Hexo与github连接" class="headerlink" title="Hexo与github连接"></a>Hexo与github连接</h1><p>1、在sublime中打开_config.yml，将Deployment改为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:<span class="comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:lucifer-rossweisse/lucifer-rossweisse.github.io.git	</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>其中”repo”内填写github仓库中的SSH链接<br><img src="https://img-blog.csdnimg.cn/20210112211302998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>2、将”url”后改为”<a href="http://github项目名&quot;/">http://github项目名&quot;</a><br><img src="https://img-blog.csdnimg.cn/20210112211442895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、在命令行中输入下列代码，安装插件，上传博客</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">git config --global user.email <span class="string">&quot;github邮箱&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;github用户名&quot;</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>4、在浏览器中输入博客网址，也是github仓库名，即可查看(有时候需要等一会)<br><img src="https://img-blog.csdnimg.cn/20210112211855757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>
<h1 id="Hexo的主题切换"><a href="#Hexo的主题切换" class="headerlink" title="Hexo的主题切换"></a>Hexo的主题切换</h1><p>其实前面已经把重要的部分整完了，最后就换一个自己喜欢的主题就好了。</p>
<p>主题可以从github上搜hexo-them进行查找，比较受欢迎的是next和yilia这两个主题，以next为主，之后主题的切换都可以这么来。</p>
<p>1、进入博客文件夹，打开git bash，输入以下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>安装完后可以看到博客文件夹中的themes里出现了一个next文件夹，这就是我们下载的next主题。<br><img src="https://img-blog.csdnimg.cn/20210112212458400.png"><br>2、修改主题配置文件，进入博客文件夹中的_config.yml修改主题<br><img src="https://img-blog.csdnimg.cn/20210112212618350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"><br>3、然后先在本地测试一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210112212918907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxNTAxNzM5,size_16,color_FFFFFF,t_70"></p>
<p>4、最后直接上传发布博客就好了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>注意：hexo在5.0之后把swig给删除了，需要自己手动安装，不然安装next主题后会显示错误<br>输入下面这串代码安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure>
<p>然后hexo c清理缓存，hexo g &amp; s即可。</p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>全部的搭建步骤已经讲完了，写篇博客其实只是为了记录一下自己学习的搭建过程，如果对你有帮助的话，可以分享给你的朋友哦(￣▽￣)”</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象思想学习</title>
    <url>/2021/01/26/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="面向对象思想学习"><a href="#面向对象思想学习" class="headerlink" title="面向对象思想学习"></a>面向对象思想学习</h1><h2 id="面向对象主要包括七个关键词"><a href="#面向对象主要包括七个关键词" class="headerlink" title="面向对象主要包括七个关键词"></a>面向对象主要包括七个关键词</h2><p>这七个关键词为：数据、方法、对象、类、封装、继承、多态。</p>
<h3 id="1、数据"><a href="#1、数据" class="headerlink" title="1、数据"></a>1、数据</h3><p>根据百度百科得知，数据(data)是信息的<strong>表现形式</strong>和<strong>载体</strong>，是事实或观察的结果，是对客观事物的逻辑归纳，是用于表示客观事物的未经加工的原始素材。<br>例如：学生的档案信息，数字：0，1，2，3等，天气预报上的气温温度，诸如此类都可称为数据。<br>而数据进行加工后，就形成了信息。在计算机中，数据是以二进制信息单元0，1进行表示。</p>
<h3 id="2、方法"><a href="#2、方法" class="headerlink" title="2、方法"></a>2、方法</h3><p>方法的基本解析是指为获得某种东西或达到某种目的而采取的<strong>途径</strong>，<strong>步骤</strong>和<strong>手段</strong>，而在软件编程语言中，如果将函数定义为类的一部分或者将函数与某个对象绑定，那么该函数就称之为<strong>方法</strong>。<br>方法简单来说，就是你写ACM题的时候自己写的算法，就像为了减少程序运行时间，为了防止TLE，有时候需要自己写一个快速幂函数，这就可以称作方法，为了达成某种目的而去制作能达成这个目的的方式。d=====(￣▽￣*)b</p>
<h3 id="3、对象"><a href="#3、对象" class="headerlink" title="3、对象"></a>3、对象</h3><p>对象的基本解析是特定人或物，在计算机语言中表现为客观世界中真实存在的人或者物体，在计算机中的逻辑映射。<br>对象可以理解为，在生活中，每个人都是一个对象，每件东西也都是一个对象，可以说<strong>万物皆对象</strong>。在面向对象编程语言中，对象是系统中的基本运行实体，是代码和数据的集合。</p>
<h3 id="4、类"><a href="#4、类" class="headerlink" title="4、类"></a>4、类</h3><p>类简单来说就是分类。在面向对象中，类是实现信息封装的基础，类是一种引用数据类型，也称类类型。每个类包含数据说明和一组操作数据的方法，而上面说的对象则是类的一种实例。<br>举个例子，人类就是一个基本的类类型，而每个人则是这个类类型的实例，也就是对象，人类这个类包含有姓名、性别、年龄等等这些<strong>数据</strong>说明，同时也有走路、吃饭、工作这些传递能量信息的<strong>方法</strong>。</p>
<h3 id="5、封装"><a href="#5、封装" class="headerlink" title="5、封装"></a>5、封装</h3><p>封装是对某一类事物进行抽象描述。封装是个动词，通过将姓名、性别、年龄等这些属性抽象到人类这个类类型的过程就叫封装。当我们一说到人类，就能联想到这个人叫什么名字、是男是女、多大年纪等等。同时封装也能隐藏人身上的一些特殊属性，比如：这个人身上有多少钱，这是我们不可得知的。</p>
<h3 id="6、继承"><a href="#6、继承" class="headerlink" title="6、继承"></a>6、继承</h3><p>继承就是子类继承父类的特征行为，使得子类对象（实例）具有父类的属性和方法，或子类从父类继承方法，使得子类具有父类相同的行为。同时，子类不仅可以继承父类全部的功能，还可以创建增加新数据、新功能。</p>
<blockquote>
<p>注意：子类继承父类的功能时，不能选择性的继承父类的部分功能，继承是类与类之间的关系，不是对象与对象之间的关系。</p>
</blockquote>
<p>例如：你自己，继承了你父亲的姓名，性别，年龄等这些<strong>属性</strong>，但是你在继承这些属性的同时增加了你会写代码的这么一个方法，而这个写代码的方法是你自己独有的，你的父亲并不具备这个写代码的这个功能。这就是继承。</p>
<h3 id="7、多态"><a href="#7、多态" class="headerlink" title="7、多态"></a>7、多态</h3><p>讲多态前，需要知道接口这一知识点。<br>接口，是一种特殊的类，在这个类中指定必须做什么，但不用规定它如何去做，而多态就是以多种方式告诉这个接口类该如何去做。</p>
<blockquote>
<p>例如：定义一个接口类，这个类中只有一个吃饭的方法，所以我们可以知道这个类中必须要做吃饭这件事，但是吃什么，怎么吃，在哪里吃？这里就可以通过多态来实现了，我们可以再定义两个类去实现这个接口，一个类告诉它我要去中餐厅用筷子吃鱼，另一个类告诉它我要去西餐厅用刀叉吃牛排</p>
</blockquote>
<p>简而言之，多态就是自定义多个方法使接口类实现一件事情的达成。φ(*￣0￣)</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>面向对象其实就是环绕类进行拓展，将数据、方法封装进类中，而类又可以创建对象。多态则可以使类增加多种不同的方法，而继承可以使类在原有基础上进行扩展，使类拥有更多的属性、方法。</p>
]]></content>
      <tags>
        <tag>other</tag>
      </tags>
  </entry>
</search>
